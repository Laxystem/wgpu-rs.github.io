var searchIndex = new Map(JSON.parse('[\
["hlsl_snapshots",{"doc":"","t":"FFNNNNONNNONNONNNNNNNNONNNNNNNO","n":["Config","ConfigItem","borrow","borrow","borrow_mut","borrow_mut","compute","de_ron","de_ron","empty","entry_point","fmt","fmt","fragment","from","from","from_path","into","into","is_empty","ser_ron","ser_ron","target_profile","to_file","try_from","try_from","try_into","try_into","type_id","type_id","vertex"],"q":[[0,"hlsl_snapshots"],[31,"nanoserde::serde_ron"],[32,"core::str::iter"],[33,"nanoserde::serde_ron"],[34,"core::fmt"],[35,"core::fmt"],[36,"std::path"],[37,"core::convert"],[38,"nanoserde::serde_ron"]],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","See also …","","","","","","","",""],"i":[0,0,3,6,3,6,3,3,6,3,6,3,6,3,3,6,3,3,6,3,3,6,6,3,3,6,3,6,3,6,3],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[1,2],[[5,[3,4]]]],[[1,2],[[5,[6,4]]]],[[],3],0,[[3,7],8],[[6,7],8],0,[-1,-1,[]],[-1,-1,[]],[-1,[[9,[3]]],[[11,[10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[3,12],[[3,13,14],15],[[6,13,14],15],0,[[3,-1],[[9,[15]]],[[11,[10]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],0],"c":[],"p":[[5,"DeRonState",31],[5,"Chars",32],[5,"Config",0],[5,"DeRonErr",31],[6,"Result",33],[5,"ConfigItem",0],[5,"Formatter",34],[8,"Result",34],[8,"Result",35],[5,"Path",36],[10,"AsRef",37],[1,"bool"],[1,"usize"],[5,"SerRonState",31],[1,"tuple"],[5,"TypeId",38]],"b":[]}],\
["naga",{"doc":"Universal shader translator.","t":"TTSPPPPPPPPPPPPPGPPPPPPPFPPGPPPPPPPPPGPPTSFPPPPPPPGGPPFPPPPPPGPIPPPPPPPPGPPGFPPPPPPPPPPPPPPPPPPGGPPPPPPFPPFPPPPPPPPGPPTPTPIIIIPPPPPPPPPPPPPPFPFPFGPFPPPPPFPPPTPTPPGGPGPPPPPPPPPGPPPPPTPPPPPPGPPPPFPPPPPPPPPGPPPPPPPPPPFPPPPPPPPPPPPPPFPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPFPPGPPPPPPGFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPTTTPPGPPPGPFPGPGPPPPPPPPPPPPFFIFPPGPPPFGPPFPPPPPPGPPPPPFGPGPPPPPPFGPPTPTTPPGPPFPPPPPPPPPGPPPPTPFPPPPPPPTPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNCNOOOOONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOONNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNOOOONNNOOOOOOOOOONNNNNNNNNNNOONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNOONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNCONONNNONNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPSTTTTPPFGSFTITIFGTTTTPNNHNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNOONNNNNNNNNNNNNNNNNNCCONNNNNNNNNNNNNNNCNONCNNNCNNNNNNNNNNNNNNNNNONNNNNNCFNNONNNNNNNNNHTTTITTTTTPTTTTPPPGSTTFPPTTTTPTTTPPTFPFFFTTTSSTTTTFPPFGPFFONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNONONNONNNNNNONNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNOONOOOOFIPGGFPPFPFGPPPPPPPPPPPPFOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOFGFIPGIFGPPPPPPPPPPIPPPPFPFPPPPPPPPPIPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPFGFOOONNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNOONOOOOCONNNNNNNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONHOGPGPPPGGPGPPFPPPPPPPPPPPPPONNNNNONNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPGPPNNNNNNNNNNHNNNNNNTTPPPPPPPPPPPPPPFIPPPTPPGPPPPPPPTTFPPTPPPPPPPPTPTPTTPPPGPTPPPPPPPPPPPPPPPPPPPPPTPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFPPPTPTPPPPPPPPPTPPPPTPPPPPPPPPPPPPPPFPPPTPFPPPPPPPPPPPPPPPPPPPTTPPPPPPPPPTPPPPPPPTPPPPTPTPPGPPPPPPPTPPTPPPPPPPPTPTTTPPPPPPPPPPPPPPPPPPPPPPPPTPPTPTPPPPPPPPPPPPTTPPPPFFGNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOPTGPPPPFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHPFPGPPGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNONNNNNNNNNFNNNNNNNNNNONONONNNNNFFNNCNNNNNNNNNNNCNNNNNNNNNNNCNNNNNNCGPPPPNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPFGGPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFPPFPPGPPPGPPPPPPPPPPPPFPPPPPPPPGPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPPPPPPPGPPPFPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPFSSSPPPPPPPPPPPPPPPPPPPPPPPPPPPOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNONNNNNNNNNNNNNNNNNNNNOOOOFFNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNCSPPFPPPPPPEEPPPFGPPTFPPIPGFPPTPPPPPPPFPPPGPPPPPEEPPPPPPPPPPPPPPPPPPFGFPPPTPGFPPTPPPPPSPPFGPPTPPPPPPPTPFPGPPPPOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNHNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNCNONNNNNNNNNNNNNNNNNNNNNNNNONNNNOONNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNOONNOOOOOOOOOOOOFGPPGGGPPPPPPPHONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNTTPPPPPPPTTTTPPPPTTTTTTTTGFPPPPPGPPPPGPGPPTTTGPPTTPPPGPPPPPPPGFPTTPPPPGFFPGTTTPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPGTTPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGTTPPTTTPPPPTTTTTTTTTTTTTFPPFPPPPGFPTPPFFPPPPPPPTTGFFGTTPPGPPPPNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNONNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["ABSTRACT_FLOAT","ABSTRACT_INT","ABSTRACT_WIDTH","Abs","AbstractFloat","AbstractFloat","AbstractInt","AbstractInt","AccelerationStructure","Access","AccessIndex","Acos","Acosh","Add","Add","Add","AddressSpace","All","All","And","And","And","Any","Any","Arena","Array","ArrayLength","ArraySize","As","Asin","Asinh","Atan","Atan2","Atanh","Atomic","Atomic","AtomicCompareExchangeWeakResult","AtomicFunction","AtomicResult","Auto","BOOL","BOOL_WIDTH","Barrier","Barrier","BaseInstance","BaseVertex","Bgra8Unorm","Bi","Bias","Binary","BinaryOperator","Binding","BindingArray","BitwiseNot","Block","Block","Bool","Bool","Break","Broadcast","BroadcastFirst","BuiltIn","BuiltIn","Bytes","Call","CallResult","Ceil","Center","Centroid","Clamp","ClipDistance","Coarse","CollectiveOperation","Compose","Compute","ConservativeDepth","Constant","Constant","Constant","Continue","Cos","Cosh","CountLeadingZeros","CountOneBits","CountTrailingZeros","Cross","Cube","CullDistance","D1","D2","D3","Default","Degrees","Depth","Derivative","DerivativeAxis","DerivativeControl","Determinant","Distance","Divide","Dot","DrawID","Dynamic","EarlyDepthTest","Either","Emit","EntryPoint","Equal","Exact","Exchange","ExclusiveOr","ExclusiveOr","ExclusiveScan","Exp","Exp2","Expression","ExtractBits","F32","F32","F64","F64","FaceForward","FastHashMap","FastHashSet","FastIndexMap","FastIndexSet","Fine","First","FirstLeadingBit","FirstTrailingBit","Flat","Float","Floor","Fma","Fract","FragDepth","Fragment","Frexp","FrexpResult","FrontFacing","Function","Function","FunctionArgument","FunctionArgument","FunctionResult","GatherMode","GlobalInvocationId","GlobalVariable","GlobalVariable","Gradient","Greater","GreaterEqual","GreaterEqual","Handle","Handle","I32","I32","I32","I64","I64","If","Image","ImageClass","ImageDimension","ImageLoad","ImageQuery","ImageQuery","ImageSample","ImageStore","InclusiveOr","InclusiveOr","InclusiveScan","Initialize","InsertBits","InstanceIndex","Interpolation","Inverse","InverseSqrt","IsInf","IsNan","Kill","LOAD","Ldexp","Length","Less","LessEqual","LessEqual","Linear","Literal","Literal","Load","LocalInvocationId","LocalInvocationIndex","LocalVariable","LocalVariable","Location","Log","Log2","LogicalAnd","LogicalNot","LogicalOr","Loop","Math","MathFunction","Matrix","Max","Max","Max","Min","Min","Min","Mix","Modf","ModfResult","Module","Modulo","Mul","Multiply","Negate","None","Normalize","NotEqual","NumLayers","NumLevels","NumSamples","NumSubgroups","NumWorkGroups","Or","Outer","Override","Override","Pack2x16float","Pack2x16snorm","Pack2x16unorm","Pack4x8snorm","Pack4x8unorm","Pack4xI8","Pack4xU8","Perspective","PointCoord","PointSize","Pointer","Position","Pow","PredeclaredType","PrimitiveIndex","Private","Proceed","PushConstant","Quad","R16Float","R16Sint","R16Snorm","R16Uint","R16Unorm","R32Float","R32Sint","R32Uint","R8Sint","R8Snorm","R8Uint","R8Unorm","Radians","Range","RayQuery","RayQuery","RayQueryFunction","RayQueryGetIntersection","RayQueryProceedResult","Reduce","Reflect","Refract","Relational","RelationalFunction","ResourceBinding","Return","ReverseBits","Rg11b10Ufloat","Rg16Float","Rg16Sint","Rg16Snorm","Rg16Uint","Rg16Unorm","Rg32Float","Rg32Sint","Rg32Uint","Rg8Sint","Rg8Snorm","Rg8Uint","Rg8Unorm","Rgb10a2Uint","Rgb10a2Unorm","Rgba16Float","Rgba16Sint","Rgba16Snorm","Rgba16Uint","Rgba16Unorm","Rgba32Float","Rgba32Sint","Rgba32Uint","Rgba8Sint","Rgba8Snorm","Rgba8Uint","Rgba8Unorm","Round","STORAGE","STORE","SUB_GROUP","Sample","SampleIndex","SampleLevel","SampleMask","Sampled","Sampler","Sampling","Saturate","Scalar","Scalar","ScalarKind","Select","ShaderStage","ShiftLeft","ShiftRight","Shuffle","ShuffleDown","ShuffleUp","ShuffleXor","Sign","Sin","Sinh","Sint","Size","SmoothStep","SourceLocation","Span","SpanContext","SpecialTypes","Splat","Sqrt","Statement","Step","Storage","Storage","StorageAccess","StorageFormat","Store","Struct","StructMember","SubgroupBallot","SubgroupBallotResult","SubgroupCollectiveOperation","SubgroupGather","SubgroupId","SubgroupInvocationId","SubgroupOperation","SubgroupOperationResult","SubgroupSize","Subtract","Subtract","Switch","SwitchCase","SwitchValue","Swizzle","SwizzleComponent","Tan","Tanh","Terminate","Transpose","Tri","Trunc","Type","TypeInner","U32","U32","U32","U64","U64","UNDEFINED","Uint","Unary","UnaryOperator","Unchanged","Uniform","UniqueArena","Unpack2x16float","Unpack2x16snorm","Unpack2x16unorm","Unpack4x8snorm","Unpack4x8unorm","Unpack4xI8","Unpack4xU8","ValuePointer","Vector","VectorSize","Vertex","VertexIndex","ViewIndex","W","WORK_GROUP","Width","WithSpan","WorkGroup","WorkGroupId","WorkGroupSize","WorkGroupUniformLoad","WorkGroupUniformLoadResult","X","X","XYZW","Xor","Y","Y","Z","Zero","ZeroValue","access","all","all","and_then","append","append","apply_default_interpolation","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","argument_count","arguments","as_inner","automatic_conversion_combine","automatically_converts_to","back","bake_ref_count","binding","binding","binding","binding","binding","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonical_form","check_contains_handle","check_contains_handle","check_contains_range","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compact","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","complement","complement","component_type","components","conservative","constants","contains","contains","cull","default","default","default","default","default","default","default","default","default","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagnostic_filter","difference","difference","drain","early_depth_test","emit_to_stderr","emit_to_stderr_with_path","emit_to_string","emit_to_string_with_path","empty","empty","entry_points","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","expressions","extend","extend","extend","extend_block","fall_through","fetch_if","fetch_if_or_append","fetch_or_append","first_and_last","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_index","from_index_range","from_iter","from_iter","from_name","from_name","from_vec","front","function","functions","generate_predeclared_type","generate_ray_desc_type","generate_ray_intersection_type","get","get_handle","get_mut","get_span","get_span","global_expressions","global_variables","group","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","implicit_derivatives","index","index","index","index","index","index_mut","index_range","indexable_length","init","init","init","init","inner","insert","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_other","is_abstract","is_all","is_all","is_atomic_pointer","is_defined","is_depth","is_dynamic_index","is_dynamically_sized","is_empty","is_empty","is_empty","is_empty","is_empty","is_handle","is_mipmapped","is_multisampled","is_numeric","is_terminator","iter","iter","iter","iter","iter_mut","iter_names","iter_names","keywords","kind","len","len","len","length","line_number","line_position","local_variables","location","location","map","name","name","name","name","name","name","name","name","name","named_expressions","needs_pre_emit","new","new","new","new","new","new","new_from_bounds","next","not","not","offset","offset","one","originating_global","overrides","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pointer_space","predeclared_types","proc","push","range_from","ray_desc","ray_intersection","remove","remove","replace","result","scalar","scalar","scalar_kind","scalar_kind","scalar_width","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","size","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","space","span_into_iter","span_iter","span_iter_mut","spans","special_types","splice","stage","sub","sub","sub_assign","sub_assign","subsume","symmetric_difference","symmetric_difference","to_built_in","to_ctx","to_hlsl_str","to_indexable_length","to_inner_atomic","to_inner_scalar","to_inner_vector","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_range","to_string","to_wgsl","to_wgsl","to_wgsl","to_wgsl","toggle","toggle","total_span","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","ty","ty","ty","ty","ty","ty_inner","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","union","union","until","valid","value","width","width","with_capacity","with_context","with_span","workgroup_size","write_prefixed","zero","access","compare","interpolation","location","sampling","second_blend_source","invariant","accept","arg","arg1","arg2","arg3","argument","array_index","array_index","axis","base","base","committed","comparison","components","condition","convert","coordinate","coordinate","ctrl","depth_ref","expr","expr","expr","fun","fun","gather","image","image","image","index","index","kind","left","level","level","offset","op","op","pattern","pointer","query","query","reject","right","sample","sampler","size","size","ty","ty","ty","ty","value","vector","access","format","kind","multi","multi","level","size","size","width","width","acceleration_structure","descriptor","result","x","y","accept","argument","argument","arguments","array_index","body","break_if","cases","collective_op","condition","continuing","coordinate","fun","fun","function","image","mode","op","pointer","pointer","pointer","predicate","query","reject","result","result","result","result","result","result","selector","value","value","value","value","arrayed","base","base","base","class","columns","comparison","dim","members","rows","scalar","scalar","scalar","size","size","size","size","space","space","span","stride","BoundingBox","COMPONENTS","CULL_BACK_FACING","CULL_FRONT_FACING","CULL_NO_OPAQUE","CULL_OPAQUE","EntryPoint","Function","FunctionCtx","FunctionType","INDENT","Level","NO_OPAQUE","NeedBakeExpressions","OPAQUE","PipelineConstants","RayFlag","RayIntersectionType","SKIP_AABBS","SKIP_CLOSEST_HIT_SHADER","SKIP_TRIANGLES","TERMINATE_ON_FIRST_HIT","Triangle","all","argument_key","binary_operation_str","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","complement","contains","default","difference","dot","empty","eq","equivalent","equivalent","equivalent","expr_kind_tracker","expressions","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","glsl","hlsl","info","insert","intersection","intersects","into","into","into","into","into","into_iter","is_all","is_compute_entry_point","is_empty","is_fixed_function_input","iter","iter_names","msl","name_key","named_expressions","not","pipeline_constants","remove","resolve_type","set","spv","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","union","wgsl","Options","borrow","borrow_mut","cfg_only","clone","clone_into","default","from","into","to_owned","try_from","try_into","type_id","write","ADJUST_COORDINATE_SPACE","ARRAY_OF_ARRAYS","BUFFER_STORAGE","BindingMap","CLIP_DISTANCE","COMPUTE_SHADER","CONSERVATIVE_DEPTH","CUBE_TEXTURES_ARRAY","CULL_DISTANCE","Custom","DOUBLE_TYPE","DRAW_PARAMETERS","DUAL_SOURCE_BLENDING","DYNAMIC_ARRAY_SIZE","Desktop","Embedded","EntryPointNotFound","Error","FIRST_INSTANCE_BINDING","FORCE_POINT_SIZE","FULL_IMAGE_FORMATS","Features","FirstSamplingNotSupported","FmtError","IMAGE_LOAD_STORE","IMAGE_SIZE","INCLUDE_UNUSED_ITEMS","INSTANCE_INDEX","ImageMultipleSamplers","MULTISAMPLED_TEXTURES","MULTISAMPLED_TEXTURE_ARRAYS","MULTI_VIEW","MissingFeatures","MultiplePushConstants","NOPERSPECTIVE_QUALIFIER","Options","Override","PipelineOptions","PushConstantItem","ReflectionInfo","SAMPLE_QUALIFIER","SAMPLE_VARIABLES","SUBGROUP_OPERATIONS","SUPPORTED_CORE_VERSIONS","SUPPORTED_ES_VERSIONS","TEXTURE_LEVELS","TEXTURE_SAMPLES","TEXTURE_SHADOW_LOD","TEXTURE_SHADOW_LOD","TextureMapping","UnsupportedExternal","UnsupportedScalar","VaryingLocation","Version","VersionNotSupported","Writer","WriterFlags","access_path","all","all","binding_map","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","contains","contains","default","deserialize","deserialize","deserialize","deserialize","difference","difference","empty","empty","entry_point","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","index","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","location","multiview","new","new_gles","not","not","offset","partial_cmp","push_constant_items","remove","remove","sampler","serialize","serialize","serialize","serialize","set","set","shader_stage","source","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","texture","texture_mapping","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniforms","union","union","varying","version","write","writer_flags","zero_initialize_workgroup_memory","is_webgl","version","BindTarget","BindingMap","Custom","EntryPointError","Error","FragmentEntryPoint","IoError","MissingBinding","Options","Override","ReflectionInfo","ShaderModel","Unimplemented","UnsupportedScalar","V5_0","V5_1","V6_0","V6_1","V6_2","V6_3","V6_4","V6_5","V6_6","V6_7","Writer","binding_array_size","binding_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","deserialize","deserialize","deserialize","deserialize","entry_point_names","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fake_missing_bindings","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","hash","hash","hash","into","into","into","into","into","into","into","into","new","new","partial_cmp","push_constants_target","register","restrict_indexing","serialize","serialize","serialize","serialize","shader_model","source","space","special_constants_binding","to_owned","to_owned","to_owned","to_owned","to_str","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","zero_initialize_workgroup_memory","AttributeMapping","BindSamplerTarget","BindTarget","BindingMap","CapabilityNotSupported","EntryPointError","EntryPointResourceMap","EntryPointResources","Error","FeatureNotImplemented","Float16x2","Float16x4","Float32","Float32x2","Float32x3","Float32x4","Format","GenericValidation","Inline","InlineSamplerIndex","MissingBindTarget","MissingBinding","MissingPushConstants","MissingSizesBuffer","Options","Override","PipelineOptions","Resource","Sint16x2","Sint16x4","Sint32","Sint32x2","Sint32x3","Sint32x4","Sint8x2","Sint8x4","Slot","Snorm16x2","Snorm16x4","Snorm8x2","Snorm8x4","TranslationInfo","Uint16x2","Uint16x4","Uint32","Uint32x2","Uint32x3","Uint32x4","Uint8x2","Uint8x4","UnimplementedBindTarget","Unorm10_10_10_2","Unorm16x2","Unorm16x4","Unorm8x2","Unorm8x4","UnsupportedArrayOf","UnsupportedArrayOfType","UnsupportedAttribute","UnsupportedBinaryOp","UnsupportedBuiltIn","UnsupportedCall","UnsupportedCompose","UnsupportedFunction","UnsupportedRWStorageTexture","UnsupportedRayTracing","UnsupportedWriteableStorageBuffer","UnsupportedWriteableStorageTexture","VertexBufferMapping","VertexFormat","Writer","allow_and_force_point_size","attributes","binding_array_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds_check_policies","buffer","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","entry_point_names","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fake_missing_bindings","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","id","indexed_by_vertex","inline_samplers","into","into","into","into","into","into","into","into","into","into","into","into","lang_version","mutable","new","offset","per_entry_point_map","push_constant_buffer","resources","sampler","sampler","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shader_location","sizes_buffer","source","spirv_cross_compatibility","stride","texture","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vertex_buffer_mappings","vertex_pulling_transform","write","write_string","zero_initialize_workgroup_memory","Address","Always","BorderColor","ClampToBorder","ClampToEdge","ClampToZero","CompareFunc","Coord","Equal","Filter","Greater","GreaterEqual","InlineSampler","Less","LessEqual","Linear","MirroredRepeat","Nearest","Never","Normalized","NotEqual","OpaqueBlack","OpaqueWhite","Pixel","Repeat","TransparentBlack","address","as_str","as_str","as_str","as_str","as_str","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compare_func","coord","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","lod_clamp","mag_filter","max_anisotropy","min_filter","mip_filter","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","ConstantEvaluatorError","DstRangeTooSmall","MissingValue","PipelineConstantError","SrcNeedsToBeFinite","ValidationError","borrow","borrow_mut","clone","clone_into","fmt","fmt","from","from","from","into","process_overrides","source","to_owned","to_string","try_from","try_into","type_id","ADJUST_COORDINATE_SPACE","ARRAYED","Addresses","ArbitraryPrecisionFixedPointINTEL","ArbitraryPrecisionFloatingPointINTEL","ArbitraryPrecisionIntegersINTEL","AsmINTEL","AtomicFloat16AddEXT","AtomicFloat16MinMaxEXT","AtomicFloat32AddEXT","AtomicFloat32MinMaxEXT","AtomicFloat64AddEXT","AtomicFloat64MinMaxEXT","AtomicStorage","AtomicStorageOps","BFloat16ConversionINTEL","BindingInfo","BindingMap","BindlessTextureNV","BitInstructions","BlockingPipesINTEL","CLAMP_FRAG_DEPTH","CPP_for_OpenCL","CacheControlsINTEL","Capability","ClipDistance","ComputeDerivativeGroupLinearNV","ComputeDerivativeGroupQuadsNV","CooperativeMatrixKHR","CooperativeMatrixNV","CoreBuiltinsARM","CullDistance","DEBUG","DEPTH","DebugInfo","DebugInfoModuleINTEL","DemoteToHelperInvocation","DemoteToHelperInvocationEXT","DenormFlushToZero","DenormPreserve","DerivativeControl","DeviceEnqueue","DeviceGroup","DisplacementMicromapNV","DotProduct","DotProductInput4x8Bit","DotProductInput4x8BitKHR","DotProductInput4x8BitPacked","DotProductInput4x8BitPackedKHR","DotProductInputAll","DotProductInputAllKHR","DotProductKHR","DrawParameters","ESSL","EntryPointNotFound","Error","ExpectAssumeKHR","FORCE_POINT_SIZE","FPFastMathModeINTEL","FPGAArgumentInterfacesINTEL","FPGABufferLocationINTEL","FPGAClusterAttributesINTEL","FPGADSPControlINTEL","FPGAInvocationPipeliningAttributesINTEL","FPGAKernelAttributesINTEL","FPGAKernelAttributesv2INTEL","FPGALatencyControlINTEL","FPGALoopControlsINTEL","FPGAMemoryAccessesINTEL","FPGAMemoryAttributesINTEL","FPGARegINTEL","FPMaxErrorINTEL","FeatureNotImplemented","Float16","Float16Buffer","Float16ImageAMD","Float64","FloatingPointModeINTEL","FragmentBarycentricKHR","FragmentBarycentricNV","FragmentDensityEXT","FragmentFullyCoveredEXT","FragmentMaskAMD","FragmentShaderPixelInterlockEXT","FragmentShaderSampleInterlockEXT","FragmentShaderShadingRateInterlockEXT","FragmentShadingRateKHR","FunctionFloatControlINTEL","FunctionPointersINTEL","GLSL","GenericPointer","Geometry","GeometryPointSize","GeometryShaderPassthroughNV","GeometryStreams","GlobalVariableFPGADecorationsINTEL","GlobalVariableHostAccessINTEL","GroupNonUniform","GroupNonUniformArithmetic","GroupNonUniformBallot","GroupNonUniformClustered","GroupNonUniformPartitionedNV","GroupNonUniformQuad","GroupNonUniformRotateKHR","GroupNonUniformShuffle","GroupNonUniformShuffleRelative","GroupNonUniformVote","GroupUniformArithmeticKHR","Groups","HERO_C","HLSL","IOPipesINTEL","Image1D","ImageBasic","ImageBuffer","ImageCubeArray","ImageFootprintNV","ImageGatherBiasLodAMD","ImageGatherExtended","ImageMSArray","ImageMipmap","ImageQuery","ImageReadWrite","ImageReadWriteLodAMD","ImageRect","ImageTypeFlags","IndirectReferencesINTEL","InputAttachment","InputAttachmentArrayDynamicIndexing","InputAttachmentArrayDynamicIndexingEXT","InputAttachmentArrayNonUniformIndexing","InputAttachmentArrayNonUniformIndexingEXT","Int16","Int64","Int64Atomics","Int64ImageEXT","Int8","IntegerFunctions2INTEL","InterpolationFunction","Kernel","KernelAttributesINTEL","LABEL_VARYINGS","Linkage","LiteralSampler","LongConstantCompositeINTEL","LoopFuseINTEL","MULTISAMPLED","Matrix","MemoryAccessAliasingINTEL","MeshShadingEXT","MeshShadingNV","MinLod","MissingCapabilities","MultiView","MultiViewport","NZSL","NamedBarrier","Native","None","OpenCL_C","OpenCL_CPP","OptNoneINTEL","Options","Override","PerViewAttributesNV","PhysicalStorageBufferAddresses","PhysicalStorageBufferAddressesEXT","PipeStorage","PipelineOptions","Pipes","Polyfill","RayCullMaskKHR","RayQueryKHR","RayQueryPositionFetchKHR","RayQueryProvisionalKHR","RayTracingDisplacementMicromapNV","RayTracingKHR","RayTracingMotionBlurNV","RayTracingNV","RayTracingOpacityMicromapEXT","RayTracingPositionFetchKHR","RayTracingProvisionalKHR","RayTraversalPrimitiveCullingKHR","RoundToInfinityINTEL","RoundingModeRTE","RoundingModeRTZ","RuntimeAlignedAttributeINTEL","RuntimeDescriptorArray","RuntimeDescriptorArrayEXT","SAMPLED","SYCL","SampleMaskOverrideCoverageNV","SampleMaskPostDepthCoverage","SampleRateShading","Sampled1D","SampledBuffer","SampledCubeArray","SampledImageArrayDynamicIndexing","SampledImageArrayNonUniformIndexing","SampledImageArrayNonUniformIndexingEXT","SampledRect","Shader","ShaderClockKHR","ShaderEnqueueAMDX","ShaderInvocationReorderNV","ShaderLayer","ShaderNonUniform","ShaderNonUniformEXT","ShaderSMBuiltinsNV","ShaderStereoViewNV","ShaderViewportIndex","ShaderViewportIndexLayerEXT","ShaderViewportIndexLayerNV","ShaderViewportMaskNV","ShadingRateNV","SignedZeroInfNanPreserve","Slang","SourceLanguage","SparseResidency","SplitBarrierINTEL","StencilExportEXT","StorageBuffer16BitAccess","StorageBuffer8BitAccess","StorageBufferArrayDynamicIndexing","StorageBufferArrayNonUniformIndexing","StorageBufferArrayNonUniformIndexingEXT","StorageImageArrayDynamicIndexing","StorageImageArrayNonUniformIndexing","StorageImageArrayNonUniformIndexingEXT","StorageImageExtendedFormats","StorageImageMultisample","StorageImageReadWithoutFormat","StorageImageWriteWithoutFormat","StorageInputOutput16","StoragePushConstant16","StoragePushConstant8","StorageTexelBufferArrayDynamicIndexing","StorageTexelBufferArrayDynamicIndexingEXT","StorageTexelBufferArrayNonUniformIndexing","StorageTexelBufferArrayNonUniformIndexingEXT","StorageUniform16","StorageUniformBufferBlock16","SubgroupAvcMotionEstimationChromaINTEL","SubgroupAvcMotionEstimationINTEL","SubgroupAvcMotionEstimationIntraINTEL","SubgroupBallotKHR","SubgroupBufferBlockIOINTEL","SubgroupDispatch","SubgroupImageBlockIOINTEL","SubgroupImageMediaBlockIOINTEL","SubgroupShuffleINTEL","SubgroupVoteKHR","Tessellation","TessellationPointSize","TextureBlockMatchQCOM","TextureBoxFilterQCOM","TextureSampleWeightedQCOM","TileImageColorReadAccessEXT","TileImageDepthReadAccessEXT","TileImageStencilReadAccessEXT","TransformFeedback","USMStorageClassesINTEL","UniformAndStorageBuffer16BitAccess","UniformAndStorageBuffer8BitAccess","UniformBufferArrayDynamicIndexing","UniformBufferArrayNonUniformIndexing","UniformBufferArrayNonUniformIndexingEXT","UniformDecoration","UniformTexelBufferArrayDynamicIndexing","UniformTexelBufferArrayDynamicIndexingEXT","UniformTexelBufferArrayNonUniformIndexing","UniformTexelBufferArrayNonUniformIndexingEXT","Unknown","UnstructuredLoopControlsINTEL","UnsupportedVersion","Validation","VariableLengthArrayINTEL","VariablePointers","VariablePointersStorageBuffer","Vector16","VectorAnyINTEL","VectorComputeINTEL","VulkanMemoryModel","VulkanMemoryModelDeviceScope","VulkanMemoryModelDeviceScopeKHR","VulkanMemoryModelKHR","WGSL","WorkgroupMemoryExplicitLayout16BitAccessKHR","WorkgroupMemoryExplicitLayout8BitAccessKHR","WorkgroupMemoryExplicitLayoutKHR","Writer","WriterFlags","ZeroInitializeWorkgroupMemoryMode","all","all","binding_array_size","binding_map","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds_check_policies","capabilities","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","complement","complement","contains","contains","debug_info","decorate_non_uniform_binding_array_access","default","default","deserialize","deserialize","difference","difference","empty","empty","entry_point","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","file_name","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","from_str","from_str","from_u32","from_u32","get_capabilities_used","hash","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","lang_version","language","new","not","not","partial_cmp","partial_cmp","remove","remove","serialize","serialize","set","set","shader_stage","source_code","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","write","write_vec","zero_initialize_workgroup_memory","Custom","EXPLICIT_TYPES","Error","FmtError","Unimplemented","UnsupportedMathFunction","UnsupportedRelationalFunction","Writer","WriterFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","complement","contains","deserialize","difference","empty","eq","equivalent","equivalent","equivalent","extend","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into","into","into_iter","is_all","is_empty","iter","iter_names","new","not","remove","serialize","set","source","sub","sub_assign","symmetric_difference","to_owned","to_string","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","write","write_string","compact","DerivativeUniformity","DiagnosticFilter","Error","FilterableTriggeringRule","Info","Off","Severity","Warning","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_ident","from_ident","hash","hash","into","into","into","new_severity","partial_cmp","partial_cmp","to_ident","to_owned","to_owned","to_owned","triggering_rule","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ShaderError","borrow","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","fmt","from","inner","into","label","source","source","to_owned","to_string","try_from","try_into","type_id","SymbolTable","Typifier","add","add_root","atomic_upgrade","borrow","borrow","borrow_mut","borrow_mut","default","default","fmt","fmt","from","from","get","glsl","grow","index","into","into","invalidate","lookup","new","pop_scope","push_scope","register_type","reset","spv","try_from","try_from","try_into","try_into","type_id","type_id","wgsl","Error","GlobalInitUnsupported","GlobalVariableMissing","MultiMemberStruct","Unsupported","borrow","borrow_mut","clone","clone_into","fmt","fmt","from","into","to_owned","to_string","try_from","try_into","type_id","AddAssign","Ampersand","AndAssign","Assign","Bang","BoolConstant","BoolLiteral","Break","Buffer","Caret","Case","Colon","Comma","Const","Continue","Core","Dash","Decrement","Default","Discard","DivAssign","Do","Dot","Else","EndOfFile","Eof","Equal","Error","ErrorKind","ExpectedToken","FloatConstant","FloatLiteral","For","Frontend","GreaterEqual","High","Identifier","Identifier","If","In","InOut","Increment","IntConstant","IntLiteral","InternalError","Interpolation","InvalidProfile","InvalidToken","InvalidVersion","Invariant","Layout","LeftAngle","LeftBrace","LeftBracket","LeftParen","LeftShift","LeftShiftAssign","LessEqual","LogicalAnd","LogicalOr","LogicalXor","Low","Medium","MemoryQualifier","ModAssign","MulAssign","NotEqual","NotImplemented","Options","OrAssign","Out","ParseErrors","Percent","Plus","Precision","Precision","PrecisionQualifier","PreprocessorError","Profile","Question","Restrict","Return","RightAngle","RightBrace","RightBracket","RightParen","RightShift","RightShiftAssign","Sampling","SemanticError","Semicolon","ShaderMetadata","Shared","Slash","Star","Struct","SubAssign","Switch","Tilde","Token","TokenValue","TypeName","TypeName","Uniform","UnknownField","UnknownLayoutQualifier","UnknownType","UnknownVariable","UnsupportedMatrixTypeInStd140","VariableAlreadyDeclared","VerticalBar","Void","While","XorAssign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","defines","early_fragment_tests","emit_to_string","emit_to_writer","emit_to_writer_with_path","eq","eq","eq","eq","errors","extensions","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","kind","location","meta","metadata","parse","profile","source","stage","stage","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","workgroup_size","Annotation","AtomicUpgradeError","BadString","Capability","ControlFlowGraphCycle","Empty","EntryPoint","Error","ExecutionMode","ExtInstImport","Extension","Frontend","Function","FunctionCallCycle","IncompleteData","InconsistentComparisonSampling","Instruction","InvalidAccess","InvalidAccessIndex","InvalidAccessType","InvalidArraySize","InvalidAsType","InvalidBarrierMemorySemantics","InvalidBarrierScope","InvalidBinding","InvalidDecoration","InvalidEdgeClassification","InvalidGlobalVar","InvalidHeader","InvalidId","InvalidImage","InvalidImageBaseType","InvalidImageExpression","InvalidIndexType","InvalidInnerType","InvalidOperand","InvalidOperandCount","InvalidParameter","InvalidSign","InvalidTerminator","InvalidTypeWidth","InvalidVectorSize","InvalidVectorType","InvalidWordCount","MemoryModel","MissingDecoration","ModuleProcessed","ModuleState","Name","NonBindingArrayOfImageOrSamplers","Options","SUPPORTED_CAPABILITIES","SUPPORTED_EXTENSIONS","SUPPORTED_EXT_SETS","Source","SpecIdTooHigh","Type","UnknownBinaryOperator","UnknownCapability","UnknownInstruction","UnknownRelationalFunction","UnsupportedBinaryOperator","UnsupportedBuiltIn","UnsupportedCapability","UnsupportedControlFlow","UnsupportedExecutionMode","UnsupportedExecutionModel","UnsupportedExtInst","UnsupportedExtInstSet","UnsupportedExtSet","UnsupportedExtension","UnsupportedGroupOperation","UnsupportedImageDim","UnsupportedImageFormat","UnsupportedInstruction","UnsupportedMatrixStride","UnsupportedRuntimeArrayStorageClass","UnsupportedStorageClass","UnsupportedType","WrongFunctionArgumentType","WrongFunctionResultType","adjust_coordinate_space","block_ctx_dump_prefix","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","emit_to_string","emit_to_writer","emit_to_writer_with_path","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","new","parse","parse_u8_slice","partial_cmp","strict_capabilities","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","columns","rows","stride","width","Frontend","ParseError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","emit_to_stderr","emit_to_stderr_with_path","emit_to_string","emit_to_string_with_path","fmt","fmt","from","from","into","into","labels","location","message","new","parse","parse_str","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","wgsl","RESERVED","AbstractFloat","AbstractInt","Alignment","ArrayLength","ArrayLengthDynamic","Atomic","AutomaticConversionFloatToInt","AutomaticConversionLossy","Bool","BoundsCheckPolicies","BoundsCheckPolicy","Call","Const","Constant","ConstantEvaluator","ConstantEvaluatorError","Derivative","DivisionByZero","EIGHT","Emitter","EntryPoint","EntryPointArgument","EntryPointIndex","EntryPointLocal","ExpressionKind","ExpressionKindTracker","F32","F64","FOUR","Function","FunctionArg","FunctionArgument","FunctionArgumentNotFound","FunctionLocal","FunctionNotDefined","FunctionReturnsVoid","GlobalCtx","GlobalVariable","GlobalVariable","Handle","HashableLiteral","I32","I64","ImageExpression","ImplConst","IncompatibleOperands","IndexableLength","IndexableLengthError","InvalidAccess","InvalidAccessBase","InvalidAccessIndex","InvalidAccessIndexTy","InvalidArrayElementType","InvalidArrayLengthArg","InvalidBinaryOpArgs","InvalidCastArg","InvalidClamp","InvalidImage","InvalidMathArg","InvalidMathArgCount","InvalidPointer","InvalidScalar","InvalidStructMemberType","InvalidSubAccess","InvalidUnaryOpArg","InvalidVector","LayoutError","LayoutErrorInner","Layouter","Literal","Load","LocalVariable","MIN_UNIFORM","MissingSpecialType","NameKey","Namer","NonPowerOfTwoWidth","NotImplemented","ONE","OutOfBoundsIndex","Overflow","Override","Override","OverrideExpr","POINTER_SPAN","RayQueryExpression","RemainderByZero","ResolveContext","ResolveError","Runtime","RuntimeExpr","SIXTEEN","ShiftedMoreThan32Bits","SplatScalarOnly","StructMember","SubexpressionsAreNotConstant","SubgroupExpression","SwizzleOutOfBounds","SwizzleVectorOnly","TWO","Type","TypeLayout","TypeNotConstructible","TypeResolution","U32","U64","Value","WorkGroupUniformLoadResult","alignment","arguments","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call_or","cast","cast_array","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","constants","constants","default","default","default","deserialize","deserialize","deserialize","ensure_block_returns","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","flatten_compose","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_glsl_function","for_glsl_module","for_wgsl_function","for_wgsl_module","force_non_const","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arena","from_width","functions","global_expressions","global_vars","handle","hash","hash","hash","hash","index","index","inner","inner_with","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_aligned","is_const","is_const_or_override","is_impl_const","is_running","local_vars","mul","mul","new","new","overrides","overrides","partial_cmp","partial_cmp","reset","resolve","round_up","serialize","serialize","serialize","size","source","special_types","start","to_ctx","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_stride","to_string","to_string","to_string","to_string","to_string","to_wgsl","try_eval_and_append","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","types","update","with_locals","from","to","to_type","to_type","value","expr","expr","index","indexed","indexed","name","ty","BoundsCheckPolicies","BoundsCheckPolicy","Dynamic","Expression","GuardedIndex","IndexableLength","IndexableLengthError","InvalidArrayLength","Known","Known","ReadZeroSkipWrite","Restrict","TypeNotIndexable","Unchecked","access_needs_check","binding_array","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","choose_policy","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains","default","default","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_checked_indexes","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","image_load","index","into","into","into","into","into","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","ARGUMENT","ARITHMETIC","Abstract","Alignment","Argument","Argument","ArgumentCount","ArgumentType","ArrayStride","BALLOT","BASIC","BINDINGS","BLOCKS","BindingArrayBaseTypeNotStruct","BindingCollision","BindingCollision","BreakOutsideOfLoopOrSwitch","CLIP_DISTANCE","COMPUTE","CONSTANTS","CONSTRUCTIBLE","CONTROL_FLOW_UNIFORMITY","COPY","CUBE_ARRAY_TEXTURES","CULL_DISTANCE","CallError","Capabilities","ComparisonSamplingMismatch","ComponentCount","ComponentType","Compose","Compose","ComposeError","Conflict","ConflictingCaseType","ConflictingSwitchCase","ConstExpression","ConstExpressionError","Constant","ConstantError","ContinueOutsideOfLoop","Corrupted","DATA","DERIVATIVE","DUAL_SOURCE_BLENDING","Disalignment","DuplicateBuiltIn","DuplicateID","EARLY_DEPTH_TEST","EXPRESSIONS","EmitResult","EmptyStruct","EntryPoint","EntryPointError","ExpectedBindingArrayType","ExpectedGlobalOrArgument","ExpectedGlobalVariable","ExpectedImageType","ExpectedSamplerType","Expression","ExpressionAlreadyInScope","ExpressionError","ExpressionInfo","ExpressionMismatch","FLOAT64","FRAGMENT","ForbiddenStageOperations","Function","Function","FunctionArgumentDoesntExist","FunctionError","FunctionInfo","GlobalUse","GlobalVariable","GlobalVariableError","HOST_SHAREABLE","IMPLICIT_LEVEL","IO_SHAREABLE","IndexOutOfBounds","IndexableLength","Infinity","InitializerExprType","InitializerExprType","InitializerExprType","InitializerNotAllowed","InitializerType","InitializerType","InstructionsAfterReturn","Invalid","InvalidAccelerationStructure","InvalidArgumentPointerSpace","InvalidArgumentType","InvalidArgumentType","InvalidArrayBaseType","InvalidArrayStride","InvalidArrayType","InvalidAtomic","InvalidAtomicWidth","InvalidAttributeInStage","InvalidBaseType","InvalidBinaryOperandTypes","InvalidBinding","InvalidBooleanVector","InvalidBuiltInStage","InvalidBuiltInType","InvalidCall","InvalidCastArgument","InvalidData","InvalidDepthReference","InvalidDepthSampleLevel","InvalidDerivative","InvalidDynamicArray","InvalidFloatArgument","InvalidGatherComponent","InvalidGatherDimension","InvalidGatherLevel","InvalidGlobalUsage","InvalidHandle","InvalidIfType","InvalidImageArrayIndex","InvalidImageArrayIndexType","InvalidImageClass","InvalidImageCoordinateType","InvalidImageOtherIndex","InvalidImageOtherIndexType","InvalidImageStore","InvalidIndexType","InvalidInputAttributeInStage","InvalidIntegerInterpolation","InvalidInterpolation","InvalidInterpolationSamplingCombination","InvalidLocationAttributeCombination","InvalidLocationsWhileDualSourceBlending","InvalidMultiDimensionalSubgroupBuiltIn","InvalidPointerBase","InvalidPointerToUnsized","InvalidPointerType","InvalidRayDescriptor","InvalidRayQueryExpression","InvalidRayQueryType","InvalidRayQueryType","InvalidReturnSpot","InvalidReturnType","InvalidSampleLevelBiasType","InvalidSampleLevelExactType","InvalidSampleLevelGradientType","InvalidSampleOffset","InvalidSampleOffsetExprType","InvalidSelectTypes","InvalidSplatType","InvalidSplatType","InvalidStorePointer","InvalidStoreTypes","InvalidStoreValue","InvalidSubgroup","InvalidSwitchType","InvalidSwizzleComponent","InvalidType","InvalidType","InvalidType","InvalidType","InvalidType","InvalidUnaryOperandType","InvalidUsage","InvalidVectorType","InvalidWorkGroupUniformLoadResultType","LastCaseFallTrough","Layouter","Literal","Literal","LiteralError","LocalVariable","LocalVariableError","MULTISAMPLED_SHADING","MULTIVIEW","MatrixElementNotFloat","MemberMissingBinding","MemberOffset","MemberOffsetAfterStruct","MemberOutOfBounds","MemberOverlap","MissingBinding","MissingCapabilities","MissingCapability","MissingCapability","MissingCapability","MissingDefaultCase","MissingInterpolation","MissingNameAndID","MissingTypeFlags","MissingVertexOutputPosition","ModuleInfo","MoreThanOnePushConstantUsed","MultipleDefaultCases","NaN","NegativeIndex","NonConstOrOverride","NonConstOrOverrideInitializer","NonConstructibleReturnType","NonConstructibleType","NonConstructibleType","NonFullyEvaluatedConst","NonHostShareable","NonUniformControlFlow","NonUniformWorkgroupUniformLoad","NotAllowed","NotIOShareableType","NotInScope","OutOfRangeWorkgroupSize","Override","OverrideError","PRIMITIVE_INDEX","PUSH_CONSTANT","PipelineInputRegularFunction","PipelineOutputRegularFunction","QUERY","RAY_QUERY","READ","Result","ResultAlreadyInScope","ResultAlreadyPopulated","ResultValue","SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","SAMPLER_NON_UNIFORM_INDEXING","SHADER_INT64","SHADER_INT64_ATOMIC_ALL_OPS","SHADER_INT64_ATOMIC_MIN_MAX","SHUFFLE","SHUFFLE_RELATIVE","SIZED","STORAGE_TEXTURE_16BIT_NORM_FORMATS","STRUCT_LAYOUTS","SUBGROUP","SUBGROUP_BARRIER","SUBGROUP_VERTEX_STAGE","ShaderStages","StorageAddressSpaceWriteOnlyNotSupported","StructSpan","SubgroupOperationSet","Type","Type","Type","Type","TypeError","TypeFlags","TypeNotScalar","UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","UnexpectedEarlyDepthTest","UnexpectedWorkgroupSize","Uniformity","UniformityRequirements","UnsizedMember","UnsupportedCapability","UnsupportedCapability","UnsupportedImageType","UnsupportedSpecializedArrayLength","UnsupportedWidth","UnvisitedExpression","VERTEX","VOTE","ValidationError","ValidationFlags","Validator","VaryingError","WORK_GROUP_BARRIER","WRITE","Width","Width","WidthError","WidthError","WorkgroupUniformLoadExpressionMismatch","WorkgroupUniformLoadInvalidPointer","WrongArgumentCount","all","all","all","all","all","all","all","available_stages","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_literal_value","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","contains","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","difference","difference","difference","difference","difference","difference","difference","dominates_global_use","dual_source_blending","empty","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expression_count","extend","extend","extend","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","get_entry_point","global_variable_count","index","index","index","index","index","insert","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","may_kill","new","non_uniform_result","not","not","not","not","not","not","not","ref_count","remove","remove","remove","remove","remove","remove","remove","requirements","reset","sampling_set","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","source","source","source","source","source","source","source","source","source","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","subgroup_operations","subgroup_stages","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniformity","uniformity","union","union","union","union","union","union","union","validate","validate_literal","validate_no_overrides","index","index","required","required","seen","seen_expression","source","expected","given","index","alignment","alignment","alignment","expected","index","index","index","offset","offset","span","stride","location","location_mask","has_ref","image","sampler","error","function","handle","handle","index","index","name","name","name","name","pointer","source","source","space","value","required","seen","arrayed","base","class","dim","expected","index","index","offset","offset","size","space","span","stride","handle","handle","handle","handle","handle","handle","name","name","name","name","name","name","source","source","source","source","source","source","source","stage","attribute","interpolation","location","location","sampling","flag","name"],"q":[[0,"naga"],[1909,"naga::AddressSpace"],[1910,"naga::AtomicFunction"],[1911,"naga::Binding"],[1915,"naga::BuiltIn"],[1916,"naga::Expression"],[1970,"naga::ImageClass"],[1975,"naga::ImageQuery"],[1976,"naga::PredeclaredType"],[1980,"naga::RayQueryFunction"],[1983,"naga::SampleLevel"],[1985,"naga::Statement"],[2020,"naga::TypeInner"],[2041,"naga::back"],[2171,"naga::back::dot"],[2185,"naga::back::glsl"],[2476,"naga::back::glsl::Version"],[2478,"naga::back::hlsl"],[2625,"naga::back::msl"],[2913,"naga::back::msl::sampler"],[3067,"naga::back::pipeline_constants"],[3090,"naga::back::spv"],[3644,"naga::back::wgsl"],[3733,"naga::compact"],[3734,"naga::diagnostic_filter"],[3796,"naga::error"],[3817,"naga::front"],[3853,"naga::front::atomic_upgrade"],[3871,"naga::front::glsl"],[4122,"naga::front::spv"],[4268,"naga::front::spv::Error"],[4272,"naga::front::wgsl"],[4305,"naga::keywords"],[4306,"naga::keywords::wgsl"],[4307,"naga::proc"],[4687,"naga::proc::ConstantEvaluatorError"],[4692,"naga::proc::ResolveError"],[4699,"naga::proc::index"],[4792,"naga::valid"],[5784,"naga::valid::CallError"],[5791,"naga::valid::ComposeError"],[5794,"naga::valid::Disalignment"],[5805,"naga::valid::EntryPointError"],[5807,"naga::valid::ExpressionError"],[5810,"naga::valid::FunctionError"],[5825,"naga::valid::GlobalVariableError"],[5827,"naga::valid::TypeError"],[5840,"naga::valid::ValidationError"],[5860,"naga::valid::VaryingError"],[5865,"naga::valid::WidthError"],[5867,"core::ops::function"],[5868,"arbitrary::unstructured"],[5869,"arbitrary::error"],[5870,"arbitrary"],[5871,"core::cmp"],[5872,"core::hash"],[5873,"core::option"],[5874,"core::result"],[5875,"core::clone"],[5876,"core::cmp"],[5877,"serde::de"],[5878,"serde::de"],[5879,"core::error"],[5880,"alloc::string"],[5881,"core::iter::traits::collect"],[5882,"core::ops::function"],[5883,"core::fmt"],[5884,"pp_rs::token"],[5885,"core::ops::range"],[5886,"core::convert"],[5887,"bitflags::iter"],[5888,"bitflags::iter"],[5889,"serde::ser"],[5890,"core::iter::traits::exact_size"],[5891,"core::any"],[5892,"alloc::string"],[5893,"spirv"],[5894,"core::marker"],[5895,"core::borrow"],[5896,"termcolor"],[5897,"std::path"],[5898,"core::convert"]],"d":["","","Width of abstract types, in bytes.","","Abstract floating-point type.","","WGSL abstract integer type.","","Opaque object representing an acceleration structure of …","Array access with a computed index.","Access the same types as <code>Access</code>, plus <code>Struct</code> with a known …","","","","","","Addressing space of variables.","","","","","","","","An arena holding some kind of component (e.g., type, …","Homogeneous list of elements.","Get the length of an array. The expression must resolve to …","Size of an array.","Cast a simple type to another kind.","","","","","","Atomic scalar.","Atomic function.","","Function on an atomic value.","Result of an atomic operation.","","","Width of a boolean type, in bytes.","Memory barrier flags.","Synchronize invocations within the work group. The <code>Barrier</code> …","","","","2D vector","","Apply a binary operator.","Operation that can be applied on two values.","Describes how an input/output variable is to be bound.","Array of bindings.","","A code block is a vector of statements, with maybe a …","A block containing more statements, to be executed …","Boolean type.","","Exits the innermost enclosing <code>Loop</code> or <code>Switch</code>.","All gather from the same lane at the index given by the …","All gather from the active lane with the smallest index","Built-in inputs and outputs.","Built-in shader variable.","Number of bytes per scalar.","Calls a function.","Result of calling another function.","","Interpolate the value at the center of the pixel.","Interpolate the value at a point that lies within all …","","","","","Composite expression.","","Enables adjusting depth without disabling early Z.","Constant value.","The array size is constant.","Constant value.","Skips to the <code>continuing</code> block of the innermost enclosing …","","","","","","","Cube map","","1D image","2D image","3D image","","","Depth comparison image.","Compute the derivative on an axis.","Axis on which to compute a derivative.","Hint at which precision to compute a derivative.","","","","","","The array size can change at runtime.","Early fragment tests.","Use the value provided by the first or last vertex of the …","Emit a range of expressions, visible to all statements …","The main function for a pipeline stage.","","","","","","","","","An expression that can be evaluated to obtain a value.","","May not be NaN or infinity.","","May not be NaN or infinity.","","","Hash map that is faster but not resilient to DoS attacks.","Hash set that is faster but not resilient to DoS attacks.","Insertion-order-preserving hash map (<code>IndexMap&lt;K, V&gt;</code>), but …","Insertion-order-preserving hash set (<code>IndexSet&lt;K&gt;</code>), but …","","Use the value provided by the first vertex of the current …","","","Indicates that no interpolation will be performed.","Floating point type.","","","","","","","","","A function defined in the module.","Function locals.","A function argument.","Reference a function parameter, by its index.","A function result.","The specific behavior of a <code>SubgroupGather</code> statement.","","Variable defined at module level.","Reference a global variable.","","","Shader may rewrite depth only with a value greater than …","","A strongly typed reference to an arena item.","Opaque handles, such as samplers and images.","","","","","","Conditionally executes one of two blocks, based on the …","Possibly multidimensional array of texels.","Sub-class of the image type.","The number of dimensions an image has.","Load a texel from an image.","Type of an image query.","Query information from an image.","Sample a point from a sampled or a depth image.","Stores a texel value to an image.","","","","Initialize the <code>RayQuery</code> object.","","","The interpolation qualifier of a binding or struct field.","","","","","Aborts the current shader execution.","Storage can be used as a source for load ops.","","","","Shader may rewrite depth smaller than one that would have …","","Indicates that linear, non-perspective, correct …","","Literal.","Load a value indirectly.","","","Variable defined at function level.","Reference a local variable.","Indexed location.","","","","","","Executes a block repeatedly.","Call a math function","Built-in shader function for math.","Matrix of numbers.","","","","","","","","","","Shader module.","Equivalent of the WGSL’s <code>%</code> operator or SPIR-V’s <code>OpFRem</code>","","","","","","","Get the number of array layers, a <code>u32</code>.","Get the number of mipmap levels, a <code>u32</code>.","Get the number of samples, a <code>u32</code>.","","","","","Pipeline-overridable constant.","Pipeline-overridable constant.","","","","","","","","The value will be interpolated in a perspective-correct …","","","Pointer to another type.","","","Return types predeclared for the frexp, modf, and …","","Private data, per invocation, mutable.","Start or continue the query given by the statement’s …","Push constants.","4D vector","","","","","","","","","","","","","","A strongly typed range of handles.","Locally used handle for ray queries.","","An operation that a <code>RayQuery</code> statement applies to its <code>query</code>…","Return an intersection found by <code>query</code>.","Result of a <code>Proceed</code> <code>RayQuery</code> statement.","","","","Call a relational function.","Built-in shader function for testing relation between …","Pipeline binding information for global resources.","Returns from the function (possibly with a value).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Barrier affects all <code>AddressSpace::Storage</code> accesses.","Storage can be used as a target for store ops.","Barrier synchronizes execution across all invocations …","Interpolate the value at each sample location. In …","","Sampling modifier to control the level of detail.","","Regular sampled image.","Can be used to sample values from images.","The sampling qualifiers of a binding or struct field.","","Characteristics of a scalar type.","Number of integral or floating-point kind.","Primitive type for a scalar.","Select between two values based on a condition.","Stage of the programmable pipeline.","","Right shift carries the sign of signed integers only.","Each gathers from a different lane at the index given by …","Each gathers from their lane plus the shift given by the …","Each gathers from their lane minus the shift given by the …","Each gathers from their lane xored with the given by the …","","","","Signed integer type.","Get the size at the specified level.","","A human-readable representation for a span, tailored for …","A source code span, used for error reporting.","A source code span together with “context”, a …","Set of special types that can be optionally generated by …","Splat scalar into a vector.","","Instructions which make up an executable block.","","Storage buffer data, potentially mutable.","Storage image.","Flags describing an image.","Image storage format.","Stores a value at an address.","User-defined structure.","Member of a user-defined structure.","Calculate a bitmask using a boolean from each active …","Result of a <code>SubgroupBallot</code> statement.","Compute a collective operation across all active threads …","Gather a value from another active thread in the subgroup","","","","Result of a <code>SubgroupCollectiveOperation</code> or <code>SubgroupGather</code> …","","","","Conditionally executes one of multiple blocks, based on …","A case for a switch statement.","The value of the switch case.","Vector swizzle.","Component selection for a vector swizzle.","","","","","3D vector","","A data type declared in the module.","Enum with additional information, depending on the kind of …","","","","","","","Unsigned integer type.","Apply an unary operator.","Operation that can be applied on a single value.","Shader may not rewrite depth value.","Uniform buffer data.","An arena whose elements are guaranteed to be unique.","","","","","","","","Pointer to a scalar or vector.","Vector of numbers.","Number of components in a vector.","","","","","Barrier affects all <code>AddressSpace::WorkGroup</code> accesses.","","Wrapper class for <code>Error</code>, augmenting it with a list of …","Workgroup shared data, mutable.","","","Load uniformly from a uniform pointer in the workgroup …","Result of a <code>WorkGroupUniformLoad</code> statement.","","","","","","","","","Zero value of a type.","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Convert inner error into another type. Joins span …","Adds a new value to the arena, returning a typed handle.","","Apply the usual default interpolation for <code>ty</code> to <code>binding</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information about function argument.","","Find the common type of <code>self</code> and <code>other</code> under WGSL’s …","Return <code>true</code> if automatic conversions will covert <code>self</code> to …","Backend functions that export shader <code>Module</code>s into binary …","Returns the ref count, upon reaching which this expression …","For I/O structs, defines the binding.","Binding number within the group.","For resources, defines the binding point.","For entry points, an argument has to have a binding unless …","For entry points, the result has to have a binding unless …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Body of the case.","Block of instructions comprising the body of the function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the canonical form of <code>self</code>, or <code>None</code> if it’s …","Assert that <code>handle</code> is valid for this arena.","Assert that <code>handle</code> is valid for this arena.","Assert that <code>range</code> is valid for this arena.","Clears the arena, keeping all allocations.","Clears the arena keeping all allocationshe bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","Arena for the constants defined in this module.","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>DiagnosticFilter</code>s and supporting functionality.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Drains the arena, returning an iterator over the items …","Early depth test for fragment stages.","Emits a summary of the error to standard error stream.","Emits a summary of the error to standard error stream.","Emits a summary of the error to a string.","Emits a summary of the error to a string.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Entry points.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compare <code>self</code> and <code>rhs</code> as types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Expressions used inside this function.","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","If true, the control flow continues to the next case in …","Fetch a handle to an existing type.","Adds a value with a custom check for uniqueness: returns a …","Adds a value with a check for uniqueness, where the check …","return the first and last handles included in <code>self</code>.","Construct a float <code>Scalar</code> with the given width.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","Construct a <code>Range</code> that covers the indices in <code>inner</code>.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","Frontend parsers that consume binary and text shaders and …","The entrance function.","Arena for the functions defined in this module.","Populate this module’s <code>SpecialTypes::predeclared_types</code> …","Populate this module’s <code>SpecialTypes::ray_desc</code> type.","Populate this module’s <code>SpecialTypes::ray_intersection</code> …","Return this arena’s handle for <code>value</code>, if present.","Return this arena’s value at <code>handle</code>, if that is a valid …","Get a mutable reference to an element in the arena.","Return the span associated with <code>handle</code>.","","Constant expressions and override expressions used by this …","Arena for the global variables defined in this module.","The bind group index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pipeline Constant ID.","","Returns the index of this handle.","","","","","","Return the index range covered by <code>self</code>.","Return the length of a subscriptable type.","The default value of the pipeline-overridable constant.","The value of the constant.","Initial value for this variable.","Initial value for this variable.","Inner structure that depends on the kind of the type.","Insert a new value into the arena.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extracts the inner vector.","Reverse of <code>Self::new</code>, discards span information and …","","","","","Convert inner error using <code>From</code>.","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","","Check whether <code>self</code> was defined or is a default/unknown span","","Return true if this expression is a dynamic …","","Return <code>true</code> if the arena contains no elements.","Returns <code>true</code> if the arena contains no elements.","","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns true if this is a handle to a type rather than the …","","","","Returns true if the statement directly terminates the …","Returns an iterator over the items stored in this arena, …","Returns an iterator over the items stored in this arena, …","Yield a set of contained flags values.","Yield a set of contained flags values.","Returns a iterator over the items stored in this arena, …","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Lists of reserved keywords for each shading language with …","How the value’s bits are to be interpreted.","Return the current number of items stored in this arena.","Returns the current number of items stored in this arena.","","Length in code units (in bytes) of the span.","1-based line number.","1-based column in code units (in bytes) of the start of …","Local variables defined and used in the function.","Return a <code>SourceLocation</code> for this span in the provided …","Return a <code>SourceLocation</code> for our first span, if we have one.","","","The name of the type, if any.","","","Name of the variable, if any.","Name of the variable, if any.","Name of the argument, if any.","Name of the function, if any.","Name of this entry point, visible externally.","Map of expressions that have associated variable names","Returns true if the expression is considered emitted at …","Create a new arena with no initial capacity allocated.","Create a new arena with no initial capacity allocated.","","Creates a new <code>Span</code> from a range of byte indices","Create a new <code>WithSpan</code> from an <code>Error</code>, containing no spans.","","Return a range enclosing handles <code>first</code> through <code>last</code>, …","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","0-based Offset in code units (in bytes) of the start of …","Offset from the beginning from the struct.","","Return the global variable being accessed by the …","Arena for the pipeline-overridable constants defined in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Types for predeclared wgsl types instantiated on demand.","<code>Module</code> processing functionality.","","Get the range of handles from a particular number of …","Type for <code>RayDesc</code>.","Type for <code>RayIntersection</code>.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Replace an old value with a new value.","The result of this function, if any.","Return the scalar type of <code>self</code>.","","","","Returns the scalar width in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Get the size of this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How this variable is to be stored.","","","","Iterator over stored <code>SpanContext</code>s.","Dictionary of special type handles.","","Shader stage.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Modifies <code>self</code> to contain the smallest <code>Span</code> possible that …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>self</code> to a range if the span is not unknown","","Formats the type as it is written in wgsl.","Format a scalar kind+width as a type is written in wgsl.","","Formats the type as it is written in wgsl.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns the smallest <code>Span</code> possible that contains all the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type of the field.","","","The type of this variable.","The type of this variable.","Type of the argument.","Type of the result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Arena for the types defined in this module.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Returns a new <code>Span</code> starting at <code>self</code> and ending at <code>other</code>","Shader validator.","Value, upon which the case is considered true.","","This size of the value in bytes.","","Add a <code>SpanContext</code>.","Add a new span with description.","Workgroup size for compute stages","Write this handle’s index to <code>formatter</code>, preceded by …","","","","","","","Indicates the 2nd input to the blender when dual-source …","","","","","","","","","The index into an arrayed image. If the <code>arrayed</code> flag in …","","","","","","","Boolean expression","If provided, converts to the specified byte width. …","","The coordinate of the texel we wish to load. This must be …","","","","","Source expression, which can only be a scalar or a vector.","","","If Some(), this operation is a gather operation on the …","","The image to load a texel from. This must have type <code>Image</code>. …","","","","Target scalar kind.","","","A level of detail, for mipmapped images.","This refers to an expression in <code>Module::global_expressions</code>.","","","","","","","","","A sample index, for multisampled <code>Sampled</code> and <code>Depth</code> images.","","","","","","The type of the result","","","","","","Kind of values to sample.","Multi-sampled image.","Multi-sampled depth image.","If <code>None</code>, the base level is considered.","","","","","The acceleration structure within which this query should …","A struct of detailed parameters for the ray query.","","","","","The value to broadcast over","The value to compute over","","","","","","How to combine the results","","","","Function to run on the atomic value.","The specific operation we’re performing on <code>query</code>.","","","Specifies which thread to gather from","What operation to compute","","Pointer to an atomic value.","This must be of type <code>Pointer</code> in the <code>WorkGroup</code> address space","The value from this thread to store in the ballot","The <code>RayQuery</code> object this statement operates on.","","<code>AtomicResult</code> expression representing this function’s …","The <code>WorkGroupUniformLoadResult</code> expression representing …","","The <code>SubgroupBallotResult</code> expression representing this load…","The <code>SubgroupOperationResult</code> expression representing this …","The <code>SubgroupOperationResult</code> expression representing this …","","","","","Value to use in the function.","","","","","","","","","","","","","","","","","","","","","","","Names of vector components.","","","","","An <code>EntryPoint</code>, and its index in <code>Module::entry_points</code>.","A regular function.","Helper structure that stores data needed when writing the …","Whether we’re generating an entry point or a regular …","Indent for backends.","Indentation level.","","Expressions that need baking.","","Specifies the values of pipeline-overridable constants in …","Ray flags, for a <code>RayDesc</code>’s <code>flags</code> field.","The intersection test to use for ray queries.","","","","","","Get a flags value with all known bits set.","Helper method that generates a <code>NameKey</code> for a function …","Helper function that returns the string corresponding to …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","Backend for DOT (Graphviz).","Get a flags value with all bits unset.","","","","","For constness checks","The expression arena of the current function being written","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Backend for GLSL (OpenGL Shading Language).","Backend for HLSL (High-Level Shading Language).","Analysis about the function","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Returns true if the function is an entry point for a …","Whether all bits in this flags value are unset.","Returns true if the given expression points to a …","Yield a set of contained flags values.","Yield a set of contained named flags values.","Backend for MSL (Metal Shading Language).","Helper method that generates a <code>NameKey</code> for a local in the …","Map of expressions that have associated variable names","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","Helper method that resolves a type of a given expression.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Backend for SPIR-V (Standard Portable Intermediate …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","The current function being written","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Backend for WGSL (WebGPU Shading Language).","Configuration options for the dot backend","","","Only emit function bodies","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Write shader module to a <code>String</code>.","Flip output Y and extend Z from (0, 1) to (-1, 1).","","Buffer address space support.","Mapping between resources and bindings.","","","","","","","8 byte floats.","Supports ARB_shader_draw_parameters on the host, which …","Dual source blending","Arrays with a dynamic length.","<code>core</code> GLSL.","<code>es</code> GLSL.","The entry point couldn’t be found.","A GLSL compilation error.","","Emit <code>PointSize</code> output builtin to vertex shaders, which is …","More image formats.","Structure used to encode additions to GLSL that aren’t …","<code>crate::Sampling::First</code> is unsupported.","A error occurred while writing to the output.","Image load and early depth tests.","Image size query","Include unused global variables, constants and functions. …","Instance index","A image was used with multiple samplers, which isn’t …","","","","The specified <code>Version</code> doesn’t have all required <code>Features</code>.","<code>AddressSpace::PushConstant</code> was used more than once in the …","Interpolation and auxiliary qualifiers.","Configuration used in the <code>Writer</code>.","","A subset of options meant to be changed per pipeline.","All information to bind a single uniform value to the …","Reflection info for texture mappings and uniforms.","","Sample ID.","Subgroup operations","List of supported <code>core</code> GLSL versions.","List of supported <code>es</code> GLSL versions.","Texture levels query","Texture samples query","Sample specific LODs of cube / array shadow textures","Supports GL_EXT_texture_shadow_lod on the host, which …","Mapping between a texture and its sampler, if it exists.","A call was made to an unsupported external.","A scalar with an unsupported width was requested.","","A GLSL version.","The specified <code>Version</code> isn’t supported.","Writer responsible for all code generation.","Configuration flags for the <code>Writer</code>.","GL uniform name for the item. This name is the same as if …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Map of resources association to binding locations.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","The name of the entry point.","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","The index which can be used for dual source blending. This …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The location of the global. This corresponds to …","How many views to render to, if doing multiview rendering.","Creates a new <code>Writer</code> instance.","Create a new gles version","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The offset in the push constant memory block this uniform …","","List of push constant items in the shader.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Handle to the associated sampler global variable, if it …","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The stage of the entry point.","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Handle to the image global variable.","Mapping between texture names and variables/samplers.","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","Type of the uniform. This will only ever be a scalar, …","","","","","","","","","","","","Mapping between uniform variables and names.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Mapping between names and attribute locations.","The GLSL version to be used.","Writes the <code>Module</code> as glsl to the output","Configuration flags for the <code>Writer</code>.","Should workgroup variables be zero initialized (by …","","","","","","","","A fragment entry point to be considered when generating …","","","Configuration used in the <code>Writer</code>.","","Reflection info for entry point names.","A HLSL shader model version.","","","","","","","","","","","","","","If the binding is an unsized binding array, this overrides …","Map of resources association to binding locations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mapping of the entry point names.","","","","","","","","","","","","","","Don’t panic on missing bindings, instead generate any …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>None</code> if the entry point with the provided name can…","","","Bind target of the push constant buffer","","Should we restrict indexing of vectors, matrices and …","","","","","The hlsl shader model to be used","","","Add special constants to <code>SV_VertexIndex</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Should workgroup variables be zero initialized (by …","A mapping of vertex buffers and their attributes to shader …","","","","","","","","","","Two half-precision floats (no Rust equiv). <code>vec2&lt;f32&gt;</code> in …","Four half-precision floats (no Rust equiv). <code>vec4&lt;f32&gt;</code> in …","One single-precision float (f32). <code>f32</code> in shaders.","Two single-precision floats (f32). <code>vec2&lt;f32&gt;</code> in shaders.","Three single-precision floats (f32). <code>vec3&lt;f32&gt;</code> in shaders.","Four single-precision floats (f32). <code>vec4&lt;f32&gt;</code> in shaders.","","","","","","","","","","","A subset of options that are meant to be changed per …","","Two signed shorts (i16). <code>vec2&lt;i32&gt;</code> in shaders.","Four signed shorts (i16). <code>vec4&lt;i32&gt;</code> in shaders.","One signed int (i32). <code>i32</code> in shaders.","Two signed ints (i32). <code>vec2&lt;i32&gt;</code> in shaders.","Three signed ints (i32). <code>vec3&lt;i32&gt;</code> in shaders.","Four signed ints (i32). <code>vec4&lt;i32&gt;</code> in shaders.","Two signed bytes (i8). <code>vec2&lt;i32&gt;</code> in shaders.","Four signed bytes (i8). <code>vec4&lt;i32&gt;</code> in shaders.","","Two signed shorts (i16). [-32767, 32767] converted to …","Four signed shorts (i16). [-32767, 32767] converted to …","Two signed bytes (i8). [-127, 127] converted to float [-1, …","Four signed bytes (i8). [-127, 127] converted to float […","Information about a translated module that is required for …","Two unsigned shorts (u16). <code>vec2&lt;u32&gt;</code> in shaders.","Four unsigned shorts (u16). <code>vec4&lt;u32&gt;</code> in shaders.","One unsigned int (u32). <code>u32</code> in shaders.","Two unsigned ints (u32). <code>vec2&lt;u32&gt;</code> in shaders.","Three unsigned ints (u32). <code>vec3&lt;u32&gt;</code> in shaders.","Four unsigned ints (u32). <code>vec4&lt;u32&gt;</code> in shaders.","Two unsigned bytes (u8). <code>vec2&lt;u32&gt;</code> in shaders.","Four unsigned bytes (u8). <code>vec4&lt;u32&gt;</code> in shaders.","","Three unsigned 10-bit integers and one 2-bit integer, …","Two unsigned shorts (u16). [0, 65535] converted to float […","Four unsigned shorts (u16). [0, 65535] converted to float […","Two unsigned bytes (u8). [0, 255] converted to float [0, 1]…","Four unsigned bytes (u8). [0, 255] converted to float [0, 1…","","","","","","","","","","","","","A description of a vertex buffer with all the information …","Corresponds to WebGPU <code>GPUVertexFormat</code>.","","Allow <code>BuiltIn::PointSize</code> and inject it if doesn’t exist.","Vec of the attributes within the structure","If the binding is an unsized binding array, this overrides …","","","","","","","","","","","","","","","","","","","","","","","","","Bounds checking policies.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mapping of the entry point names. Each item in the array …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Don’t panic on missing bindings, instead generate …","Finishes writing and returns the output.","","","","","","","","","","","","","Format code to help us unpack the attribute into the type …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Shader location associated with this buffer","True if the buffer is indexed by vertex, false if indexed …","Samplers to be inlined into the code.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","(Major, Minor) target version of the Metal Shading …","","Creates a new <code>Writer</code> instance.","Offset in bytes from start of vertex buffer structure","Map of entry-point resources, indexed by entry point …","","","","","","","","","","","","","","Shader location associated with this attribute","The slot of a buffer that contains an array of <code>u32</code>, one …","","Make it possible to link different stages via SPIRV-Cross.","Size of the structure in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vertex_buffer_mappings are used during shader translation …","If set, when generating the Metal vertex shader, transform …","","","Should workgroup variables be zero initialized (by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Replace all overrides in <code>module</code> with constants.","","","","","","","Flip Y coordinate of <code>BuiltIn::Position</code> output.","","","","","","","","","","","","","","","","","","","","","Clamp <code>BuiltIn::FragDepth</code> output between 0 and 1.","","","SPIR-V operand kind: Capability","","","","","","","","Include debug labels for everything.","","","","","","","","","","","","","","","","","","","","","","","","","Emit <code>PointSize</code> output builtin to vertex shaders, which is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flags corresponding to the boolean(-ish) parameters to …","","","","","","","","","","","","","","","","Emit <code>OpName</code> for input/output locations.","","","","","","","","","","","","","","","","Via <code>VK_KHR_zero_initialize_workgroup_memory</code> or Vulkan 1.3","","","","","","","","","","","","","Via assignments + barrier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SPIR-V operand kind: SourceLanguage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","If the binding is an unsized binding array, this overrides …","Map of resources to information about the binding.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","How should generate code handle array, vector, matrix, or …","If given, the set of capabilities modules are allowed to …","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","The name of the entry point.","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","Configuration flags for the writer.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","Return the set of capabilities the last module written …","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","(Major, Minor) target version of the SPIR-V.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The stage of the entry point.","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","Dictates the way workgroup variables should be zero …","","Always annotate the type information instead of inferring.","","","","","","","","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The intersection of a source flags value with the …","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","Remove unused types, expressions, and constants from <code>module</code>…","","A filter that modifies how diagnostics are emitted for …","","A filterable triggering rule in a <code>DiagnosticFilter</code>.","","","A severity set on a <code>DiagnosticFilter</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a sentinel word in WGSL into its associated …","Convert from a sentinel word in WGSL into its associated …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Maps this <code>FilterableTriggeringRule</code> into the sentinel word …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","The source code of the shader.","","","","","","Structure responsible for managing variable lookups and …","A table of types for an <code>Arena&lt;Expression&gt;</code>.","Adds a new variable to the current scope.","Adds a new variable to the root scope.","Upgrade the types of scalars observed to be accessed as …","","","","","Constructs a new symbol table with a root scope","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Frontend for GLSL (OpenGL Shading Language).","Grow this typifier until it contains a type for <code>expr_handle</code>…","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Recompute the type resolution for <code>expr_handle</code>.","Perform a lookup for a variable named <code>name</code>.","","Removes the current lexical scope and all its variables","Adds a new lexical scope.","Add an expression’s type to an <code>Arena&lt;Type&gt;</code>.","","Frontend for SPIR-V (Standard Portable Intermediate …","","","","","","","Frontend for WGSL (WebGPU Shading Language).","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A boolean literal was expected.","","","","","","","","","The <code>core</code> profile, default when no profile is specified.","","","","","","","","","Whilst parsing as encountered an unexpected EOF.","The end of file was expected.","","Error returned during shader parsing.","Information about the cause of an error.","One of the expected tokens returned in <code>InvalidToken</code>.","","A float literal was expected.","","The <code>Frontend</code> is the central structure of the GLSL frontend.","","<code>highp</code> precision","An identifier was expected.","","","","","","","An integer literal was expected.","The parser entered an illegal state and exited","","The shader specified an unsupported or invalid profile.","Whilst parsing an unexpected token was encountered.","The shader requested an unsupported or invalid version.","","","","","","","","","","","","","<code>lowp</code> precision","<code>mediump</code> precision","A <code>glsl</code> memory qualifier such as <code>writeonly</code>","","","","A specific feature is not yet implemented.","Per-shader options passed to <code>parse</code>.","","","A collection of errors returned during shader parsing.","","","A precision hint used in GLSL declarations.","","","An error was returned by the preprocessor.","The GLSL profile used by a shader.","","","","","","","","","","","A semantic error was detected in the shader.","","Additional information about the GLSL shader.","","","","","","","","A specific token was expected.","A token passed from the lexing used in the parsing.","A type was expected.","","","A reference to a non existent member of a type was made.","An unknown layout qualifier was used.","A reference to a type that wasn’t declared was used.","A reference to a variable that wasn’t declared was used.","Unsupported matrix of the form matCx2","A variable with the same name already exists in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Preprocessor definitions to be used, akin to having","Whether or not early fragment tests where requested by the …","","","","","","","","","The shader can request extensions via the <code>#extension</code> …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Holds the information about the error itself.","Returns a <code>SourceLocation</code> for the error message.","Holds information about the range of the source code where …","Returns additional information about the parsed shader …","Parses a shader either outputting a shader <code>Module</code> or a …","The GLSL profile specified in the shader through the use …","","The shader stage in the pipeline.","The shader stage in the pipeline, passed to the <code>parse</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The GLSL version specified in the shader through the use …","The workgroup size for compute shaders, defaults to <code>[1; 3]</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The IR coordinate space matches all the APIs except SPIR-V,","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Only allow shaders with the known set of capabilities.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Emits a summary of the error to standard error stream.","Emits a summary of the error to standard error stream.","Emits a summary of the error to a string.","Emits a summary of the error to a string.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns a <code>SourceLocation</code> for the first label in the error …","","","","This function may consume a lot of stack space. …","","","","","","","","","","Keywords for WGSL (WebGPU Shading Language).","","","","A newtype struct where its only valid values are powers of …","","","","","","","","","","","","A context for evaluating constant expressions.","","","","","Helper class to emit expressions","","","","","","","","","","","","","","","","","","","","A type stored in the associated arena.","","","","","If const is also implemented as const","","","","","","","","","","","","","","","","","","","","","","","","Helper processor that derives the sizes of all types.","","","","","","","This processor assigns names to all the things in a module …","","","","","","","","","","","","","","","","","","","","","","","","","","Size and alignment information for a type.","","The result of computing an expression’s type.","","","A free-floating <code>TypeInner</code>, representing a type that may …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a new identifier based on <code>label_raw</code>.","","Convert the scalar components of <code>expr</code> to <code>target</code>.","Convert the scalar leaves of  <code>expr</code> to <code>target</code>, handling …","Remove all entries from this <code>Layouter</code>, retaining storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensure that the given block has return statements at the …","","","","","","","","","","","","","","","","","","","","","","","Return an iterator over the individual components …","","","","","","","","","","","","","","","","","","","","Return a <code>ConstantEvaluator</code> that will add expressions to …","Return a <code>ConstantEvaluator</code> that will add expressions to …","Return a <code>ConstantEvaluator</code> that will add expressions to …","Return a <code>ConstantEvaluator</code> that will add expressions to …","Forces the the expression to not be const","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Panics","","","","","","","","","Definitions for index bounds checking.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether or not <code>n</code> is a multiple of this alignment.","","","Returns <code>true</code> if naga can also evaluate expression as const","","","","","","","","","","","","Determine the type of <code>expr</code>.","Round <code>n</code> up to the nearest alignment boundary.","","","","","","","","","","","","","","","","","","","Produce the stride as if this type is a base of an array.","","","","","","","Try to evaluate <code>expr</code> at compile time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extend this <code>Layouter</code> with layouts for any new entries in …","Initialize a resolve context from the module.","","","","","","","","","","","","","Policies for injecting bounds checks during code …","How should code generated by Naga do bounds checks?","The number of elements is determined at runtime.","","An index that may be statically known, or may need to be …","The number of elements in an indexable type.","","","","Values of this type always have the given number of …","Out-of-bounds reads return zero, and writes have no effect.","Replace out-of-bounds indexes with some arbitrary …","","Naga adds no checks to indexing operations. Generate the …","Determine whether <code>index</code> is statically known to be in …","How should the generated code handle binding array indexes …","","","","","","","","","","","How should the generated code handle array, vector, or …","Determine which policy applies to <code>base</code>.","","","","","","","","","Return <code>true</code> if any of <code>self</code>’s policies are <code>policy</code>.","","","","","","","","","","","","","","Build a set of expressions used as indices, to cache in …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","How should the generated code handle image texel loads …","How should the generated code handle array, vector, or …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","This type can be passed as a function argument.","reductions, scans","","","","","","","","ballot, broadcast","Elect, Barrier","Group, binding, and location attributes.","Statements and blocks of them.","","","","","Support for <code>BuiltIn::ClipDistance</code>.","","Constants.","A WGSL constructible type.","Uniformity of control flow for operations that require it.","The data can be copied around.","Support for arrayed cube textures.","Support for <code>BuiltIn::CullDistance</code>.","","Allowed IR capabilities.","","","","","","","","","","","","","","","","Can be used for data variables.","","Support for generating two sources for blending from …","","","","Support for <code>early_depth_test</code>.","Expressions.","","","","","","","","","","","","","Information about an expression in a function body.","","Float values with width = 8.","","","","","","","","Indicates how a global variable is used.","","","Can be used for host-shareable structures.","","Can be be used for user-defined IO between pipeline stages.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Support for <code>BuiltIn::SampleIndex</code> and <code>Sampling::Sample</code>.","Support for <code>BuiltIn::ViewIndex</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Support for <code>BuiltIn::PrimitiveIndex</code>.","Support for <code>AddressSpace::PushConstant</code>.","","","The information about the data is queried.","Support for ray queries and acceleration structures.","Data will be read from the variable.","","","","","Support for non-uniform indexing of sampled textures and …","Support for non-uniform indexing of samplers.","Support for 64-bit signed and unsigned integers.","Support for all atomic operations on 64-bit integers.","Support for <code>AtomicFunction::Min</code> and <code>AtomicFunction::Max</code> on …","shuffle, shuffle xor","shuffle up, down","The data type has a size known by pipeline creation time.","Support for 16-bit normalized storage texture formats.","Host-shareable structure layouts.","Support for subgroup operations. Implies support for …","Support for subgroup barriers.","Support for subgroup operations in the vertex stage.","Validation flags.","","","Supported subgroup operations","","","","","","Flags associated with <code>Type</code>s by <code>Validator</code>.","","Support for non-uniform indexing of uniform buffers and …","","","Uniform control flow characteristics.","Kinds of expressions that require uniform control flow.","","","","","","","","","Any, All","","Validation flags.","","","","Data will be written to the variable.","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Set of shader stages where calling this function is valid.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","Indicates that the function is using dual source blending.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Function may kill the invocation.","Construct a new validator instance.","A child expression with non-uniform result.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The number of statements and other expressions using this …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","If this expression requires uniform control flow, store …","Reset the validator internals","All pairs of (texture, sampler) globals that may be used …","","","","","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type of this expression.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this expression is uniform, and why.","Uniformity characteristics.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Check the given module to be valid.","","Check the given module to be valid.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[27,27,0,48,26,36,26,36,13,55,55,48,48,43,44,53,0,47,53,43,44,53,47,53,0,13,55,0,55,48,48,48,48,48,13,59,64,0,55,49,27,0,0,59,24,24,33,25,49,55,0,0,13,42,0,59,26,36,59,52,52,0,12,0,59,55,48,30,30,48,24,45,0,55,23,0,0,28,55,59,48,48,48,48,48,48,32,24,32,32,32,56,48,34,55,0,0,48,48,43,48,24,28,0,30,59,0,43,49,44,43,44,54,48,48,0,48,36,27,36,27,48,0,0,0,0,45,30,48,48,29,26,48,48,48,24,23,48,64,24,0,1,0,55,0,0,24,0,55,49,43,22,43,0,1,36,56,27,36,27,59,13,0,0,55,0,55,55,59,43,44,54,58,48,24,0,48,48,47,47,59,2,48,48,43,22,43,29,0,55,55,24,24,0,55,12,48,48,43,42,43,59,55,0,13,44,48,53,44,48,53,48,48,64,0,43,53,43,42,45,48,43,50,50,50,24,24,53,48,0,55,48,48,48,48,48,48,48,29,24,24,13,24,48,0,24,1,58,1,25,33,33,33,33,33,33,33,33,33,33,33,33,48,0,13,59,0,55,55,54,48,48,55,0,0,59,48,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,48,3,2,3,30,24,0,24,34,13,0,48,0,13,0,55,0,43,43,52,52,52,52,48,48,48,26,50,48,0,0,0,0,55,48,0,48,1,34,0,0,59,13,0,59,55,59,59,24,24,0,55,24,43,44,59,0,0,55,0,48,48,58,48,25,48,0,0,36,56,27,36,27,8,26,55,0,22,1,0,48,48,48,48,48,48,48,13,13,0,23,24,24,51,3,46,0,1,24,24,59,55,46,51,51,53,46,51,51,49,55,1,2,3,4,7,10,12,9,17,18,7,10,8,21,22,23,1,24,25,26,27,28,29,30,31,32,2,33,34,35,13,36,37,38,12,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,9,17,18,7,10,8,21,22,23,1,24,25,26,27,28,29,30,31,32,2,33,34,35,13,36,37,38,12,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,48,62,4,27,27,0,55,31,39,40,60,61,2,3,2,3,2,3,2,3,2,2,3,3,2,3,2,3,57,62,9,17,18,7,10,8,73,4,21,22,23,1,24,25,26,27,28,29,30,31,32,2,33,34,35,13,36,37,38,12,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,9,17,18,7,10,8,73,4,21,22,23,1,24,25,26,27,28,29,30,31,32,2,33,34,35,13,36,37,38,12,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,13,18,7,7,18,7,9,17,18,7,10,8,73,4,21,22,23,1,24,25,26,27,28,29,30,31,32,2,33,34,35,13,36,37,38,12,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,9,17,18,7,10,8,73,4,21,22,23,1,24,25,26,27,28,29,30,31,32,2,33,34,35,13,36,37,38,12,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,9,21,22,23,1,24,25,26,27,28,29,30,32,2,33,34,39,42,43,44,45,46,47,48,52,53,54,0,9,21,22,23,1,24,25,26,27,28,29,30,32,2,33,34,39,42,43,44,45,46,47,48,52,53,54,2,3,13,13,21,66,2,3,10,18,7,10,8,2,3,62,65,66,10,10,9,17,18,7,10,21,22,23,1,24,25,26,27,28,29,30,31,32,2,33,34,35,13,36,37,38,12,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,0,2,3,7,63,4,4,4,4,2,3,66,9,8,73,21,22,23,1,24,25,26,27,28,29,30,31,32,2,33,34,35,13,36,37,38,12,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,64,9,9,9,73,73,73,21,21,21,22,22,22,23,23,23,1,1,1,24,24,24,25,25,25,26,26,26,27,27,27,28,28,28,29,29,29,30,30,30,31,31,31,32,32,32,2,2,2,33,33,33,34,34,34,35,35,35,13,13,13,13,12,12,12,39,39,39,42,42,42,43,43,43,44,44,44,45,45,45,46,46,46,47,47,47,48,48,48,52,52,52,53,53,53,54,54,54,3,3,3,56,56,56,64,64,64,0,62,10,2,3,10,57,7,7,7,17,27,9,17,18,7,10,8,73,4,4,21,22,23,1,24,25,26,27,28,29,30,31,32,2,2,2,2,2,33,34,35,13,36,37,38,12,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,3,3,3,3,55,56,57,58,59,60,61,62,63,64,65,66,9,17,18,7,10,10,8,8,8,73,4,21,22,23,1,24,25,26,27,27,28,29,30,31,32,2,33,34,35,13,36,37,38,12,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,2,3,2,2,3,3,2,3,51,17,2,3,2,3,10,0,63,66,66,66,66,18,18,7,18,7,66,66,39,9,21,22,23,1,24,25,26,27,28,29,30,31,32,2,33,34,35,13,12,39,42,43,44,45,46,47,48,52,53,54,56,64,37,49,9,18,7,7,51,7,17,13,37,38,40,41,35,18,2,3,2,3,2,3,9,17,18,7,10,8,73,4,21,22,23,1,24,25,26,27,28,29,30,31,32,2,33,34,35,13,36,37,38,12,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,7,4,17,10,2,3,4,27,2,3,13,8,34,55,13,18,7,10,2,3,13,34,34,26,59,18,7,2,3,7,2,3,0,27,18,7,10,73,73,73,62,8,4,44,31,35,37,38,40,41,60,62,63,62,55,18,7,10,8,4,36,17,17,2,3,73,31,36,62,66,9,21,22,23,1,24,25,26,27,28,29,30,32,2,33,34,36,39,42,43,44,45,46,47,48,51,52,53,54,13,65,0,10,7,65,65,2,3,18,62,13,36,13,36,13,9,17,18,7,10,21,22,23,1,24,25,26,27,28,29,30,31,32,2,33,34,35,13,36,37,38,12,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,2,3,13,9,17,18,7,10,8,21,22,23,1,24,25,26,27,28,29,30,31,32,2,33,34,35,13,36,37,38,12,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,4,40,10,10,10,4,66,10,63,2,3,2,3,8,2,3,12,66,23,28,27,27,27,9,17,18,7,10,8,73,4,21,22,23,1,24,25,26,27,28,29,30,31,32,2,33,34,35,13,36,37,38,12,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,8,4,9,27,33,13,2,3,8,9,17,18,7,10,8,73,4,21,22,23,1,24,25,26,27,28,29,30,31,32,2,33,34,35,13,36,37,38,12,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,7,9,17,18,7,10,8,73,4,21,22,23,1,24,25,26,27,28,29,30,31,32,2,33,34,35,13,36,37,38,12,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,31,37,38,40,41,60,61,36,9,17,18,7,10,8,73,4,21,22,23,1,24,25,26,27,28,29,30,31,32,2,33,34,35,13,36,37,38,12,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,66,2,3,8,0,57,36,27,10,4,4,63,9,36,252,253,254,254,254,254,255,256,257,257,257,257,258,259,260,261,262,263,264,265,266,256,267,259,260,261,259,268,261,267,258,257,259,259,260,269,262,263,267,270,259,260,259,268,270,271,272,269,264,256,270,260,259,273,271,266,265,274,275,273,271,276,276,277,277,278,279,280,281,280,281,282,282,283,284,284,285,286,287,288,289,290,290,291,287,285,290,289,292,293,288,289,286,287,294,292,295,296,293,285,292,295,288,296,286,287,291,297,294,289,292,298,299,300,301,298,302,303,298,304,302,305,302,306,305,306,300,301,299,306,304,300,307,0,112,112,112,112,117,117,0,0,0,0,112,0,112,0,0,0,112,112,112,112,307,112,113,0,112,112,112,112,112,112,112,112,117,113,307,115,112,117,113,307,115,112,115,112,115,112,112,112,112,112,0,112,112,112,112,112,113,113,112,115,112,112,112,112,112,117,113,307,115,112,112,112,112,112,112,112,0,0,113,112,112,112,117,113,307,115,112,112,112,117,112,113,112,112,0,113,113,112,0,112,113,112,0,112,112,112,115,112,115,112,117,113,307,115,112,117,113,307,115,112,113,117,113,307,115,112,112,0,0,118,118,118,118,118,118,118,118,118,118,118,118,0,121,120,120,0,120,120,120,120,120,129,120,121,120,120,122,122,129,0,0,121,120,0,129,129,120,120,121,120,129,120,120,120,129,129,120,0,129,0,0,0,120,120,120,0,0,120,120,120,121,0,129,129,0,0,129,0,0,126,120,121,123,120,121,120,121,120,121,120,121,120,120,121,121,120,121,120,121,131,120,122,121,123,124,127,128,125,126,129,131,120,122,121,123,124,127,128,125,126,129,120,122,121,123,124,125,126,120,122,121,123,124,125,126,120,121,120,121,123,122,121,123,124,120,121,120,121,124,120,122,121,120,120,120,121,121,121,120,121,120,120,120,120,120,122,122,121,121,121,121,121,123,124,127,128,125,126,129,129,131,120,122,121,123,124,127,128,125,126,129,129,120,121,120,120,121,121,120,121,120,121,120,121,127,120,121,120,121,120,121,131,120,122,121,123,124,127,128,125,126,129,120,121,120,121,120,121,120,121,120,121,127,124,131,122,120,121,126,122,128,120,121,125,122,121,123,124,120,121,124,129,120,121,120,121,120,121,125,128,120,122,121,123,124,125,126,122,129,120,121,131,120,122,121,123,124,127,128,125,126,129,131,120,122,121,123,124,127,128,125,126,129,126,131,120,122,121,123,124,127,128,125,126,129,128,120,121,128,123,131,123,123,308,308,0,0,139,0,0,0,139,136,0,139,0,0,139,139,135,135,135,135,135,135,135,135,135,135,0,134,137,140,141,134,135,136,137,138,139,140,141,134,135,136,137,138,139,134,135,136,137,134,135,136,137,134,137,138,134,135,136,137,138,134,135,136,137,134,134,134,135,135,135,137,137,137,137,134,135,136,136,137,139,139,140,141,134,135,136,137,138,139,139,134,135,137,140,141,134,135,136,137,138,139,140,141,135,137,134,137,134,135,136,137,137,139,134,137,134,135,136,137,135,136,139,140,141,134,135,136,137,138,139,140,141,134,135,136,137,138,139,140,141,134,135,136,137,138,139,141,137,0,0,0,0,152,0,0,0,0,152,147,147,147,147,147,147,152,152,142,0,145,145,145,145,0,152,0,142,147,147,147,147,147,147,147,147,0,147,147,147,147,0,147,147,147,147,147,147,147,147,152,147,147,147,147,147,152,152,152,152,152,152,152,152,152,152,152,152,0,0,0,150,149,143,151,153,142,143,144,152,145,146,147,148,149,150,151,153,142,143,144,152,145,146,147,148,149,150,146,143,142,143,144,145,146,147,148,149,150,142,143,144,145,146,147,148,149,150,143,144,146,149,150,142,143,144,145,146,147,148,149,150,153,142,143,144,145,146,147,148,149,142,142,142,143,143,143,144,144,144,146,146,146,147,147,147,148,148,148,149,149,149,146,151,142,143,144,152,152,145,145,146,147,148,149,150,148,151,153,142,143,144,152,152,145,146,147,148,149,150,142,143,144,146,147,148,149,149,149,146,151,153,142,143,144,152,145,146,147,148,149,150,146,143,151,148,146,144,144,0,143,142,143,144,145,146,147,148,149,150,148,144,152,146,149,143,142,143,144,145,146,147,148,149,150,152,145,151,153,142,143,144,152,145,146,147,148,149,150,151,153,142,143,144,152,145,146,147,148,149,150,151,153,142,143,144,152,145,146,147,148,149,150,150,150,151,0,146,0,158,0,155,155,155,0,0,158,0,158,158,0,158,158,157,155,157,158,154,158,156,156,154,155,156,159,154,155,156,157,158,159,154,155,156,157,158,159,154,155,156,157,158,159,154,155,156,157,158,159,154,155,156,157,158,159,159,159,154,155,156,157,158,159,154,155,156,157,158,159,154,155,156,157,158,159,154,154,154,155,155,155,156,156,156,157,157,157,158,158,158,159,159,159,154,155,156,157,158,159,154,155,156,157,158,159,154,155,156,157,158,159,154,155,156,157,158,159,159,159,159,159,159,154,155,156,157,158,159,154,155,156,157,158,159,154,155,156,157,158,159,154,155,156,157,158,159,154,155,156,157,158,159,160,160,160,0,160,160,160,160,160,160,160,160,160,160,160,160,0,160,160,160,160,160,160,166,165,168,168,168,168,168,168,168,168,168,168,168,168,168,168,0,0,168,168,168,166,167,168,0,168,168,168,168,168,168,168,166,165,0,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,167,169,0,168,166,168,168,168,168,168,168,168,168,168,168,168,168,168,168,169,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,167,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,167,167,168,168,168,168,168,168,168,168,168,168,168,168,168,168,0,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,166,168,168,168,168,165,168,168,168,168,168,169,168,168,167,168,172,172,167,167,168,0,169,168,168,168,168,0,168,172,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,165,167,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,167,0,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,167,168,169,169,168,168,168,168,168,168,168,168,168,168,167,168,168,168,0,0,0,165,166,171,173,165,166,165,166,165,166,165,166,165,165,166,166,165,166,165,166,175,167,168,169,170,165,166,171,172,173,174,175,167,168,169,170,165,166,171,172,173,174,173,173,167,168,169,170,165,166,171,172,173,174,167,168,169,170,165,166,171,172,173,174,167,168,167,168,165,166,165,166,173,175,171,173,171,174,165,166,165,166,174,167,168,165,166,171,172,167,167,167,168,168,168,165,165,165,166,166,166,171,171,171,172,172,172,165,166,170,173,167,168,169,169,170,165,165,165,165,165,166,166,166,166,166,171,172,173,174,175,167,168,169,170,165,166,171,172,173,174,165,166,165,165,166,166,165,166,165,166,165,166,167,168,167,168,175,167,168,165,171,165,166,165,166,165,166,175,167,168,169,170,165,166,171,172,173,174,165,166,165,166,165,166,165,166,165,166,173,170,175,165,166,167,168,165,166,171,174,165,166,174,170,165,166,165,166,165,166,167,168,169,170,165,166,171,172,173,174,169,165,166,175,167,168,169,170,165,166,171,172,173,174,175,167,168,169,170,165,166,171,172,173,174,175,167,168,169,170,165,166,171,172,173,174,165,166,175,0,173,180,178,0,180,180,180,180,0,0,178,178,178,178,178,178,178,178,178,179,178,180,179,178,180,178,178,178,178,178,178,178,178,178,178,178,178,179,178,178,178,178,178,180,180,179,178,180,180,178,178,178,178,178,178,178,178,178,179,178,180,178,178,178,178,178,179,178,178,178,178,180,178,178,178,178,180,178,179,178,180,179,178,180,179,178,180,178,179,0,0,182,0,181,0,181,181,0,181,181,182,183,181,182,183,181,182,183,181,182,183,181,182,181,182,181,182,181,181,181,182,182,182,181,182,183,181,182,183,181,182,181,182,181,182,183,183,181,182,182,181,182,183,183,181,182,183,181,182,183,181,182,183,0,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,0,0,188,188,0,188,189,188,189,188,189,188,189,188,189,189,0,189,189,188,189,189,188,189,188,188,189,189,0,188,189,188,189,188,189,0,0,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,200,200,200,200,200,200,197,200,200,200,200,200,200,200,200,196,200,200,200,200,200,200,200,200,198,197,200,0,0,0,200,197,200,0,200,195,197,200,200,200,200,200,200,197,198,200,198,198,198,200,200,200,200,200,200,200,200,200,200,200,200,195,195,200,200,200,200,198,0,200,200,0,200,200,0,200,200,198,0,200,200,200,200,200,200,200,200,200,200,198,200,0,200,200,200,200,200,200,200,197,0,197,200,200,198,198,198,198,198,198,200,200,200,200,195,196,197,198,199,185,200,204,201,202,195,196,197,198,199,185,200,204,201,202,195,196,197,198,199,185,200,195,196,197,198,199,185,200,201,202,204,201,185,185,185,195,196,197,200,185,201,195,196,197,197,198,198,199,199,185,185,200,204,201,202,195,196,197,197,198,198,199,185,185,200,204,204,201,202,195,196,197,198,199,185,200,204,201,202,199,199,199,202,202,201,185,204,201,195,196,197,198,199,185,200,197,198,199,185,195,196,197,198,199,185,200,204,201,202,195,196,197,198,199,185,200,204,201,202,195,196,197,198,199,185,200,204,201,202,201,201,206,186,186,206,186,206,206,0,206,206,206,0,206,186,186,186,0,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,206,186,206,0,206,186,0,0,0,0,206,186,206,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,207,207,208,186,205,206,207,208,186,205,206,207,186,205,206,207,186,205,206,207,207,186,186,186,206,186,186,206,207,208,186,186,205,206,207,208,186,205,206,207,208,208,0,206,207,186,205,206,207,186,208,186,205,206,207,208,186,205,206,207,208,186,205,206,207,309,309,309,309,0,0,211,187,211,187,187,187,187,187,187,187,187,187,211,187,211,187,187,187,187,211,211,0,187,187,187,211,187,211,187,211,187,0,0,220,220,0,161,161,161,161,161,220,0,0,161,215,114,0,0,161,161,216,0,114,114,0,114,0,0,220,220,216,114,161,114,191,114,191,191,0,161,114,75,0,220,220,161,215,191,0,0,191,161,161,161,218,161,161,161,161,191,161,161,191,191,218,191,161,191,0,0,0,161,161,161,216,191,0,0,218,161,216,191,161,215,161,161,0,161,161,0,0,215,161,216,161,161,114,161,161,161,161,216,114,0,161,0,220,220,75,161,217,190,190,213,215,222,161,221,216,217,214,218,219,114,212,75,191,220,106,190,213,215,222,161,221,216,217,214,218,219,114,212,75,191,220,106,212,212,213,213,214,215,161,216,217,218,219,75,191,220,106,215,161,216,217,218,219,75,191,220,106,215,216,215,216,190,106,221,214,212,216,217,75,0,215,216,217,218,219,114,75,191,220,215,215,215,216,216,216,114,114,114,220,220,220,221,0,213,215,222,161,161,221,216,216,217,214,218,218,219,219,114,75,191,191,220,213,213,213,213,222,190,213,215,222,161,161,221,216,216,217,214,218,219,114,212,75,191,220,220,106,222,216,190,106,190,75,216,217,114,220,0,214,219,75,222,190,213,215,222,161,221,216,217,214,218,219,114,212,75,191,220,106,216,222,222,222,221,190,216,216,222,216,190,106,215,216,212,190,216,216,217,75,217,161,190,221,213,215,161,216,217,218,219,75,191,220,106,217,161,216,218,219,191,75,213,190,213,215,222,161,221,216,217,214,218,219,114,212,75,191,220,106,190,213,215,222,161,221,216,217,214,218,219,114,212,75,191,220,106,219,190,213,215,222,161,221,216,217,214,218,219,114,212,75,191,220,106,190,106,214,190,310,310,311,312,311,313,314,313,314,315,316,315,0,0,97,225,0,0,0,98,225,97,227,227,98,227,0,130,227,130,225,98,97,227,130,225,98,97,130,130,227,130,225,98,227,130,225,98,130,227,130,227,130,227,130,98,227,227,227,130,130,130,0,227,130,225,98,98,97,227,130,225,98,97,227,130,130,130,227,130,225,98,97,227,130,227,130,225,98,98,227,130,225,98,97,227,130,225,98,97,227,130,225,98,97,230,233,248,243,240,245,240,240,246,233,233,231,231,247,244,245,242,232,234,231,230,231,230,232,232,0,0,238,237,237,238,239,0,245,242,242,162,0,162,0,242,162,230,228,232,0,244,250,232,231,242,247,162,0,238,238,238,238,238,242,242,0,0,240,232,234,245,245,162,238,0,0,0,162,0,230,228,230,238,238,223,243,249,250,243,241,243,242,248,242,242,238,242,247,247,238,242,247,244,238,238,243,238,244,244,242,238,247,238,238,238,247,238,238,238,238,245,162,242,238,238,238,238,238,238,242,238,244,245,244,244,244,245,244,247,247,238,242,242,238,242,242,242,238,238,238,238,238,238,238,239,242,242,242,242,242,238,241,243,244,249,250,238,243,238,238,242,162,238,239,0,242,0,232,232,247,244,246,246,247,247,244,238,242,247,248,242,244,250,243,245,0,245,242,223,238,239,241,242,249,250,239,246,242,242,250,244,238,245,162,0,232,232,242,242,229,232,229,245,240,240,240,232,232,232,232,232,233,233,230,232,231,232,232,232,0,243,246,0,237,238,239,162,0,0,250,232,245,245,0,0,246,243,244,247,247,238,242,234,233,0,0,0,0,228,229,239,223,0,247,242,242,238,228,229,230,231,232,233,234,226,228,229,230,231,232,233,234,228,229,230,231,232,233,234,228,229,230,231,232,233,234,228,229,230,231,232,233,234,228,228,229,229,230,230,231,231,232,232,233,233,234,234,228,229,230,231,232,233,234,228,229,230,231,232,233,234,228,235,229,236,226,237,238,239,223,240,241,242,243,244,245,230,246,247,248,231,232,233,234,119,251,249,250,162,228,235,229,236,226,237,238,239,223,240,241,242,243,244,245,230,246,247,248,231,232,233,234,119,251,249,250,162,0,228,235,229,236,226,237,238,239,223,240,241,242,243,244,245,230,246,247,248,231,232,233,234,119,249,250,162,228,235,229,236,226,237,238,239,223,240,241,242,243,244,245,230,246,247,248,231,232,233,234,119,249,250,162,228,229,230,231,232,233,234,228,229,230,231,232,233,234,231,232,233,228,235,229,236,226,230,231,232,233,234,119,228,229,230,231,232,233,234,226,226,228,229,230,231,232,233,234,228,229,230,231,232,233,234,228,228,228,229,229,229,230,230,230,231,231,231,232,232,232,233,233,233,234,234,234,226,228,229,230,231,232,233,234,228,228,228,228,228,235,229,229,229,229,229,236,226,237,237,238,238,239,239,223,223,240,240,241,241,242,242,243,243,244,244,245,245,230,230,230,230,230,246,246,247,247,248,248,231,231,231,231,231,232,232,232,232,232,233,233,233,233,233,234,234,234,234,234,119,251,249,249,250,250,162,162,228,235,229,236,226,237,238,238,238,238,238,239,239,239,239,239,223,223,240,241,242,243,244,245,245,245,230,246,247,247,248,231,232,233,234,119,251,249,250,162,162,228,229,230,231,232,233,234,228,228,229,229,230,230,231,231,232,232,233,233,234,234,228,229,230,231,232,233,234,228,229,230,231,232,233,234,228,229,230,231,232,233,234,119,226,226,226,119,119,119,228,229,230,231,232,233,234,228,229,230,231,232,233,234,228,229,230,231,232,233,234,228,235,229,236,226,237,238,239,223,240,241,242,243,244,245,230,246,247,248,231,232,233,234,119,251,249,250,162,228,229,230,231,232,233,234,228,229,230,231,232,233,234,228,229,230,231,232,233,234,228,229,230,231,232,233,234,228,229,230,231,232,233,234,226,251,235,228,229,230,231,232,233,234,236,228,229,230,231,232,233,234,235,251,226,228,235,229,236,226,230,231,232,233,234,119,228,229,230,231,232,233,234,238,239,223,240,242,243,245,247,162,228,229,230,231,232,233,234,228,229,230,231,232,233,234,251,251,228,229,230,231,232,233,234,228,235,229,236,226,237,238,239,223,240,241,242,243,244,245,230,246,247,248,231,232,233,234,119,249,250,162,237,238,239,223,240,241,242,243,244,245,246,247,248,249,250,162,228,229,230,231,232,233,234,228,235,229,236,226,237,238,239,223,240,241,242,243,244,245,230,246,247,248,231,232,233,234,119,251,249,250,162,228,235,229,236,226,237,238,239,223,240,241,242,243,244,245,230,246,247,248,231,232,233,234,119,251,249,250,162,236,228,235,229,236,226,237,238,239,223,240,241,242,243,244,245,230,246,247,248,231,232,233,234,119,251,249,250,162,236,226,228,229,230,231,232,233,234,251,251,251,317,318,319,318,319,318,317,320,320,321,322,323,324,325,324,325,326,324,325,323,322,327,328,329,329,329,330,330,331,332,333,334,332,333,334,335,336,331,332,334,336,337,337,338,339,338,338,340,341,342,341,342,342,339,342,340,343,344,345,346,347,348,343,345,346,347,348,349,343,344,345,346,347,348,349,349,350,351,352,350,351,353,353],"fc":[],"p":[[6,"AddressSpace",0],[5,"StorageAccess",0],[5,"Barrier",0],[5,"WithSpan",0],[17,"Output"],[10,"FnOnce",5867],[5,"Arena",0],[5,"Span",0],[5,"Handle",0],[5,"Block",0],[1,"tuple"],[6,"Binding",0],[6,"TypeInner",0],[5,"Unstructured",5868],[8,"Result",5869],[10,"Arbitrary",5870],[5,"Range",0],[5,"UniqueArena",0],[10,"Eq",5871],[10,"Hash",5872],[5,"EarlyDepthTest",0],[6,"ConservativeDepth",0],[6,"ShaderStage",0],[6,"BuiltIn",0],[6,"VectorSize",0],[6,"ScalarKind",0],[5,"Scalar",0],[6,"ArraySize",0],[6,"Interpolation",0],[6,"Sampling",0],[5,"StructMember",0],[6,"ImageDimension",0],[6,"StorageFormat",0],[6,"ImageClass",0],[5,"Type",0],[6,"Literal",0],[5,"Override",0],[5,"Constant",0],[5,"ResourceBinding",0],[5,"GlobalVariable",0],[5,"LocalVariable",0],[6,"UnaryOperator",0],[6,"BinaryOperator",0],[6,"AtomicFunction",0],[6,"DerivativeControl",0],[6,"DerivativeAxis",0],[6,"RelationalFunction",0],[6,"MathFunction",0],[6,"SampleLevel",0],[6,"ImageQuery",0],[6,"SwizzleComponent",0],[6,"GatherMode",0],[6,"SubgroupOperation",0],[6,"CollectiveOperation",0],[6,"Expression",0],[6,"SwitchValue",0],[5,"SwitchCase",0],[6,"RayQueryFunction",0],[6,"Statement",0],[5,"FunctionArgument",0],[5,"FunctionResult",0],[5,"Function",0],[5,"EntryPoint",0],[6,"PredeclaredType",0],[5,"SpecialTypes",0],[5,"Module",0],[1,"usize"],[6,"Option",5873],[1,"bool"],[1,"u32"],[6,"Result",5874],[10,"Clone",5875],[5,"SourceLocation",0],[6,"Ordering",5871],[6,"TypeResolution",4307],[10,"RangeBounds",5876],[1,"slice"],[10,"Deserializer",5877],[10,"Deserialize",5877],[17,"Item"],[10,"DoubleEndedIterator",5878],[1,"str"],[10,"Error",5879],[5,"String",5880],[10,"IntoIterator",5881],[10,"Fn",5867],[10,"PartialEq",5871],[8,"Bytes",0],[5,"Formatter",5882],[8,"Result",5882],[10,"Debug",5882],[10,"Display",5882],[5,"Vec",5883],[5,"Location",5884],[5,"Range",5876],[10,"Hasher",5872],[6,"IndexableLength",4699],[6,"IndexableLengthError",4699],[5,"Iter",5885],[10,"From",5886],[5,"Iter",5887],[5,"IterNames",5887],[1,"u8"],[10,"Serializer",5888],[10,"Serialize",5888],[5,"GlobalCtx",4307],[10,"Iterator",5889],[8,"SpanContext",0],[10,"ExactSizeIterator",5890],[5,"TypeId",5891],[10,"ToString",5880],[5,"RayFlag",2041],[5,"FunctionCtx",2041],[6,"NameKey",4307],[5,"Level",2041],[5,"Error",5882],[6,"FunctionType",2041],[5,"Options",2171],[5,"ModuleInfo",4792],[5,"Features",2185],[5,"WriterFlags",2185],[6,"Version",2185],[5,"Options",2185],[5,"PipelineOptions",2185],[5,"TextureMapping",2185],[5,"PushConstantItem",2185],[5,"VaryingLocation",2185],[5,"ReflectionInfo",2185],[6,"Error",2185],[5,"BoundsCheckPolicies",4699],[5,"Writer",2185],[10,"Write",5882],[1,"u16"],[5,"BindTarget",2478],[6,"ShaderModel",2478],[6,"EntryPointError",2478],[5,"Options",2478],[5,"ReflectionInfo",2478],[6,"Error",2478],[5,"FragmentEntryPoint",2478],[5,"Writer",2478],[6,"BindSamplerTarget",2625],[5,"BindTarget",2625],[5,"EntryPointResources",2625],[6,"EntryPointError",2625],[5,"Options",2625],[6,"VertexFormat",2625],[5,"AttributeMapping",2625],[5,"VertexBufferMapping",2625],[5,"PipelineOptions",2625],[5,"Writer",2625],[6,"Error",2625],[5,"TranslationInfo",2625],[6,"Coord",2913],[6,"Address",2913],[6,"BorderColor",2913],[6,"Filter",2913],[6,"CompareFunc",2913],[5,"InlineSampler",2913],[6,"PipelineConstantError",3067],[6,"ConstantEvaluatorError",4307],[6,"ValidationError",4792],[8,"PipelineConstants",2041],[6,"Cow",5892],[5,"ImageTypeFlags",3090],[5,"WriterFlags",3090],[6,"SourceLanguage",3090],[6,"Capability",3090],[6,"Error",3090],[5,"DebugInfo",3090],[5,"BindingInfo",3090],[6,"ZeroInitializeWorkgroupMemoryMode",3090],[5,"Options",3090],[5,"PipelineOptions",3090],[5,"Writer",3090],[8,"Word",5893],[8,"FastIndexSet",0],[5,"WriterFlags",3644],[5,"Writer",3644],[6,"Error",3644],[6,"Severity",3734],[6,"FilterableTriggeringRule",3734],[5,"DiagnosticFilter",3734],[5,"ShaderError",3796],[5,"ParseErrors",3871],[6,"Error",4122],[5,"ParseError",4272],[5,"SymbolTable",3817],[5,"Typifier",3817],[5,"ResolveContext",4307],[6,"ResolveError",4307],[10,"Sized",5894],[10,"Borrow",5895],[6,"Error",3853],[6,"Precision",3871],[6,"Profile",3871],[6,"ExpectedToken",3871],[6,"ErrorKind",3871],[5,"Error",3871],[6,"TokenValue",3871],[5,"ShaderMetadata",3871],[5,"Frontend",3871],[10,"WriteColor",5896],[5,"Options",3871],[5,"Instruction",4122],[6,"ModuleState",4122],[5,"Options",4122],[5,"Frontend",4122],[5,"Path",5897],[10,"AsRef",5886],[5,"Frontend",4272],[5,"Namer",4307],[5,"ConstantEvaluator",4307],[5,"Layouter",4307],[6,"ExpressionKind",4307],[5,"Alignment",4307],[5,"TypeLayout",4307],[6,"LayoutErrorInner",4307],[5,"LayoutError",4307],[6,"HashableLiteral",4307],[5,"Emitter",4307],[5,"ExpressionKindTracker",4307],[6,"LiteralError",4792],[8,"FastHashMap",0],[6,"GuardedIndex",4699],[5,"FunctionInfo",4792],[6,"BoundsCheckPolicy",4699],[5,"UniformityRequirements",4792],[5,"GlobalUse",4792],[5,"TypeFlags",4792],[5,"ValidationFlags",4792],[5,"Capabilities",4792],[5,"SubgroupOperationSet",4792],[5,"ShaderStages",4792],[5,"Uniformity",4792],[5,"ExpressionInfo",4792],[6,"ComposeError",4792],[6,"ExpressionError",4792],[6,"ConstExpressionError",4792],[6,"CallError",4792],[6,"LocalVariableError",4792],[6,"FunctionError",4792],[6,"GlobalVariableError",4792],[6,"VaryingError",4792],[6,"EntryPointError",4792],[6,"Disalignment",4792],[6,"TypeError",4792],[6,"WidthError",4792],[6,"ConstantError",4792],[6,"OverrideError",4792],[5,"Validator",4792],[15,"Storage",1909],[15,"Exchange",1910],[15,"Location",1911],[15,"Position",1915],[15,"Select",1916],[15,"Math",1916],[15,"Relational",1916],[15,"ImageSample",1916],[15,"ImageLoad",1916],[15,"Derivative",1916],[15,"Access",1916],[15,"AccessIndex",1916],[15,"RayQueryGetIntersection",1916],[15,"AtomicResult",1916],[15,"Compose",1916],[15,"As",1916],[15,"Unary",1916],[15,"ImageQuery",1916],[15,"Binary",1916],[15,"Swizzle",1916],[15,"Load",1916],[15,"Splat",1916],[15,"WorkGroupUniformLoadResult",1916],[15,"SubgroupOperationResult",1916],[15,"Storage",1970],[15,"Sampled",1970],[15,"Depth",1970],[15,"Size",1975],[15,"ModfResult",1976],[15,"FrexpResult",1976],[15,"Initialize",1980],[15,"Proceed",1980],[15,"Gradient",1983],[15,"If",1985],[15,"SubgroupGather",1985],[15,"SubgroupCollectiveOperation",1985],[15,"Call",1985],[15,"ImageStore",1985],[15,"Loop",1985],[15,"Switch",1985],[15,"Atomic",1985],[15,"RayQuery",1985],[15,"Store",1985],[15,"WorkGroupUniformLoad",1985],[15,"SubgroupBallot",1985],[15,"Return",1985],[15,"Image",2020],[15,"Pointer",2020],[15,"Array",2020],[15,"BindingArray",2020],[15,"Matrix",2020],[15,"Sampler",2020],[15,"Struct",2020],[15,"Vector",2020],[15,"ValuePointer",2020],[6,"RayIntersectionType",2041],[15,"Embedded",2476],[15,"UnsupportedMatrixStride",4268],[15,"InvalidCastArg",4687],[15,"AutomaticConversionLossy",4687],[15,"AutomaticConversionFloatToInt",4687],[15,"OutOfBoundsIndex",4692],[15,"InvalidAccess",4692],[15,"InvalidSubAccess",4692],[15,"FunctionNotDefined",4692],[15,"Argument",5784],[15,"ArgumentType",5784],[15,"ArgumentCount",5784],[15,"ComponentCount",5791],[15,"ComponentType",5791],[15,"ArrayStride",5794],[15,"StructSpan",5794],[15,"MemberOffset",5794],[15,"MemberOffsetAfterStruct",5794],[15,"UnsizedMember",5794],[15,"InvalidIntegerInterpolation",5805],[15,"InvalidLocationsWhileDualSourceBlending",5805],[15,"ComparisonSamplingMismatch",5807],[15,"InvalidCall",5810],[15,"Expression",5810],[15,"LocalVariable",5810],[15,"InvalidArgumentType",5810],[15,"InvalidArgumentPointerSpace",5810],[15,"PipelineInputRegularFunction",5810],[15,"InvalidStoreTypes",5810],[15,"MissingTypeFlags",5825],[15,"UnsupportedImageType",5827],[15,"InvalidPointerToUnsized",5827],[15,"InvalidArrayStride",5827],[15,"MemberOverlap",5827],[15,"MemberOutOfBounds",5827],[15,"Type",5840],[15,"ConstExpression",5840],[15,"Constant",5840],[15,"Override",5840],[15,"GlobalVariable",5840],[15,"Function",5840],[15,"EntryPoint",5840],[15,"InvalidLocationAttributeCombination",5860],[15,"InvalidInterpolationSamplingCombination",5860],[15,"BindingCollision",5860],[15,"MissingCapability",5865]],"b":[[556,"impl-StorageAccess"],[557,"impl-Flags-for-StorageAccess"],[558,"impl-Barrier"],[559,"impl-Flags-for-Barrier"],[1120,"impl-Debug-for-WithSpan%3CE%3E"],[1121,"impl-Display-for-WithSpan%3CE%3E"],[1135,"impl-UpperHex-for-StorageAccess"],[1136,"impl-Octal-for-StorageAccess"],[1137,"impl-Binary-for-StorageAccess"],[1138,"impl-Debug-for-StorageAccess"],[1139,"impl-LowerHex-for-StorageAccess"],[1164,"impl-UpperHex-for-Barrier"],[1165,"impl-Binary-for-Barrier"],[1166,"impl-Octal-for-Barrier"],[1167,"impl-Debug-for-Barrier"],[1168,"impl-LowerHex-for-Barrier"],[1188,"impl-From%3CLocation%3E-for-Span"],[1189,"impl-From%3CRange%3Cusize%3E%3E-for-Span"],[1246,"impl-Flags-for-StorageAccess"],[1247,"impl-StorageAccess"],[1248,"impl-Barrier"],[1249,"impl-Flags-for-Barrier"],[1310,"impl-Index%3CRange%3CT%3E%3E-for-Arena%3CT%3E"],[1311,"impl-Index%3CHandle%3CT%3E%3E-for-Arena%3CT%3E"],[2071,"impl-RayFlag"],[2072,"impl-Flags-for-RayFlag"],[2103,"impl-UpperHex-for-RayFlag"],[2104,"impl-LowerHex-for-RayFlag"],[2105,"impl-Octal-for-RayFlag"],[2106,"impl-Binary-for-RayFlag"],[2107,"impl-Debug-for-RayFlag"],[2114,"impl-Flags-for-RayFlag"],[2115,"impl-RayFlag"],[2254,"impl-Flags-for-Features"],[2255,"impl-Features"],[2256,"impl-Flags-for-WriterFlags"],[2257,"impl-WriterFlags"],[2323,"impl-Octal-for-Features"],[2324,"impl-Debug-for-Features"],[2325,"impl-LowerHex-for-Features"],[2326,"impl-UpperHex-for-Features"],[2327,"impl-Binary-for-Features"],[2328,"impl-Debug-for-Version"],[2329,"impl-Display-for-Version"],[2330,"impl-LowerHex-for-WriterFlags"],[2331,"impl-UpperHex-for-WriterFlags"],[2332,"impl-Octal-for-WriterFlags"],[2333,"impl-Debug-for-WriterFlags"],[2334,"impl-Binary-for-WriterFlags"],[2341,"impl-Display-for-Error"],[2342,"impl-Debug-for-Error"],[2357,"impl-Features"],[2358,"impl-Flags-for-Features"],[2359,"impl-Flags-for-WriterFlags"],[2360,"impl-WriterFlags"],[2553,"impl-Display-for-EntryPointError"],[2554,"impl-Debug-for-EntryPointError"],[2556,"impl-Debug-for-Error"],[2557,"impl-Display-for-Error"],[2792,"impl-Display-for-Error"],[2793,"impl-Debug-for-Error"],[2794,"impl-Debug-for-EntryPointError"],[2795,"impl-Display-for-EntryPointError"],[3077,"impl-Debug-for-PipelineConstantError"],[3078,"impl-Display-for-PipelineConstantError"],[3079,"impl-From%3CConstantEvaluatorError%3E-for-PipelineConstantError"],[3081,"impl-From%3CWithSpan%3CValidationError%3E%3E-for-PipelineConstantError"],[3395,"impl-ImageTypeFlags"],[3396,"impl-Flags-for-ImageTypeFlags"],[3397,"impl-WriterFlags"],[3398,"impl-Flags-for-WriterFlags"],[3496,"impl-Display-for-Error"],[3497,"impl-Debug-for-Error"],[3499,"impl-UpperHex-for-ImageTypeFlags"],[3500,"impl-Debug-for-ImageTypeFlags"],[3501,"impl-LowerHex-for-ImageTypeFlags"],[3502,"impl-Octal-for-ImageTypeFlags"],[3503,"impl-Binary-for-ImageTypeFlags"],[3504,"impl-Octal-for-WriterFlags"],[3505,"impl-LowerHex-for-WriterFlags"],[3506,"impl-Binary-for-WriterFlags"],[3507,"impl-UpperHex-for-WriterFlags"],[3508,"impl-Debug-for-WriterFlags"],[3526,"impl-ImageTypeFlags"],[3527,"impl-Flags-for-ImageTypeFlags"],[3528,"impl-WriterFlags"],[3529,"impl-Flags-for-WriterFlags"],[3658,"impl-Flags-for-WriterFlags"],[3659,"impl-WriterFlags"],[3681,"impl-LowerHex-for-WriterFlags"],[3682,"impl-Binary-for-WriterFlags"],[3683,"impl-UpperHex-for-WriterFlags"],[3684,"impl-Octal-for-WriterFlags"],[3685,"impl-Debug-for-WriterFlags"],[3686,"impl-Display-for-Error"],[3687,"impl-Debug-for-Error"],[3693,"impl-WriterFlags"],[3694,"impl-Flags-for-WriterFlags"],[3801,"impl-Display-for-ShaderError%3CParseErrors%3E"],[3802,"impl-Debug-for-ShaderError%3CE%3E"],[3803,"impl-Display-for-ShaderError%3CError%3E"],[3804,"impl-Display-for-ShaderError%3CWithSpan%3CValidationError%3E%3E"],[3805,"impl-Display-for-ShaderError%3CParseError%3E"],[3862,"impl-Display-for-Error"],[3863,"impl-Debug-for-Error"],[4034,"impl-Display-for-ExpectedToken"],[4035,"impl-Debug-for-ExpectedToken"],[4036,"impl-Display-for-ErrorKind"],[4037,"impl-Debug-for-ErrorKind"],[4038,"impl-Debug-for-Error"],[4039,"impl-Display-for-Error"],[4040,"impl-Debug-for-ParseErrors"],[4041,"impl-Display-for-ParseErrors"],[4228,"impl-Display-for-Error"],[4229,"impl-Debug-for-Error"],[4284,"impl-Debug-for-ParseError"],[4285,"impl-Display-for-ParseError"],[4515,"impl-Debug-for-ConstantEvaluatorError"],[4516,"impl-Display-for-ConstantEvaluatorError"],[4518,"impl-Debug-for-Alignment"],[4519,"impl-Display-for-Alignment"],[4522,"impl-Debug-for-LayoutErrorInner"],[4523,"impl-Display-for-LayoutErrorInner"],[4524,"impl-Debug-for-LayoutError"],[4525,"impl-Display-for-LayoutError"],[4528,"impl-Display-for-ResolveError"],[4529,"impl-Debug-for-ResolveError"],[4594,"impl-Mul%3Cu32%3E-for-Alignment"],[4595,"impl-Mul-for-Alignment"],[4753,"impl-Debug-for-IndexableLengthError"],[4754,"impl-Display-for-IndexableLengthError"],[5101,"impl-UniformityRequirements"],[5102,"impl-Flags-for-UniformityRequirements"],[5103,"impl-Flags-for-GlobalUse"],[5104,"impl-GlobalUse"],[5105,"impl-TypeFlags"],[5106,"impl-Flags-for-TypeFlags"],[5107,"impl-ValidationFlags"],[5108,"impl-Flags-for-ValidationFlags"],[5109,"impl-Capabilities"],[5110,"impl-Flags-for-Capabilities"],[5111,"impl-Flags-for-SubgroupOperationSet"],[5112,"impl-SubgroupOperationSet"],[5113,"impl-ShaderStages"],[5114,"impl-Flags-for-ShaderStages"],[5320,"impl-LowerHex-for-UniformityRequirements"],[5321,"impl-Octal-for-UniformityRequirements"],[5322,"impl-Debug-for-UniformityRequirements"],[5323,"impl-Binary-for-UniformityRequirements"],[5324,"impl-UpperHex-for-UniformityRequirements"],[5326,"impl-Binary-for-GlobalUse"],[5327,"impl-Debug-for-GlobalUse"],[5328,"impl-UpperHex-for-GlobalUse"],[5329,"impl-Octal-for-GlobalUse"],[5330,"impl-LowerHex-for-GlobalUse"],[5333,"impl-Debug-for-ComposeError"],[5334,"impl-Display-for-ComposeError"],[5335,"impl-Debug-for-ExpressionError"],[5336,"impl-Display-for-ExpressionError"],[5337,"impl-Debug-for-ConstExpressionError"],[5338,"impl-Display-for-ConstExpressionError"],[5339,"impl-Debug-for-LiteralError"],[5340,"impl-Display-for-LiteralError"],[5341,"impl-Debug-for-CallError"],[5342,"impl-Display-for-CallError"],[5343,"impl-Debug-for-LocalVariableError"],[5344,"impl-Display-for-LocalVariableError"],[5345,"impl-Debug-for-FunctionError"],[5346,"impl-Display-for-FunctionError"],[5347,"impl-Debug-for-GlobalVariableError"],[5348,"impl-Display-for-GlobalVariableError"],[5349,"impl-Debug-for-VaryingError"],[5350,"impl-Display-for-VaryingError"],[5351,"impl-Debug-for-EntryPointError"],[5352,"impl-Display-for-EntryPointError"],[5353,"impl-UpperHex-for-TypeFlags"],[5354,"impl-Debug-for-TypeFlags"],[5355,"impl-Octal-for-TypeFlags"],[5356,"impl-Binary-for-TypeFlags"],[5357,"impl-LowerHex-for-TypeFlags"],[5358,"impl-Display-for-Disalignment"],[5359,"impl-Debug-for-Disalignment"],[5360,"impl-Debug-for-TypeError"],[5361,"impl-Display-for-TypeError"],[5362,"impl-Debug-for-WidthError"],[5363,"impl-Display-for-WidthError"],[5364,"impl-UpperHex-for-ValidationFlags"],[5365,"impl-Binary-for-ValidationFlags"],[5366,"impl-Debug-for-ValidationFlags"],[5367,"impl-LowerHex-for-ValidationFlags"],[5368,"impl-Octal-for-ValidationFlags"],[5369,"impl-UpperHex-for-Capabilities"],[5370,"impl-Binary-for-Capabilities"],[5371,"impl-Debug-for-Capabilities"],[5372,"impl-Octal-for-Capabilities"],[5373,"impl-LowerHex-for-Capabilities"],[5374,"impl-UpperHex-for-SubgroupOperationSet"],[5375,"impl-Debug-for-SubgroupOperationSet"],[5376,"impl-LowerHex-for-SubgroupOperationSet"],[5377,"impl-Octal-for-SubgroupOperationSet"],[5378,"impl-Binary-for-SubgroupOperationSet"],[5379,"impl-Binary-for-ShaderStages"],[5380,"impl-LowerHex-for-ShaderStages"],[5381,"impl-Octal-for-ShaderStages"],[5382,"impl-UpperHex-for-ShaderStages"],[5383,"impl-Debug-for-ShaderStages"],[5386,"impl-Debug-for-ConstantError"],[5387,"impl-Display-for-ConstantError"],[5388,"impl-Debug-for-OverrideError"],[5389,"impl-Display-for-OverrideError"],[5390,"impl-Debug-for-ValidationError"],[5391,"impl-Display-for-ValidationError"],[5398,"impl-From%3CIndexableLengthError%3E-for-ExpressionError"],[5400,"impl-From%3CResolveError%3E-for-ExpressionError"],[5401,"impl-From%3CComposeError%3E-for-ExpressionError"],[5402,"impl-From%3CLiteralError%3E-for-ExpressionError"],[5403,"impl-From%3CWidthError%3E-for-ConstExpressionError"],[5404,"impl-From%3CLiteralError%3E-for-ConstExpressionError"],[5405,"impl-From%3CResolveError%3E-for-ConstExpressionError"],[5406,"impl-From%3CComposeError%3E-for-ConstExpressionError"],[5415,"impl-From%3CVaryingError%3E-for-EntryPointError"],[5417,"impl-From%3CFunctionError%3E-for-EntryPointError"],[5440,"impl-Flags-for-UniformityRequirements"],[5441,"impl-UniformityRequirements"],[5442,"impl-GlobalUse"],[5443,"impl-Flags-for-GlobalUse"],[5444,"impl-TypeFlags"],[5445,"impl-Flags-for-TypeFlags"],[5446,"impl-ValidationFlags"],[5447,"impl-Flags-for-ValidationFlags"],[5448,"impl-Flags-for-Capabilities"],[5449,"impl-Capabilities"],[5450,"impl-SubgroupOperationSet"],[5451,"impl-Flags-for-SubgroupOperationSet"],[5452,"impl-Flags-for-ShaderStages"],[5453,"impl-ShaderStages"],[5477,"impl-Index%3CHandle%3CExpression%3E%3E-for-FunctionInfo"],[5478,"impl-Index%3CHandle%3CGlobalVariable%3E%3E-for-FunctionInfo"],[5479,"impl-Index%3CHandle%3CExpression%3E%3E-for-ModuleInfo"],[5480,"impl-Index%3CHandle%3CType%3E%3E-for-ModuleInfo"],[5481,"impl-Index%3CHandle%3CFunction%3E%3E-for-ModuleInfo"]]}],\
["player",{"doc":"This is a player library for WebGPU traces.","t":"KMM","n":["GlobalPlay","encode_commands","process"],"q":[[0,"player"],[3,"wgpu_core::id"],[4,"wgpu_core::device::trace"],[5,"alloc::vec"],[6,"wgpu_core::id"],[7,"wgpu_core::id::markers"],[8,"wgpu_core::identity"]],"d":["","",""],"i":[0,1,1],"f":[0,[[1,2,[4,[3]]],5],[[1,6,7,8,9,[11,[10]]],12]],"c":[],"p":[[10,"GlobalPlay",0],[8,"CommandEncoderId",3],[6,"Command",4],[5,"Vec",5],[8,"CommandBufferId",3],[8,"DeviceId",3],[8,"QueueId",3],[6,"Action",4],[5,"Path",6],[6,"CommandBuffer",7],[5,"IdentityManager",8],[1,"tuple"]],"b":[]}],\
["wgpu",{"doc":"A cross-platform graphics and compute library based on …","t":"TTTTTTTPPIIIFFPGPPPGGPPPPPPPPPPPPPPPPPPTTTTTTTTTTPGFPPPPPPPPPPPPPPPPFFFFFFGGFFGIFIFGGFPFPPIPFFGIIFFFFPTTTTTTTTTSSTTTTTPPPPFFFFFFIGPFFGGFFFFFPFGFFFFFPIFIPPPPPPPPPPTTTTTTTTPPPPPPPPFPFPFIGGPPPFFPPPPGPITTPPPPPPGPGIPPPPPPFTTTTTTTGFPPPGPPPPPPPPPPPPFPGPTTTTPGPPPFPPTTTTTTTIFIFIFFFPPPGPPFPFFPPPFPPIPPFPPPPPGPPPTSTTTTTTTTTTTTPIGGPGPGPPPPFTTTPPPPPPPTPPPPPPPPPPPPPFFFPPPPPPTTTTTTTTSPFFFFFPFPPPPPPPGPGPGPGFFGFTSSSFIGFFPPPPPPPPPPPPTTTTTTTPPPPFFIFFFFFFFFFPPPIFFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPTTTTTTTTTTTTTTTTTTTFPPPGGFIGFFFGFPPPPPPPPPPPPPPPPPFPPPPPPPFPGFPPGPGFPPPFFIGGGGFTTTTTTTTTTTTTTTFPGIGGFFGFFPPFGPPPFFFFPPPPPPTTTTPPPPPPPPPPPKPPPPPPPPPTTTTTTTTSTTTTPPPPPPFFGFGPPTTPPPPPKKKPPKPPTTPPPONOOONNNNNNNNNNNNNONOOOOOOOONNNNNNNNNNNNNNNOOOOOONOOOOOOOOONNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNOOONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNOOOONOOONNNNNNNNNNNNNONOOONNNNNNNNNNNNNNNNNNNNNNNEOOOONNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOONNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNOONNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNONNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNONNNNNNNNNNNNNNNNNNONEONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOQQNNOOOONNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOONOOOOOONNOOOOOOOONNNOOOOOOOOOOOOOOOOOONOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONOOONNOOOONNNNOOOEONNNNNNNNNNNNNNNNNOOOOONNOOOOOONNNNNNNNNNNNNNNNNNONONNNONNNNOOOONOOOONNNNOOOOOONNNNNNNNNNNNONNNOONOOOENOONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNOOOONNONNNOOOONOOOONOONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNOOOOOOOOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOOOONNNCOOQOOOOOOOOONNNOONNNOONNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFKFFFFPPKFGHNNNHONNNNNNNNNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNMMMMHNNNNNNNNNNNOOOONNNNNNNNNNNNNHNNOHHOONNNNNNNHOHNHHHHNNMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOOO","n":["ADDRESS_MODE_CLAMP_TO_BORDER","ADDRESS_MODE_CLAMP_TO_ZERO","ALL","ALLOW_UNDERLYING_NONCOMPLIANT_ADAPTER","ALPHA","ALPHA_BLENDING","ANISOTROPIC_FILTERING","AccelerationStructure","AccelerationStructure","AccelerationStructureFlags","AccelerationStructureGeometryFlags","AccelerationStructureUpdateMode","Adapter","AdapterInfo","Add","AddressMode","All","Always","Astc","AstcBlock","AstcChannel","Auto","AutoNoVsync","AutoVsync","Automatic","B10x10","B10x5","B10x6","B10x8","B12x10","B12x12","B4x4","B5x4","B5x5","B6x5","B6x6","B8x5","B8x6","B8x8","BASE_VERTEX","BGRA8UNORM_STORAGE","BLACK","BLAS_INPUT","BLENDABLE","BLUE","BLUE","BROWSER_WEBGPU","BUFFER_BINDINGS_NOT_16_BYTE_ALIGNED","BUFFER_BINDING_ARRAY","Back","Backend","Backends","Bc1RgbaUnorm","Bc1RgbaUnormSrgb","Bc2RgbaUnorm","Bc2RgbaUnormSrgb","Bc3RgbaUnorm","Bc3RgbaUnormSrgb","Bc4RSnorm","Bc4RUnorm","Bc5RgSnorm","Bc5RgUnorm","Bc6hRgbFloat","Bc6hRgbUfloat","Bc7RgbaUnorm","Bc7RgbaUnormSrgb","Bgra8Unorm","Bgra8UnormSrgb","BindGroup","BindGroupDescriptor","BindGroupEntry","BindGroupLayout","BindGroupLayoutDescriptor","BindGroupLayoutEntry","BindingResource","BindingType","Blas","BlasBuildEntry","BlasGeometries","BlasGeometrySizeDescriptors","BlasTriangleGeometry","BlasTriangleGeometrySizeDescriptor","BlendComponent","BlendFactor","BlendOperation","BlendState","BrowserWebGpu","Buffer","Buffer","Buffer","BufferAddress","BufferArray","BufferAsyncError","BufferBinding","BufferBindingType","BufferDescriptor","BufferSize","BufferSlice","BufferUsages","BufferView","BufferViewMut","Build","CLEAR_TEXTURE","CLIPPER_INVOCATIONS","CLIPPER_PRIMITIVES_OUT","COLOR","COMPARISON_SAMPLERS","COMPUTE","COMPUTE_SHADERS","COMPUTE_SHADER_INVOCATIONS","CONSERVATIVE_RASTERIZATION","COPY_BUFFER_ALIGNMENT","COPY_BYTES_PER_ROW_ALIGNMENT","COPY_DST","COPY_DST","COPY_SRC","COPY_SRC","CUBE_ARRAY_TEXTURES","Ccw","ClampToBorder","ClampToEdge","Clear","Color","ColorTargetState","ColorWrites","CommandBuffer","CommandBufferDescriptor","CommandEncoder","CommandEncoderDescriptor","CompareFunction","Comparison","CompilationInfo","CompilationMessage","CompilationMessageType","CompositeAlphaMode","ComputePass","ComputePassDescriptor","ComputePassTimestampWrites","ComputePipeline","ComputePipelineDescriptor","Constant","ContextBlasBuildEntry","ContextBlasGeometries","ContextBlasTriangleGeometry","ContextTlasBuildEntry","ContextTlasInstance","ContextTlasPackage","CoreCounters","Cpu","CreateBlasDescriptor","CreateSurfaceError","CreateTlasDescriptor","Cube","CubeArray","Cw","D1","D1","D2","D2","D2Array","D3","D3","DEBUG","DEPTH32FLOAT_STENCIL8","DEPTH_BIAS_CLAMP","DEPTH_CLIP_CONTROL","DEPTH_TEXTURE_AND_BUFFER_COPIES","DISCARD_HAL_LABELS","DUAL_SOURCE_BLENDING","DX12","DecrementClamp","DecrementWrap","Depth","Depth16Unorm","Depth24Plus","Depth24PlusStencil8","Depth32Float","Depth32FloatStencil8","DepthBiasState","DepthOnly","DepthStencilState","Destroyed","Device","DeviceDescriptor","DeviceLostReason","DeviceType","Discard","DiscreteGpu","DisplayP3","DownlevelCapabilities","DownlevelFlags","Dropped","Dst","DstAlpha","Dx12","Dx12Compiler","Dxc","DynamicOffset","EXPERIMENTAL_RAY_QUERY","EXPERIMENTAL_RAY_TRACING_ACCELERATION_STRUCTURE","EacR11Snorm","EacR11Unorm","EacRg11Snorm","EacRg11Unorm","Empty","Equal","Error","Error","ErrorFilter","ErrorSource","Etc2Rgb8A1Unorm","Etc2Rgb8A1UnormSrgb","Etc2Rgb8Unorm","Etc2Rgb8UnormSrgb","Etc2Rgba8Unorm","Etc2Rgba8UnormSrgb","Extent3d","FILTERABLE","FLOAT32_FILTERABLE","FRAGMENT","FRAGMENT_SHADER_INVOCATIONS","FRAGMENT_STORAGE","FRAGMENT_WRITABLE_STORAGE","FULL_DRAW_INDEX_UINT32","Face","Features","Fifo","FifoRelaxed","Fill","FilterMode","Filtering","Float","Float16x2","Float16x4","Float32","Float32x2","Float32x3","Float32x4","Float64","Float64x2","Float64x3","Float64x4","FragmentState","Front","FrontFace","Fxc","GL","GPU_BASED_VALIDATION","GREEN","GREEN","Gl","Gles3MinorVersion","Good","Greater","GreaterEqual","HalCounters","Hdr","HighPerformance","IGNORE","INDEPENDENT_BLEND","INDEX","INDIRECT","INDIRECT_EXECUTION","INDIRECT_FIRST_INSTANCE","INVALID_TIMESTAMP","ImageCopyBuffer","ImageCopyBufferBase","ImageCopyTexture","ImageCopyTextureBase","ImageCopyTextureTagged","ImageCopyTextureTaggedBase","ImageDataLayout","ImageSubresourceRange","Immediate","IncrementClamp","IncrementWrap","IndexFormat","Info","Inherit","Instance","Instance","InstanceDescriptor","InstanceFlags","IntegratedGpu","Internal","Internal","InternalCounters","Invert","Keep","Label","Less","LessEqual","Limits","Line","LineList","LineStrip","Linear","Load","LoadOp","Lost","Lost","LowPower","MAPPABLE_PRIMARY_BUFFERS","MAP_ALIGNMENT","MAP_READ","MAP_WRITE","METAL","MULTISAMPLED_SHADING","MULTISAMPLE_RESOLVE","MULTISAMPLE_X16","MULTISAMPLE_X2","MULTISAMPLE_X4","MULTISAMPLE_X8","MULTIVIEW","MULTI_DRAW_INDIRECT","MULTI_DRAW_INDIRECT_COUNT","Mailbox","Maintain","MaintainBase","MaintainResult","Manual","MapMode","Max","MemoryHints","MemoryUsage","Metal","Min","MirrorRepeat","MultisampleState","NONBLOCKING_QUERY_RESOLVE","NONE","NON_POWER_OF_TWO_MIPMAPPED_TEXTURES","NV12","Nearest","Never","NonFiltering","None","None","NotEqual","OVER","Occlusion","Ok","One","OneMinusConstant","OneMinusDst","OneMinusDstAlpha","OneMinusSrc","OneMinusSrc1","OneMinusSrc1Alpha","OneMinusSrcAlpha","Opaque","OpaqueBlack","OpaqueWhite","Operations","Origin2d","Origin3d","Other","OutOfMemory","OutOfMemory","OutOfMemory","Outdated","Outdated","PARTIALLY_BOUND_BINDING_ARRAY","PIPELINE_CACHE","PIPELINE_STATISTICS_QUERY","POLYGON_MODE_LINE","POLYGON_MODE_POINT","PREMULTIPLIED_ALPHA_BLENDING","PRIMARY","PUSH_CONSTANTS","PUSH_CONSTANT_ALIGNMENT","Performance","PipelineCache","PipelineCacheDescriptor","PipelineCompilationOptions","PipelineLayout","PipelineLayoutDescriptor","PipelineStatistics","PipelineStatisticsTypes","Plane0","Plane1","Plane2","Point","PointList","Poll","Poll","PolygonMode","PostMultiplied","PowerPreference","PreMultiplied","PredefinedColorSpace","PreferUpdate","PresentMode","PresentationTimestamp","PrimitiveState","PrimitiveTopology","PushConstantRange","QUERY_RESOLVE","QUERY_RESOLVE_BUFFER_ALIGNMENT","QUERY_SET_MAX_QUERIES","QUERY_SIZE","QuerySet","QuerySetDescriptor","QueryType","Queue","QueueWriteBufferView","R16Float","R16Sint","R16Snorm","R16Uint","R16Unorm","R32Float","R32Sint","R32Uint","R8Sint","R8Snorm","R8Uint","R8Unorm","READ_ONLY_DEPTH_STENCIL","RED","RED","RENDER_ATTACHMENT","REPLACE","REPLACE","RG11B10UFLOAT_RENDERABLE","RawHandle","Read","ReadOnly","ReadWrite","RenderBundle","RenderBundleDepthStencil","RenderBundleDescriptor","RenderBundleEncoder","RenderBundleEncoderDescriptor","RenderPass","RenderPassColorAttachment","RenderPassDepthStencilAttachment","RenderPassDescriptor","RenderPassTimestampWrites","RenderPipeline","RenderPipelineDescriptor","Repeat","Replace","ReplacedCallback","RequestAdapterOptions","RequestAdapterOptionsBase","RequestDeviceError","ReverseSubtract","Rg11b10Ufloat","Rg16Float","Rg16Sint","Rg16Snorm","Rg16Uint","Rg16Unorm","Rg32Float","Rg32Sint","Rg32Uint","Rg8Sint","Rg8Snorm","Rg8Uint","Rg8Unorm","Rgb10a2Uint","Rgb10a2Unorm","Rgb9e5Ufloat","Rgba16Float","Rgba16Sint","Rgba16Snorm","Rgba16Uint","Rgba16Unorm","Rgba32Float","Rgba32Sint","Rgba32Uint","Rgba8Sint","Rgba8Snorm","Rgba8Uint","Rgba8Unorm","Rgba8UnormSrgb","SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","SECONDARY","SHADER_EARLY_DEPTH_TEST","SHADER_F16","SHADER_F64","SHADER_I16","SHADER_INT64","SHADER_INT64_ATOMIC_ALL_OPS","SHADER_INT64_ATOMIC_MIN_MAX","SHADER_PRIMITIVE_INDEX","SPIRV_SHADER_PASSTHROUGH","STORAGE","STORAGE_BINDING","STORAGE_READ_WRITE","STORAGE_RESOURCE_BINDING_ARRAY","SUBGROUP","SUBGROUP_BARRIER","SUBGROUP_VERTEX","SURFACE_VIEW_FORMATS","Sampler","Sampler","Sampler","SamplerArray","SamplerBindingType","SamplerBorderColor","SamplerDescriptor","ShaderLocation","ShaderModel","ShaderModule","ShaderModuleDescriptor","ShaderModuleDescriptorSpirV","ShaderSource","ShaderStages","Sint","Sint16x2","Sint16x4","Sint32","Sint32x2","Sint32x3","Sint32x4","Sint8x2","Sint8x4","Sm2","Sm4","Sm5","Snorm16x2","Snorm16x4","Snorm8x2","Snorm8x4","Some","SourceLocation","Src","Src1","Src1Alpha","SrcAlpha","SrcAlphaSaturated","Srgb","Stencil8","StencilFaceState","StencilOnly","StencilOperation","StencilState","Storage","StorageTexture","StorageTextureAccess","Store","StoreOp","SubmissionIndex","SubmissionQueueEmpty","Suboptimal","Subtract","Surface","SurfaceCapabilities","SurfaceConfiguration","SurfaceError","SurfaceStatus","SurfaceTarget","SurfaceTargetUnsafe","SurfaceTexture","TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES","TEXTURE_BINDING","TEXTURE_BINDING_ARRAY","TEXTURE_COMPRESSION_ASTC","TEXTURE_COMPRESSION_ASTC_HDR","TEXTURE_COMPRESSION_BC","TEXTURE_COMPRESSION_BC_SLICED_3D","TEXTURE_COMPRESSION_ETC2","TEXTURE_FORMAT_16BIT_NORM","TEXTURE_FORMAT_NV12","TIMESTAMP_QUERY","TIMESTAMP_QUERY_INSIDE_ENCODERS","TIMESTAMP_QUERY_INSIDE_PASSES","TLAS_INPUT","TRANSPARENT","Texture","Texture","TextureAspect","TextureDescriptor","TextureDimension","TextureFormat","TextureFormatFeatureFlags","TextureFormatFeatures","TextureSampleType","TextureUsages","TextureView","TextureView","TextureViewArray","TextureViewDescriptor","TextureViewDimension","Timeout","Timeout","Timestamp","Tlas","TlasBuildEntry","TlasInstance","TlasPackage","TransparentBlack","TriangleGeometries","TriangleGeometries","TriangleList","TriangleStrip","Triangles","UNIFORM","UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","UNRESTRICTED_EXTERNAL_TEXTURE_COPIES","UNRESTRICTED_INDEX_BUFFER","Uint","Uint16","Uint16x2","Uint16x4","Uint32","Uint32","Uint32x2","Uint32x3","Uint32x4","Uint8x2","Uint8x4","UncapturedErrorHandler","Uniform","Unknown","Unorm","Unorm10_10_10_2","Unorm16x2","Unorm16x4","Unorm8x2","Unorm8x4","UnormSrgb","VALIDATION","VERTEX","VERTEX","VERTEX_AND_INSTANCE_INDEX_RESPECTS_RESPECTIVE_FIRST_VALUE_IN_INDIRECT_DRAW","VERTEX_ATTRIBUTE_64BIT","VERTEX_FRAGMENT","VERTEX_SHADER_INVOCATIONS","VERTEX_STORAGE","VERTEX_STRIDE_ALIGNMENT","VERTEX_WRITABLE_STORAGE","VIEW_FORMATS","VULKAN","VULKAN_GOOGLE_DISPLAY_TIMING","Validation","Validation","Version0","Version1","Version2","Vertex","VertexAttribute","VertexBufferLayout","VertexFormat","VertexState","VertexStepMode","VirtualGpu","Vulkan","WEBGPU_TEXTURE_FORMAT_SUPPORT","WHITE","Wait","Wait","WaitForSubmissionIndex","WaitForSubmissionIndex","Warning","WasmNotSend","WasmNotSendSync","WasmNotSync","Wgsl","Window","WindowHandle","Write","WriteOnly","ZERO","ZERO","Zero","Zero","Zero","a","add_srgb_suffix","address_mode_u","address_mode_v","address_mode_w","advanced_debugging","all","all","all","all","all","all","all","all","all","all","all_native_mask","all_webgpu_mask","allowed_usages","allowed_vertex_formats_for_blas","alpha","alpha_mode","alpha_modes","alpha_to_coverage_enabled","anisotropy_clamp","array_layer_count","array_layer_count","array_stride","as_binding","as_entire_binding","as_entire_buffer_binding","as_hal","as_hal","as_hal","as_hal","as_hal","as_hal","as_hal","as_hal_mut","as_image_copy","as_mut","as_mut","as_ref","aspect","aspect","aspect","aspect","aspect","aspect","aspect_specific_format","attributes","b","back","backend","backends","base_array_layer","base_array_layer","base_mip_level","base_mip_level","begin_compute_pass","begin_occlusion_query","begin_pipeline_statistics_query","begin_pipeline_statistics_query","begin_render_pass","beginning_of_pass_write_index","beginning_of_pass_write_index","bias","bind_group_layouts","bind_group_layouts","bind_groups","binding","binding","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blas","blend","block_copy_size","block_dimensions","block_size","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffer","buffer_memory","buffers","buffers","build_acceleration_structures","build_acceleration_structures_unsafe_tlas","bytes_per_row","cache","cache","check_limits","check_limits_with_fail_fn","clamp","clear_buffer","clear_texture","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color","color_attachments","color_formats","color_space","color_space","command_encoders","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compatible_surface","compatible_surface","compatible_texture_dimension","compilation_options","compilation_options","compilation_options","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","compliant","components","components_with_aspect","compute_pipelines","configure","conservative","constant","constants","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","copy_buffer_to_buffer","copy_buffer_to_texture","copy_texture_to_buffer","copy_texture_to_texture","core","core","count","count","count","create_adapter_from_hal","create_bind_group","create_bind_group_layout","create_blas","create_buffer","create_buffer_from_hal","create_buffer_init","create_command_encoder","create_compute_pipeline","create_device_from_hal","create_pipeline_cache","create_pipeline_layout","create_query_set","create_render_bundle_encoder","create_render_pipeline","create_sampler","create_shader_module","create_shader_module_spirv","create_shader_module_unchecked","create_surface","create_surface_unsafe","create_texture","create_texture_from_hal","create_texture_with_data","create_tlas","create_view","cull_mode","custom_index","data","debugging","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","depth_compare","depth_fail_op","depth_ops","depth_or_array_layers","depth_or_array_layers","depth_read_only","depth_stencil","depth_stencil","depth_stencil_attachment","depth_write_enabled","deref","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","desired_maximum_frame_latency","destroy","destroy","destroy","destroy","destroy","device","device_type","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","dimension","dimension","dimension","dispatch_workgroups","dispatch_workgroups_indirect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downlevel_defaults","downlevel_webgl2_defaults","draw","draw","draw","draw","draw_indexed","draw_indexed","draw_indexed","draw_indexed","draw_indexed_indirect","draw_indexed_indirect","draw_indexed_indirect","draw_indexed_indirect","draw_indirect","draw_indirect","draw_indirect","draw_indirect","driver","driver_info","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dst_factor","dx12_shader_compiler","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","enabled_backend_features","end_occlusion_query","end_of_pass_write_index","end_of_pass_write_index","end_pipeline_statistics_query","end_pipeline_statistics_query","entries","entries","entry_point","entry_point","entry_point","enumerate_adapters","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_bundles","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","fail_op","fallback","features","features","fences","finish","finish","first_vertex","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_fallback_adapter","force_fallback_adapter","forget_lifetime","forget_lifetime","format","format","format","format","format","format","format","format","formats","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_build_config","from_core","from_hal","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_plane","from_window","front","front_face","g","generate_allocator_report","generate_report","geometry","get","get_bind_group_layout","get_bind_group_layout","get_capabilities","get_compilation_info","get_current_texture","get_data","get_default_config","get_downlevel_capabilities","get_info","get_internal_counters","get_mapped_range","get_mapped_range_mut","get_mut_single","get_mut_slice","get_presentation_timestamp","get_texture_format_features","get_timestamp_period","gles_minor_version","guaranteed_format_features","hal","hal","handle","has_color_aspect","has_depth_aspect","has_dynamic_offset","has_stencil_aspect","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","include_spirv_raw","include_wgsl","index","index","index_buffer","index_buffer_offset","index_count","index_format","index_mut","index_mut","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_debug_marker","insert_debug_marker","insert_debug_marker","instance_buffer","instance_count","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_bcn","is_combined_depth_stencil_format","is_compressed","is_depth_enabled","is_depth_read_only","is_depth_stencil_component","is_depth_stencil_format","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_enabled","is_enabled","is_full_resource","is_invalid","is_multi_planar_format","is_queue_empty","is_read_only","is_read_only","is_read_only","is_srgb","is_stencil_read_only","is_strip","is_surface_supported","is_wait","is_webgpu_compliant","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","layer_range","layout","layout","layout","layout","layout","length","limits","limits","limits","line_number","line_position","load","location","lod_max_clamp","lod_min_clamp","mag_filter","map_async","map_index","map_label","mapped_at_creation","mask","mask","max_bind_groups","max_bindings_per_bind_group","max_buffer_size","max_color_attachment_bytes_per_sample","max_color_attachments","max_compute_invocations_per_workgroup","max_compute_workgroup_size_x","max_compute_workgroup_size_y","max_compute_workgroup_size_z","max_compute_workgroup_storage_size","max_compute_workgroups_per_dimension","max_dynamic_storage_buffers_per_pipeline_layout","max_dynamic_uniform_buffers_per_pipeline_layout","max_instances","max_inter_stage_shader_components","max_mips","max_non_sampler_bindings","max_push_constant_size","max_sampled_textures_per_shader_stage","max_samplers_per_shader_stage","max_storage_buffer_binding_size","max_storage_buffers_per_shader_stage","max_storage_textures_per_shader_stage","max_subgroup_size","max_texture_array_layers","max_texture_dimension_1d","max_texture_dimension_2d","max_texture_dimension_3d","max_uniform_buffer_binding_size","max_uniform_buffers_per_shader_stage","max_vertex_attributes","max_vertex_buffer_array_stride","max_vertex_buffers","memory_allocations","memory_hints","message","message_type","messages","min_filter","min_storage_buffer_offset_alignment","min_subgroup_size","min_uniform_buffer_offset_alignment","mip_level","mip_level","mip_level","mip_level","mip_level_count","mip_level_count","mip_level_count","mip_level_count","mip_level_size","mip_range","mipmap_filter","module","module","module","multi_draw_indexed_indirect","multi_draw_indexed_indirect_count","multi_draw_indirect","multi_draw_indirect_count","multisample","multiview","multiview","naga","name","needs_ref_value","needs_ref_value","needs_ref_value","new","new","new","new_with_instances","not","not","not","not","not","not","not","not","not","not","occlusion_query_set","offset","offset","offset","offset","on_submitted_work_done","on_uncaptured_error","operation","ops","origin","origin","origin","origin","panic_on_timeout","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pass_op","physical_size","pipeline_layouts","planes","poll","poll_all","polygon_mode","pop_debug_group","pop_debug_group","pop_debug_group","pop_error_scope","power_preference","power_preference","premultiplied_alpha","premultiplied_alpha","present","present_mode","present_modes","primitive","push_constant_ranges","push_debug_group","push_debug_group","push_debug_group","push_error_scope","query_set","query_set","query_sets","r","range","read_mask","ref_second_blend_source","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove_srgb_suffix","render_pipelines","request_adapter","request_device","required_features","required_features","required_limits","resolve_query_set","resolve_target","resource","rows_per_image","rwh","sample_count","sample_count","sample_count","sample_count_supported","sample_type","samplers","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","set","set","set","set_bind_group","set_bind_group","set_bind_group","set_bind_group","set_bind_group","set_blas","set_blend_constant","set_device_lost_callback","set_index_buffer","set_index_buffer","set_index_buffer","set_index_buffer","set_pipeline","set_pipeline","set_pipeline","set_pipeline","set_pipeline","set_push_constants","set_push_constants","set_push_constants","set_push_constants","set_push_constants","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_vertex_buffer","set_vertex_buffer","set_vertex_buffer","set_viewport","shader_location","shader_model","shader_modules","size","size","size","size","size","size","size","size_multiple_requirement","slice","slope_scale","source","source","source","source","source","src_factor","stages","start_capture","stencil","stencil_ops","stencil_read_only","step_mode","stop_capture","store","strip_index_format","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","submit","suboptimal","supported_sample_counts","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","target_component_alignment","target_pixel_byte_cost","targets","texture","texture","texture","texture","texture","texture_memory","texture_views","textures","timestamp_writes","timestamp_writes","tlas","tlas","to_2d","to_3d","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_str","to_string","to_string","to_string","to_string","to_string","to_string","to_tagged","to_untagged","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","topology","transform","transform_buffer","transform_buffer_offset","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unclipped_depth","union","union","union","union","union","union","union","union","union","union","unmap","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_mode","update_mode","usage","usage","usage","usage","usage","usages","uses_constant","using_alignment","using_resolution","util","vendor","vertex","vertex_attr_array","vertex_buffer","vertex_count","vertex_format","vertex_stride","view","view","view_formats","view_formats","visibility","wait","wait_for","width","width","width","with_env","write_buffer","write_buffer_with","write_mask","write_mask","write_texture","write_timestamp","write_timestamp","write_timestamp","x","x","y","y","z","zero_initialize_workgroup_memory","access","format","has_dynamic_offset","min_binding_size","multisampled","sample_type","ty","view_dimension","view_dimension","descriptors","read_only","dxc_path","dxil_path","description","description","source","source","source","suballocated_device_memory_block_size","raw_display_handle","raw_window_handle","block","channel","filterable","BufferInitDescriptor","DeviceExt","DispatchIndirectArgs","DownloadBuffer","DrawIndexedIndirectArgs","DrawIndirectArgs","LayerMajor","MipMajor","RenderEncoder","StagingBelt","TextureDataOrder","align_to","as_bytes","as_bytes","as_bytes","backend_bits_from_env","base_vertex","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","contents","create_buffer_init","create_texture_with_data","default","default","default","default","deref","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw_indexed","draw_indexed_indirect","draw_indirect","dx12_shader_compiler_from_env","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","first_index","first_instance","first_instance","first_vertex","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","gles_minor_version_from_env","hash","hash","index_count","initialize_adapter_from_env","initialize_adapter_from_env_or_default","instance_count","instance_count","into","into","into","into","into","into","into","is_browser_webgpu_supported","label","make_spirv_raw","new","new_instance_with_webgpu_detection","parse_backends_from_comma_list","pipeline_cache_key","power_preference_from_env","read_buffer","recall","set_bind_group","set_index_buffer","set_pipeline","set_push_constants","set_vertex_buffer","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","usage","vertex_count","write_buffer","x","y","z"],"q":[[0,"wgpu"],[4567,"wgpu::BindingType"],[4576,"wgpu::BlasGeometrySizeDescriptors"],[4577,"wgpu::BufferBindingType"],[4578,"wgpu::Dx12Compiler"],[4580,"wgpu::Error"],[4585,"wgpu::MemoryHints"],[4586,"wgpu::SurfaceTargetUnsafe"],[4588,"wgpu::TextureFormat"],[4590,"wgpu::TextureSampleType"],[4591,"wgpu::util"],[4749,"alloc::vec"],[4750,"core::option"],[4751,"core::ops::function"],[4752,"core::iter::traits::collect"],[4753,"core::ops::function"],[4754,"core::cmp"],[4755,"wgpu_hal"],[4756,"wgpu_core::hal_api"],[4757,"wgpu_hal"],[4758,"core::result"],[4759,"core::convert"],[4760,"core::default"],[4761,"serde::de"],[4762,"serde::de"],[4763,"core::cmp"],[4764,"core::fmt"],[4765,"naga::valid"],[4766,"naga::span"],[4767,"naga::error"],[4768,"wgpu_core::pipeline"],[4769,"naga::front::wgsl::error"],[4770,"naga::span"],[4771,"raw_window_handle::borrowed"],[4772,"raw_window_handle::borrowed"],[4773,"wgpu_core::global"],[4774,"core::future::future"],[4775,"core::hash"],[4776,"core::hash"],[4777,"bitflags::iter"],[4778,"alloc::boxed"],[4779,"serde::ser"],[4780,"serde::ser"],[4781,"core::ops::function"],[4782,"core::any"],[4783,"alloc::borrow"]],"d":["Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Enable writes to all channels.","Whether wgpu should expose adapters that run on top of …","Enable alpha channel writes","Blend mode that does standard alpha blending with …","Supports samplers with anisotropic filtering. Note this isn…","Binding is backed by a top level acceleration structure","A ray-tracing acceleration structure binding.","Flags for an acceleration structure.","Flags for a geometry inside a bottom level acceleration …","Update mode for acceleration structure builds.","Handle to a physical graphics and/or compute device.","Information about an adapter.","Src + Dst","How edges should be handled in texture addressing.","Depth, Stencil, and Color.","Function always passes","block compressed texture. 16 bytes per block.","ASTC block dimensions","ASTC RGBA channel","Chooses either <code>Opaque</code> or <code>Inherit</code> automatically，depending …","Chooses Immediate -&gt; Mailbox -&gt; Fifo (on web) based on …","Chooses FifoRelaxed -&gt; Fifo based on availability.","No explicit minor version is requested, the driver …","10x10 block compressed texture. 16 bytes per block (1.28 …","10x5 block compressed texture. 16 bytes per block (2.56 …","10x6 block compressed texture. 16 bytes per block (2.13 …","10x8 block compressed texture. 16 bytes per block (1.6 …","12x10 block compressed texture. 16 bytes per block (1.07 …","12x12 block compressed texture. 16 bytes per block (0.89 …","4x4 block compressed texture. 16 bytes per block (8 …","5x4 block compressed texture. 16 bytes per block (6.4 …","5x5 block compressed texture. 16 bytes per block (5.12 …","6x5 block compressed texture. 16 bytes per block (4.27 …","6x6 block compressed texture. 16 bytes per block (3.56 …","8x5 block compressed texture. 16 bytes per block (3.2 …","8x6 block compressed texture. 16 bytes per block (2.67 …","8x8 block compressed texture. 16 bytes per block (2 …","Supports non-zero <code>base_vertex</code> parameter to direct indexed …","Allows the [<code>wgpu::TextureUsages::STORAGE_BINDING</code>] usage on …","","Allows a buffer to be used as input for a bottom level …","If not present, the texture can’t be blended into the …","Enable blue channel writes","","Supported when targeting the web through webassembly with …","Supports buffer bindings with sizes that aren’t a …","Allows the user to create arrays of buffers in shaders:","Back face","Backends supported by wgpu.","Represents the backends that wgpu will use.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Blue, green, red, and alpha channels. 8 bit integer per …","Blue, green, red, and alpha channels. 8 bit integer per …","Handle to a binding group.","Describes a group of bindings and the resources to be …","An element of a <code>BindGroupDescriptor</code>, consisting of a …","Handle to a binding group layout.","Describes a <code>BindGroupLayout</code>.","Describes a single binding inside a bind group.","Resource that can be bound to a pipeline.","Specific type of a binding.","Bottom Level Acceleration Structure (BLAS).","Builds the given sets of geometry into the given Blas.","Contains the sets of geometry that go into a Blas.","Descriptor for the size defining attributes, for a bottom …","Definition for a triangle geometry for a Bottom Level …","Descriptor for the size defining attributes of a triangle …","Describes a blend component of a <code>BlendState</code>.","Alpha blend factor.","Alpha blend operation.","Describe the blend state of a render pipeline, within …","WebGPU in the browser","Handle to a GPU-accessible buffer.","Binding is backed by a buffer.","A buffer binding.","Integral type used for buffer offsets.","Binding is backed by an array of buffers.","Error occurred when trying to async map a buffer.","Describes the segment of a buffer to bind.","Specific type of a buffer binding.","Describes a <code>Buffer</code>.","Integral type used for buffer slice sizes.","A slice of a <code>Buffer</code>, to be mapped, used for vertex or …","Different ways that you can use a buffer.","A read-only view of a mapped buffer’s bytes.","A write-only view of a mapped buffer’s bytes.","Always perform a full build.","Enables clear to zero for textures.","Amount of times the clipper is invoked. This is also the …","Amount of primitives that are not culled by the clipper. …","Enable red, green, and blue channel writes","Supports comparison samplers.","Binding is visible from the compute shader of a compute …","The device supports compiling and using compute shaders.","Amount of times a compute shader is invoked. This will be …","Allows the user to set a …","Buffer to buffer copy as well as buffer clear offsets and …","Buffer-Texture copies must have <code>bytes_per_row</code> aligned to …","Allow a buffer to be the destination buffer for a […","Allows a texture to be the destination in a  […","Allow a buffer to be the source buffer for a […","Allows a texture to be the source in a […","Supports textures that are cube arrays.","Triangles with vertices in counter clockwise order are …","Clamp the value to the border of the texture Requires …","Clamp the value to the edge of the texture","Loads the specified value for this attachment into the …","RGBA double precision color.","Describes the color state of a render pipeline.","Color write mask. Disabled color channels will not be …","Handle to a command buffer on the GPU.","Describes a <code>CommandBuffer</code>.","Encodes a series of GPU operations.","Describes a <code>CommandEncoder</code>.","Comparison function used for depth and stencil operations.","Use as a comparison sampler instead of a normal sampler. …","Compilation information for a shader module.","A single message from the shader compilation process.","The type of a compilation message.","Specifies how the alpha channel of the textures should be …","In-progress recording of a compute pass.","Describes the attachments of a compute pass.","Describes the timestamp writes of a compute pass.","Handle to a compute pipeline.","Describes a compute pipeline.","Constant","Context version see BlasBuildEntry.","Context version of BlasGeometries.","Context version of BlasTriangleGeometry.","Context version see TlasBuildEntry.","Context version of TlasInstance.","Context version see TlasPackage.","<code>wgpu-core</code>’s internal counters.","Cpu / Software Rendering.","Descriptor to create bottom level acceleration structures.","<code>Instance::create_surface()</code> or a related function failed.","Descriptor to create top level acceleration structures.","A cubemap texture. <code>texture_cube</code> in WGSL and <code>textureCube</code> in …","A cubemap array texture. <code>texture_cube_array</code> in WGSL and …","Triangles with vertices in clockwise order are considered …","A one dimensional texture. <code>texture_1d</code> in WGSL and <code>texture1D</code>…","1D texture","A two dimensional texture. <code>texture_2d</code> in WGSL and <code>texture2D</code>…","2D texture","A two dimensional array texture. <code>texture_2d_array</code> in WGSL …","A three dimensional texture. <code>texture_3d</code> in WGSL and …","3D texture","Generate debug information in shaders and objects.","Allows for explicit creation of textures of format …","Supports depth bias clamping","By default, polygon depth is clipped to 0-1 range …","Supports copies between depth textures and buffers.","Don’t pass labels to wgpu-hal.","Allows two outputs from a shader to be used for blending. …","Supported on Windows 10 and later","Decrements stencil value by one, clamping on underflow.","Decrements stencil value by one, wrapping on underflow.","Sampling does the depth reference comparison.","Special depth format with 16 bit integer depth.","Special depth format with at least 24 bit integer depth.","Special depth/stencil format with at least 24 bit integer …","Special depth format with 32 bit floating point depth.","Special depth/stencil format with 32 bit floating point …","Describes the biasing setting for the depth target.","Depth.","Describes the depth/stencil state in a render pipeline.","After Device::destroy","Open connection to a graphics and/or compute device.","Describes a <code>Device</code>.","Reason for “lose the device”.","Supported physical device types.","Discards the resulting value of the render pass for this …","Discrete GPU with separate CPU/GPU memory.","Display-P3 color space","Lists various ways the underlying platform does not …","Binary flags listing features that may or may not be …","After Device::drop","D.component","D.alpha","Direct3D-12 (Windows)","Selects which DX12 shader compiler to use.","The Dxc compiler is new, fast and maintained.","Integral type used for dynamic bind group offsets.","<em><strong>THIS IS EXPERIMENTAL:</strong></em> Features enabled by this may have …","<em><strong>THIS IS EXPERIMENTAL:</strong></em> Features enabled by this may have …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Dummy backend, used for testing.","Function passes if new value is equal to existing value. …","Error type","An error message.","Filter for error scopes.","Lower level source of the error.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Extent of a texture related operation.","If not present, the texture can’t be sampled with a …","Allows textures with formats “r32float”, “rg32float…","Binding is visible from the fragment shader of a render …","Amount of times the fragment shader is ran. Accounts for …","Supports storage buffers in fragment shaders.","Supports binding storage buffers and textures to fragment …","Supports full 32-bit range indices (2^32-1 as opposed to …","Face of a vertex.","Features that are not guaranteed to be supported.","Presentation frames are kept in a First-In-First-Out queue …","Presentation frames are kept in a First-In-First-Out queue …","Polygons are filled","Texel mixing mode when sampling between texels.","The sampling result is produced based on more than a …","Sampling returns floats.","Two half-precision floats (no Rust equiv). <code>vec2&lt;f32&gt;</code> in …","Four half-precision floats (no Rust equiv). <code>vec4&lt;f32&gt;</code> in …","One single-precision float (f32). <code>f32</code> in shaders.","Two single-precision floats (f32). <code>vec2&lt;f32&gt;</code> in shaders.","Three single-precision floats (f32). <code>vec3&lt;f32&gt;</code> in shaders.","Four single-precision floats (f32). <code>vec4&lt;f32&gt;</code> in shaders.","One double-precision float (f64). <code>f32</code> in shaders. Requires …","Two double-precision floats (f64). <code>vec2&lt;f32&gt;</code> in shaders. …","Three double-precision floats (f64). <code>vec3&lt;f32&gt;</code> in shaders. …","Four double-precision floats (f64). <code>vec4&lt;f32&gt;</code> in shaders. …","Describes the fragment processing in a render pipeline.","Front face","Vertex winding order which classifies the “front” face …","The Fxc compiler (default) is old, slow and unmaintained.","Supported on Linux/Android, the web through webassembly …","Enable GPU-based validation. Implies <code>Self::VALIDATION</code>. …","Enable green channel writes","","OpenGL 3.3+ (Windows), OpenGL ES 3.0+ (Linux, Android, …","Selects which OpenGL ES 3 minor version to request.","No issues.","Function passes if new value is greater than existing value","Function passes if new value is greater than or equal to …","<code>wgpu-hal</code>’s internal counters.","floating-point RGBA, linear-color float can be outside of …","Adapter that has the highest performance. This is often a …","Ignore the stencil state for the face.","Supports different blend operations per color attachment.","Allow a buffer to be the index buffer in a draw operation.","Allow a buffer to be the indirect buffer in an indirect …","Supports indirect drawing and dispatching.","Allows non-zero value for the <code>first_instance</code> member in …","A timestamp that is invalid due to the platform not having …","View of a buffer which can be used to copy to/from a …","View of a buffer which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","View of a texture which can be used to copy to a texture, …","View of a texture which can be used to copy to a texture, …","Layout of a texture in a buffer’s memory.","Subresource range within an image","Presentation frames are not queued at all. The moment a …","Increments stencil value by one, clamping on overflow.","Increments stencil value by one, wrapping on overflow.","Format of indices used with pipeline.","An informational message.","The alpha channel, if it exists, of the textures is …","Context for all other wgpu objects. Instance of wgpu.","Vertex data is advanced every instance.","Options for creating an instance.","Instance debugging flags.","Integrated GPU with shared CPU/GPU memory.","Catch only internal errors.","Internal error. Used for signalling any failures not …","All internal counters, exposed for debugging purposes.","Bitwise inverts stencil value.","Keep stencil value unchanged.","Object debugging label.","Function passes if new value less than existing value","Function passes if new value is less than or equal to …","Represents the sets of limits an adapter/device supports.","Polygons are drawn as line segments","Vertex data is a list of lines. Each pair of vertices …","Vertex data is a strip of lines. Each set of two adjacent …","Linear Interpolation","Loads the existing value for this attachment into the …","Operation to perform to the output attachment at the start …","The swap chain has been lost and needs to be recreated.","The surface under the swap chain is lost.","Adapter that uses the least possible power. This is often …","Webgpu only allows the MAP_READ and MAP_WRITE buffer usage …","Size to align mappings.","Allow a buffer to be mapped for reading using […","Allow a buffer to be mapped for writing using […","Supported on macOS/iOS","Supports sample-rate shading.","Allows a texture of this format to back a view passed as …","Allows <code>TextureDescriptor::sample_count</code> to be <code>16</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>2</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>4</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>8</code>.","Enables multiview render passes and <code>builtin(view_index)</code> in …","Allows the user to call <code>RenderPass::multi_draw_indirect</code> …","Allows the user to call …","Presentation frames are kept in a single-frame queue. …","Passed to <code>Device::poll</code> to control how and if it should …","Passed to <code>Device::poll</code> to control how and if it should …","Result of a maintain operation.","Applications that have control over the content that is …","Type of buffer mapping.","max(Src, Dst)","Hints to the device about the memory allocation strategy.","Favor memory usage over performance.","Metal API (Apple platforms)","min(Src, Dst)","Repeat the texture, mirroring it every repeat","Describes the multi-sampling state of a render pipeline.","If this is true, calls to <code>CommandEncoder::resolve_query_set</code>…","Binding is not visible from any shader stage.","Supports textures with mipmaps which have a non power of …","YUV 4:2:0 chroma subsampled format.","Nearest neighbor sampling.","Function never passes","The sampling result is produced based on a single color …","Power usage is not considered when choosing an adapter.","No value.","Function passes if new value is not equal to existing …","Blend state of (1 * src) + ((1 - src_alpha) * dst)","Query returns a single 64-bit number, serving as an …","More information coming soon …","1.0","1.0 - Constant","1.0 - D.component","1.0 - D.alpha","1.0 - S.component","1.0 - S1.component","1.0 - S1.alpha","1.0 - S.alpha","The alpha channel, if it exists, of the textures is …","[0, 0, 0, 1]","[1, 1, 1, 1]","Pair of load and store operations for an attachment aspect.","Origin of a copy from a 2D image.","Origin of a copy to/from a texture.","Other or Unknown.","Catch only out-of-memory errors.","Out of memory error","There is no more memory left to allocate a new frame.","The underlying surface has changed, and therefore the swap …","The surface under the swap chain has changed.","Allows the user to create bind groups containing arrays …","Allows the use of pipeline cache objects","Enables use of Pipeline Statistics Queries. These queries …","Allows the user to set <code>PolygonMode::Line</code> in …","Allows the user to set <code>PolygonMode::Point</code> in …","Blend mode that does standard alpha blending with …","All the apis that wgpu offers first tier of support for.","Allows the use of push constants: small, fast bits of …","Alignment all push constants need","Favor performance over memory usage (the default value).","Handle to a pipeline cache, which is used to accelerate …","Describes a pipeline cache, which allows reusing …","Advanced options for use when a pipeline is compiled","Handle to a pipeline layout.","Describes a <code>PipelineLayout</code>.","Query returns up to 5 64-bit numbers based on the given …","Flags for which pipeline data should be recorded.","Plane 0.","Plane 1.","Plane 2.","Polygons are drawn as points","Vertex data is a list of points. Each vertex is a new …","Check the device for a single time without blocking.","Check the device for a single time without blocking.","Type of drawing mode for polygons","The alpha channel, if it exists, of the textures is …","Power Preference when choosing a physical adapter.","The alpha channel, if it exists, of the textures is …","Color spaces supported on the web.","If possible, perform an incremental update.","Behavior of the presentation engine based on frame rate.","Nanosecond timestamp used by the presentation engine.","Describes the state of primitive assembly and …","Primitive type the input mesh is composed of.","A range of push constant memory to pass to a shader stage.","Allow a buffer to be the destination buffer for a […","An offset into the query resolve buffer has to be aligned …","Maximum queries in a query set","Size of a single piece of query data.","Handle to a query set.","Describes a <code>QuerySet</code>.","Type of query contained in a QuerySet.","Handle to a command queue on a device.","A write-only view into a staging buffer.","Red channel only. 16 bit float per channel. Float in …","Red channel only. 16 bit integer per channel. Signed in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 16 bit integer per channel. Unsigned in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 32 bit float per channel. Float in …","Red channel only. 32 bit integer per channel. Signed in …","Red channel only. 32 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. Signed in …","Red channel only. 8 bit integer per channel. [-127, 127] …","Red channel only. 8 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. [0, 255] …","Supports reading from a depth/stencil texture while using …","Enable red channel writes","","Allows a texture to be an output attachment of a render …","Default blending state that replaces destination with the …","Blend mode that does no color blending, just overwrites …","Allows for usage of textures of format …","Raw window &amp; display handle.","Map only for reading","The texture can only be read in the shader and it must be …","The texture can be both read and written in the shader and …","Pre-prepared reusable bundle of GPU operations.","Describes the depth/stencil attachment for render bundles.","Describes a <code>RenderBundle</code>.","Encodes a series of GPU operations into a reusable “…","Describes a <code>RenderBundleEncoder</code>.","In-progress recording of a render pass: a list of render …","Describes a color attachment to a <code>RenderPass</code>.","Describes a depth/stencil attachment to a <code>RenderPass</code>.","Describes the attachments of a render pass.","Describes the timestamp writes of a render pass.","Handle to a rendering (graphics) pipeline.","Describes a render (graphics) pipeline.","Repeat the texture in a tiling fashion","Replace stencil value with value provided in most recent …","After replacing the device_lost_callback","Additional information required when requesting an adapter.","Options for requesting adapter.","Requesting a device from an <code>Adapter</code> failed.","Dst - Src","Red, green, and blue channels. 11 bit float with no sign …","Red and green channels. 16 bit float per channel. Float in …","Red and green channels. 16 bit integer per channel. Signed …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 16 bit integer per channel. …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 32 bit float per channel. Float in …","Red and green channels. 32 bit integer per channel. Signed …","Red and green channels. 32 bit integer per channel. …","Red and green channels. 8 bit integer per channel. Signed …","Red and green channels. 8 bit integer per channel. [-127, …","Red and green channels. 8 bit integer per channel. …","Red and green channels. 8 bit integer per channel. [0, 255]…","Red, green, blue, and alpha channels. 10 bit integer for …","Red, green, blue, and alpha channels. 10 bit integer for …","Packed unsigned float with 9 bits mantisa for each RGB …","Red, green, blue, and alpha channels. 16 bit float per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha. 16 bit integer per channel. […","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 32 bit float per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Allows shaders to index sampled texture and storage buffer …","All the apis that wgpu offers second tier of support for. …","Allows shaders to use the <code>early_depth_test</code> attribute.","Allows shaders to acquire the FP16 ability","Enables 64-bit floating point types in SPIR-V shaders.","Allows shaders to use i16. Not currently supported in <code>naga</code>…","Allows shaders to use i64 and u64.","Allows shaders to use all i64 and u64 atomic operations.","Allows shaders to use i64 and u64 atomic min and max.","Enables <code>builtin(primitive_index)</code> in fragment shaders.","Enables creating shader modules from SPIR-V binary data …","Allow a buffer to be a <code>BufferBindingType::Storage</code> inside a …","Allows a texture to be a <code>BindingType::StorageTexture</code> in a …","When used as a STORAGE texture, then a texture with this …","Allows the user to create uniform arrays of storage …","Allows compute and fragment shaders to use the subgroup …","Allows shaders to use the subgroup barrier","Allows vertex shaders to use the subgroup operation …","Supports specifying which view formats are allowed when …","Handle to a sampler.","Binding is a sampler.","A sampler that can be used to sample a texture.","Binding is backed by an array of samplers.","Specific type of a sampler binding.","Color variation to use when sampler addressing mode is …","Describes a <code>Sampler</code>.","Integral type used for binding locations in shaders.","Collections of shader features a device supports if they …","Handle to a compiled shader module.","Descriptor for use with <code>Device::create_shader_module</code>.","Descriptor for a shader module given by SPIR-V binary, for …","Source of a shader module.","Describes the shader stages that a binding will be visible …","Sampling returns signed integers.","Two signed shorts (i16). <code>vec2&lt;i32&gt;</code> in shaders.","Four signed shorts (i16). <code>vec4&lt;i32&gt;</code> in shaders.","One signed int (i32). <code>i32</code> in shaders.","Two signed ints (i32). <code>vec2&lt;i32&gt;</code> in shaders.","Three signed ints (i32). <code>vec3&lt;i32&gt;</code> in shaders.","Four signed ints (i32). <code>vec4&lt;i32&gt;</code> in shaders.","Two signed bytes (i8). <code>vec2&lt;i32&gt;</code> in shaders.","Four signed bytes (i8). <code>vec4&lt;i32&gt;</code> in shaders.","Extremely limited shaders, including a total instruction …","Missing minor features and storage images.","WebGPU supports shader module 5.","Two signed shorts (i16). [-32767, 32767] converted to …","Four signed shorts (i16). [-32767, 32767] converted to …","Two signed bytes (i8). [-127, 127] converted to float [-1, …","Four signed bytes (i8). [-127, 127] converted to float […","Some value of type <code>T</code>.","A human-readable representation for a span, tailored for …","S.component","S1.component","S1.alpha","S.alpha","min(S.alpha, 1.0 - D.alpha)","sRGB color space","Stencil format with 8 bit integer stencil.","Describes stencil state in a render pipeline.","Stencil.","Operation to perform on the stencil value.","State of the stencil operation (fixed-pipeline stage).","A storage buffer.","A storage texture.","Specific type of a sample in a texture binding.","Stores the resulting value of the render pass for this …","Operation to perform to the output attachment at the end …","Identifier for a particular call to <code>Queue::submit</code>. Can be …","There are no active submissions in flight as of the …","The swap chain is operational, but it does no longer …","Src - Dst","Handle to a presentable surface.","Defines the capabilities of a given surface and adapter.","Describes a <code>Surface</code>.","Result of an unsuccessful call to …","Status of the received surface image.","The window/canvas/surface/swap-chain/etc. a surface is …","The window/canvas/surface/swap-chain/etc. a surface is …","Surface texture that can be rendered to. Result of a …","Enables device specific texture format features.","Allows a texture to be a <code>BindingType::Texture</code> in a bind …","Allows the user to create uniform arrays of textures in …","Enables ASTC family of compressed textures. ASTC textures …","Enables ASTC HDR family of compressed textures.","Enables BCn family of compressed textures. All BCn …","Allows the 3d dimension for textures with BC compressed …","Enables ETC family of compressed textures. All ETC …","Enables normalized <code>16-bit</code> texture formats.","Allows for creation of textures of format …","Enables use of Timestamp Queries. These queries tell the …","Allows for timestamp queries directly on command encoders.","Allows for timestamp queries directly on command encoders.","Allows a buffer to be used as input for a top level …","","Handle to a texture on the GPU.","A texture binding.","Kind of data the texture holds.","Describes a <code>Texture</code>.","Dimensionality of a texture.","Underlying texture data format.","Feature flags for a texture format.","Features supported by a given texture format","Specific type of a sample in a texture binding.","Different ways that you can use a texture.","Handle to a texture view.","Binding is backed by a texture.","Binding is backed by an array of textures.","Describes a <code>TextureView</code>.","Dimensions of a particular texture view.","A timeout was encountered while trying to acquire the next …","Unable to get the next frame, timed out.","Query returns a 64-bit number indicating the GPU-timestamp …","Top Level Acceleration Structure (TLAS).","Entry for a top level acceleration structure build. Used …","Safe instance for a Tlas.","The safe version of TlasEntry, containing TlasInstances …","[0, 0, 0, 0]","Triangle geometry variant.","Triangle geometries.","Vertex data is a list of triangles. Each set of 3 vertices …","Vertex data is a triangle strip. Each set of three …","Triangle geometry version.","Allow a buffer to be a <code>BufferBindingType::Uniform</code> inside a …","Allows shaders to index uniform buffer and storage texture …","With this feature not present, there are the following …","Supports buffers to combine <code>BufferUsages::INDEX</code> with …","Sampling returns unsigned integers.","Indices are 16 bit unsigned integers.","Two unsigned shorts (u16). <code>vec2&lt;u32&gt;</code> in shaders.","Four unsigned shorts (u16). <code>vec4&lt;u32&gt;</code> in shaders.","Indices are 32 bit unsigned integers.","One unsigned int (u32). <code>u32</code> in shaders.","Two unsigned ints (u32). <code>vec2&lt;u32&gt;</code> in shaders.","Three unsigned ints (u32). <code>vec3&lt;u32&gt;</code> in shaders.","Four unsigned ints (u32). <code>vec4&lt;u32&gt;</code> in shaders.","Two unsigned bytes (u8). <code>vec2&lt;u32&gt;</code> in shaders.","Four unsigned bytes (u8). <code>vec4&lt;u32&gt;</code> in shaders.","Type for the callback of uncaptured error handler","A buffer for uniform values.","Triggered by driver","8 bit integer RGBA, [0, 255] converted to/from …","Three unsigned 10-bit integers and one 2-bit integer, …","Two unsigned shorts (u16). [0, 65535] converted to float […","Four unsigned shorts (u16). [0, 65535] converted to float […","Two unsigned bytes (u8). [0, 255] converted to float [0, 1]…","Four unsigned bytes (u8). [0, 255] converted to float [0, 1…","8 bit integer RGBA, Srgb-color [0, 255] converted to/from …","Enable validation, if possible.","Binding is visible from the vertex shader of a render …","Allow a buffer to be the vertex buffer in a draw operation.","If this is true, use of <code>@builtin(vertex_index)</code> and …","Enables using 64-bit types for vertex attributes.","Binding is visible from the vertex and fragment shaders of …","Amount of times the vertex shader is ran. Accounts for the …","Supports storage buffers in vertex shaders.","Vertex buffer strides have to be aligned to this number.","Enables bindings of writable storage buffers and textures …","Supports specifying which view format values are allowed …","Supported on Windows, Linux/Android, and macOS/iOS via …","Allows using the VK_GOOGLE_display_timing Vulkan extension.","Catch only validation errors.","Validation error, signifying a bug in code or data","Request an ES 3.0 context.","Request an ES 3.1 context.","Request an ES 3.2 context.","Vertex data is advanced every vertex.","Vertex inputs (attributes) to shaders.","Describes how the vertex buffer is interpreted.","Vertex Format for a <code>VertexAttribute</code> (input).","Describes the vertex processing in a render pipeline.","Whether a vertex buffer is indexed by vertex or by …","Virtual / Hosted.","Vulkan API (Windows, Linux, Android, MacOS via …","Supports all the texture usages described in WebGPU. If …","","Same as WaitForSubmissionIndex but waits for the most …","Same as WaitForSubmissionIndex but waits for the most …","On wgpu-core based backends, block until the given …","On wgpu-core based backends, block until the given …","A warning message.","","","","WGSL module as a string slice.","Window handle producer.","Super trait for window handles as used in <code>SurfaceTarget</code>.","Map only for writing","The texture can only be written in the shader and it:","Zero origin.","Zero origin.","0.0","Set stencil value to zero.","On the Metal backend, this is equivalent to …","Alpha component of the color","Adds an <code>Srgb</code> suffix to the given texture format, if the …","How to deal with out of bounds accesses in the u (i.e. x) …","How to deal with out of bounds accesses in the v (i.e. y) …","How to deal with out of bounds accesses in the w (i.e. z) …","Enable advanced debugging and validation flags …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Mask of all features that are only available when …","Mask of all features which are part of the upstream WebGPU …","Valid bits for <code>TextureDescriptor::Usage</code> provided for …","Vertex formats allowed for creating and building BLASes","Alpha equation.","Specifies how the alpha channel of the textures should be …","List of supported alpha modes to use with the given …","When enabled, produces another sample mask per pixel based …","Must be at least 1. If this is not 1, all filter modes …","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","The stride, in bytes, between elements of this buffer.","Get the binding resource for the underling acceleration …","Return the binding view of the entire buffer.","Return the binding view of the entire buffer.","Returns the inner hal Surface using a callback. The hal …","Apply a callback to this <code>Adapter</code>’s underlying backend …","Returns the inner hal Buffer using a callback. The hal …","Apply a callback to this <code>Device</code>’s underlying backend …","Return a reference to a specific backend instance, if …","Returns the inner hal Texture using a callback. The hal …","Returns the inner hal TextureView using a callback. The …","Returns the inner hal CommandEncoder using a callback. The …","Make an <code>ImageCopyTexture</code> representing the whole texture.","","","","The copy aspect.","The copy aspect.","Aspect of the texture. Color textures must be …","The copy aspect.","The copy aspect.","Aspect of the texture. Color textures must be …","Returns the aspect-specific format of the original format","The list of attributes which comprise a single vertex.","Blue component of the color","Back face mode.","Backend used for device","Which <code>Backends</code> to enable.","Base array layer.","Base array layer.","Base mip level.","Base mip level.","Begins recording of a compute pass.","Start a occlusion query on this render pass. It can be …","Start a pipeline statistics query on this compute pass. It …","Start a pipeline statistics query on this render pass. It …","Begins recording of a render pass.","The index of the query set at which a start timestamp of …","The index of the query set at which a start timestamp of …","Depth bias state.","","Bind groups that this pipeline uses. The first entry will …","","Slot for which binding provides resource. Corresponds to …","Binding index. Must match shader index and be unique …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Reference to the acceleration structure.","The blending that is used for this pipeline.","The number of bytes one texel block occupies during an …","Returns the dimension of a block of texels.","The number of bytes one texel block occupies during an …","Border color to use when address_mode is …he buffer to be copied to/from.","The buffer to bind.","The buffer to be copied to/from.","Amount of allocated gpu memory attributed to buffers, in …","","The format of any vertex buffers used with this pipeline.","Build bottom and top level acceleration structures.","Build bottom and top level acceleration structures. See …","Bytes per “row” in an image.","The pipeline cache to use when creating this pipeline.","The pipeline cache to use when creating this pipeline.","Compares every limits within self is within the limits …","Compares every limits within self is within the limits …","Depth bias clamp value (absolute).","Clears buffer to zero.","Clears texture to zeroolor equation.","The color attachments of the render pass.","The formats of the color attachments that this render …","The color space of this texture.","The color space of this texture.","","","","","","","","","","","","","","","","","","If this is enabled, this is a comparison sampler using the …","Comparison function that determines if the fail_op or …","Surface that is required to be presentable with the …","Surface that is required to be presentable with the …","Get the texture dimension required of this texture view …","Advanced options for when this pipeline is compiled","Advanced options for when this pipeline is compiled","Advanced options for when this pipeline is compiled","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","All flags that indicate if the backend is WebGPU compliant","Returns the number of components this format has.","Returns the number of components this format has taking …","","Initializes <code>Surface</code> for presentation.","If set to true, the primitives are rendered with …","Constant depth biasing factor, in basic units of the depth …","Specifies the values of pipeline-overridable constants in …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Copy data from one buffer to another.","Copy data from a buffer to a texture.","Copy data from a texture to a buffer.","Copy data from one texture to another.","Re-export of our <code>wgpu-core</code> dependency.","<code>wgpu-core</code> counters.","Total count of queries the set contains. Must not be zero. …","The number of samples calculated per pixel (for MSAA). For …","If this value is Some, indicates this entry is an array. …","Converts a wgpu-hal <code>ExposedAdapter</code> to a wgpu <code>Adapter</code>.","Creates a new <code>BindGroup</code>.","Creates a <code>BindGroupLayout</code>.","Create a bottom level acceleration structure, used inside …","Creates a <code>Buffer</code>.","Creates a <code>Buffer</code> from a wgpu-hal Buffer.","","Creates an empty <code>CommandEncoder</code>.","Creates a <code>ComputePipeline</code>.","Create a wgpu <code>Device</code> and <code>Queue</code> from a wgpu-hal <code>OpenDevice</code>","Create a <code>PipelineCache</code> with initial data","Creates a <code>PipelineLayout</code>.","Creates a new <code>QuerySet</code>.","Creates an empty <code>RenderBundleEncoder</code>.","Creates a <code>RenderPipeline</code>.","Creates a new <code>Sampler</code>.","Creates a shader module from either SPIR-V or WGSL source …","Creates a shader module from SPIR-V binary directly.","Creates a shader module from either SPIR-V or WGSL source …","Creates a new surface targeting a given …","Creates a new surface targeting a given …","Creates a new <code>Texture</code>.","Creates a <code>Texture</code> from a wgpu-hal Texture.","","Create a top level acceleration structure, used for ray …","Creates a view of this texture.","The face culling mode.","Custom index for the instance used inside the shader.","The data used to initialise the cache initialise","Enable recommended debugging and validation flags.","","","","","","","","","","","","","","","Creates a new instance of wgpu with default options.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Comparison function used to compare depth values in the …","Operation that is performed when depth test fails but …","What operations will be performed on the depth part of the …","Returns the depth or layer count of this <code>Texture</code>.","The depth of the extent or the number of array layers","If the depth aspect of the depth stencil attachment is …","Information about the depth attachment that this render …","The effect of draw calls on the depth and stencil aspects …","The depth and stencil attachment of the render pass, if …","If disabled, depth will not be written to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Desired maximum number of frames that the presentation …","Destroy the associated native resources as soon as …","Destroy the associated native resources as soon as …","Destroy this device.","Destroy the associated native resources as soon as …","Destroy the associated native resources as soon as …","<code>Backend</code>-specific device ID of the adapter","Type of device","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Returns the dimension of this <code>Texture</code>.","Dimensions of the texture.","The dimension of the texture view. For 1D textures, this …","Dispatches compute work operations.","Dispatches compute work operations, based on the contents …hese default limits are guaranteed to be compatible with …","These default limits are guaranteed to be compatible with …","Draws primitives from the active vertex buffer(s).","","Draws primitives from the active vertex buffer(s).","","","Draws indexed primitives using the active index buffer and …","Draws indexed primitives using the active index buffer and …","","","Draws indexed primitives using the active index buffer and …","","Draws indexed primitives using the active index buffer and …","Draws primitives from the active vertex buffer(s) based on …","","Draws primitives from the active vertex buffer(s) based on …","","Driver name","Driver info","","","","","","","","","","","","","","","","","","","","","","","","","Multiplier for the destination, which is stored in the …","Which DX12 shader compiler to use.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Returns which backends can be picked for the current build …","End the occlusion query on this render pass. It can be …","The index of the query set at which an end timestamp of …","The index of the query set at which an end timestamp of …","End the pipeline statistics query on this compute pass. It …","End the pipeline statistics query on this render pass. It …","The resources to bind to this bind group.","Array of entries in this BindGroupLayout","The name of the entry point in the compiled shader to use.","The name of the entry point in the compiled shader to use.","The name of the entry point in the compiled shader to use.","Retrieves all available <code>Adapter</code>s that match the given …xecute a render bundle, which is a set of pre-recorded …","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Operation that is performed when stencil test fails.","Whether to create a cache without data when the provided …","The features which can be used to create devices on this …","The features which can be used on this device.","","Finishes recording and returns a <code>CommandBuffer</code> that can be …","Finishes recording and returns a <code>RenderBundle</code> that can be …","Offset into the vertex buffer as a factor of the vertex …","Flags for the geometry.","Flags for the bottom level acceleration structure.","Flags for the bottom level acceleration structure.","Combined boolean flags.","Additional property flags for the format.","Flags to tune the behavior of the instancendicates that only a fallback adapter can be returned. …","Indicates that only a fallback adapter can be returned. …","Drops the lifetime relationship to the parent command …","Drops the lifetime relationship to the parent command …","Returns the format of this <code>Texture</code>.","The texture format of the swap chain. The only formats …","Format of the texture.","The <code>TextureFormat</code> of the image that this pipeline will …","Format of the texture view. Either must be the same as the …","Format of the depth/stencil buffer, must be special depth …","Format of the input","Format of the attachment.","List of supported formats to use with the given adapter. …","The compiled fragment stage, its entry point, and the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Infer good defaults from the build type","Create an new instance of wgpu from a wgpu-core instance.","Create an new instance of wgpu from a wgpu-hal instance.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Returns the texture aspect for a given plane.","Creates a <code>SurfaceTargetUnsafe::RawHandle</code> from a window.","Front face mode.","The face to consider the front for the purpose of culling …","Green component of the color","Generate an GPU memory allocation report if the underlying …","Generates memory report.","Geometries.","Get a reference to all instances.","Get an object representing the bind group layout at a …","Get an object representing the bind group layout at a …","Returns the capabilities of the surface when used with the …","Get the compilation info for the shader module.","Returns the next texture to be presented by the swapchain …","Get the data associated with this pipeline cache. The data …","Return a default <code>SurfaceConfiguration</code> from width and …","Get info about the adapter itself.","Get info about the adapter itself.","Query internal counters from the native backend for …","Gain read-only access to the bytes of a mapped <code>Buffer</code>.","Gain write access to the bytes of a mapped <code>Buffer</code>.","Get a single mutable reference to an instance. Returns …","Get a mutable slice to a range of instances. Returns None …","Generates a timestamp using the clock used by the …","Returns the features supported for a given texture format …","Gets the amount of nanoseconds each tick of a timestamp …","Which OpenGL ES 3 minor version to request. Will be …","Returns the format features guaranteed by the WebGPU spec.","Re-export of our <code>wgpu-hal</code> dependency.","<code>wgpu-hal</code> counters.","Raw handle to the acceleration structure, used inside raw …","Returns <code>true</code> if the format has a color aspect","Returns <code>true</code> if the format has a depth aspect","Returns true for buffer bindings with dynamic offset …","Returns <code>true</code> if the format has a stencil aspect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the height of this <code>Texture</code>.","Height of the swap chain. Must be the same size as the …","Height of the extent","Macro to load raw SPIR-V data statically, for use with …","Load WGSL source code from a file at compile time.","","","Index buffer (optional).","Index buffer offset in bytes (optional, required if index …","Number of indices. Only needed if an index buffer is used. …","Format of an index. Only needed if an index buffer is used.","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Inserts debug marker.","Inserts debug marker.","Inserts debug marker.","Reference to the raw instance buffer, each instance is …","Number of instances in the instance buffer.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Returns <code>true</code> for BCn compressed formats.","Returns <code>true</code> if the format is a combined depth-stencil …","Returns <code>true</code> for compressed formats.","Returns true if the depth testing is enabled.","Returns true if the state doesn’t mutate the depth …","Returns <code>true</code> if <code>self</code> is a depth or stencil component of …","Returns <code>true</code> if the format is a depth and/or stencil format","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns true if the stencil test is enabled.","Returns true if the depth biasing is enabled.","Returns if the given range represents a full resource, …","Returns true if this timestamp is the invalid timestamp.","Returns <code>true</code> if the format is a multi-planar format","Returns true if the result is <code>Self::SubmissionQueueEmpty</code>`.","Returns true if the state doesn’t mutate the target …","Returns true if the state doesn’t mutate either depth or …","Returns true if the face state doesn’t mutate the target …","Returns <code>true</code> for srgb formats.","Returns true if the state doesn’t mutate the stencil.","Returns true for strip topologies.","Returns whether this adapter may present to the passed …","This maintain represents a wait of some kind.","Returns true if the underlying platform offers complete …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Debug label of a buffer. This will show up in graphics …","Debug label for the command encoder. This will show up in …","Label for the bottom level acceleration structure.","Debug label for the device.","Debug label for the query set.","Debug label of the render bundle encoder. This will show …","Debug label of the texture. This will show up in graphics …","Label for the top level acceleration structure.","Debug label of the bind group. This will show up in …","Debug label of the bind group layout. This will show up in …","Debug label of the pipeline cache. This might show up in …","Debug label of the compute pass. This will show up in …","Debug label of the pipeline. This will show up in graphics …","Debug label of the pipeline layout. This will show up in …","Debug label of the render bundle encoder. This will show …","Debug label of the render pass. This will show up in …","Debug label of the pipeline. This will show up in graphics …","Debug label of the sampler. This will show up in graphics …","Debug label of the shader module. This will show up in …","Debug label of the shader module. This will show up in …","Debug label of the texture view. This will show up in …","Debug label of this command buffer.","Returns the layer range of a subresource range describes …","The layout of the texture data in this buffer.","The <code>BindGroupLayout</code> that corresponds to this bind group.","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","The layout of the texture data in this buffer.","Length in code units (in bytes) of the span.","The best limits which can be used to create devices on …","The limits which can be used on this device.","Additional limits","1-based line number.","1-based column in code units (in bytes) of the start of …","How data should be read through this attachment.","Where in the source code the message points at.","Maximum level of detail (i.e. mip level) to use","Minimum level of detail (i.e. mip level) to use","How to filter the texture when it needs to be magnified …","Map the buffer. Buffer is ready to map once the callback …","Map on the wait index type.","Takes a closure and maps the label of the command buffer …","Allows a buffer to be mapped immediately after they are …","Mask for the instance used inside the shader to filter …","Bitmask that restricts the samples of a pixel modified by …","Amount of bind groups that can be attached to a pipeline …","Maximum binding index allowed in <code>create_bind_group_layout</code>. …","A limit above which buffer allocations are guaranteed to …","The maximum number of bytes necessary to hold one sample …","The maximum allowed number of color attachments.","Maximum value of the product of the <code>workgroup_size</code> …","The maximum value of the workgroup_size X dimension for a …","The maximum value of the workgroup_size Y dimension for a …","The maximum value of the workgroup_size Z dimension for a …","Maximum number of bytes used for workgroup memory in a …","The maximum value for each dimension of a …","Amount of storage buffer bindings that can be dynamic in a …","Amount of uniform buffer bindings that can be dynamic in a …","Number of instances that can be stored in the acceleration …","Maximum allowed number of components (scalars) of input or …","Calculates the maximum possible count of mipmaps.","Maximum number of live non-sampler bindings.","Amount of storage available for push constants in bytes. …","Amount of sampled textures visible in a single shader …","Amount of samplers visible in a single shader stage. …","Maximum size in bytes of a binding to a storage buffer. …","Amount of storage buffers visible in a single shader …","Amount of storage textures visible in a single shader …","Maximal number of invocations in a subgroup. Lower is “…","Maximum allowed value for the <code>size.depth_or_array_layers</code> …","Maximum allowed value for the <code>size.width</code> of a texture …","Maximum allowed value for the <code>size.width</code> and <code>size.height</code> …","Maximum allowed value for the <code>size.width</code>, <code>size.height</code>, and …","Maximum size in bytes of a binding to a uniform buffer. …","Amount of uniform buffers visible in a single shader …","Maximum length of <code>VertexBufferLayout::attributes</code>, summed …","Maximum value for <code>VertexBufferLayout::array_stride</code> when …","Maximum length of <code>VertexState::buffers</code> when creating a …","Number of gpu memory allocations.","Hints for memory allocation strategies.","The text of the message.","The type of the message.","The messages from the shader compilation process.","How to filter the texture when it needs to be minified …","Required <code>BufferBindingType::Storage</code> alignment for …","Minimal number of invocations in a subgroup. Higher is “…","Required <code>BufferBindingType::Uniform</code> alignment for …","The target mip level of the texture.","The target mip level of the texture.","The target mip level of the texture.","The target mip level of the texture.","Returns the mip_level_count of this <code>Texture</code>.","Mip count of texture. For a texture with no extra mips, …","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Calculates the extent at a given mip level. Does <em>not</em> …","Returns the mip level range of a subresource range …","How to filter between mip map levels","The compiled shader module for this stage.","The compiled shader module for this stage.","The compiled shader module for this stage.","Dispatches multiple draw calls from the active index …","Dispatches multiple draw calls from the active index …","Dispatches multiple draw calls from the active vertex …","Dispatches multiple draw calls from the active vertex …","The multi-sampling properties of the pipeline.","If this render bundle will rendering to multiple array …","If the pipeline will be used with a multiview render pass, …","Re-export of our <code>naga</code> dependency.","Adapter name","Returns true if the stencil state uses the reference value …","Returns true if the face state uses the reference value …","Returns true if the comparison depends on the reference …","Construct TlasPackage consuming the Tlas (prevents …","Construct TlasInstance.","Create an new instance of wgpu.","Construct TlasPackage consuming the Tlas (prevents …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Defines where the occlusion query results will be stored …","Base offset of the buffer, in bytes.","0-based Offset in code units (in bytes) of the start of …","Byte offset of the start of the input","Offset into the buffer that is the start of the texture. …","Registers a callback when the previous call to submit …","Set a callback for errors that are not handled in error …","The binary operation applied to the source and destination,","What operations will be performed on this color attachment.","The base texel of the texture in the selected <code>mip_level</code>. …","The base texel of the texture in the selected <code>mip_level</code>.","The base texel of the texture in the selected <code>mip_level</code>. …","The base texel of the texture in the selected <code>mip_level</code>.","Panics if the MaintainResult is not Ok.","","","","","","","","","","","","","","","","","","Operation that is performed when stencil test success.","Calculates the physical size backing a texture of the given","","Returns the number of planes a multi-planar format has.","Check for resource cleanups and mapping callbacks. Will …","Polls all devices.","Controls the way each polygon is rasterized. Can be either …","Stops command recording and creates debug group.","Stops command recording and creates debug group.","Stops command recording and creates debug group.","Pop an error scope.","Power preference for the adapter.","Power preference for the adapter.","The premultiplication of this texture","The premultiplication of this texture","Schedule this texture to be presented on the owning …","Presentation mode of the swap chain. Fifo is the only mode …","List of supported presentation modes to use with the given …","The properties of the pipeline at the primitive assembly …","Set of push constant ranges this pipeline uses. Each …","Start record commands and group it into debug marker group.","Start record commands and group it into debug marker group.","Start record commands and group it into debug marker group.","Push an error scope.","The query set to write to.","The query set to write to.","","Red component of the color","Range in push constant memory to use for the stage. Must …","Stencil values are AND’d with this mask when reading and …","Returns <code>true</code> if the blend factor references the second …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Strips the <code>Srgb</code> suffix from the given texture format.","","Retrieves an <code>Adapter</code> which matches the given …","Requests a connection to a physical device, creating a …","Returns the required features (if any) in order to use the …","Specifies the features that are required by the device …","Specifies the limits that are required by the device …","Resolves a query set, writing the results into the …","The view that will receive the resolved output if …","Resource to attach to the binding","“Rows” that make up a single “image”.","Re-export of our <code>raw-window-handle</code> dependency.","Returns the sample_count of this <code>Texture</code>.","Sample count of texture. If this is not 1, texture must …","Sample count this render bundle is capable of rendering …","Sample count supported by a given texture format.","Returns the sample type compatible with this format and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets the active bind group for a given bind group index. …","Sets the active bind group for a given bind group index. …","","","Sets the active bind group for a given bind group index. …","Set the bottom level acceleration structure.","Sets the blend color as used by some of the blending modes.","Set a DeviceLostCallback on this device.","","Sets the active index buffer.","","Sets the active index buffer.","Sets the active compute pipeline.","","Sets the active render pipeline.","","Sets the active render pipeline.","Set push constant data for subsequent dispatch calls.","Set push constant data.","","Set push constant data for subsequent draw calls.","","Sets the scissor rectangle used during the rasterization …","Sets the stencil reference.","Assign a vertex buffer to a slot.","","","Assign a vertex buffer to a slot.","Sets the viewport used during the rasterization stage to …","Location for this input. Must match the location in the …","Which collections of features shaders support. Defined in …","","Returns the length of the buffer allocation in bytes.","Returns the size of this <code>Texture</code>.","Returns the byte size of the format.","Size of a buffer, in bytes.","Size of the texture. All components must be greater than …","Size of the binding in bytes, or <code>None</code> for using the rest …","Sub descriptor for the size defining attributes of a …","Returns the size multiple requirement for a texture using …","Return a slice of a <code>Buffer</code>’s bytes.","Slope depth biasing factor.","","","","Source code for the shader.","Binary SPIR-V data, in 4-byte words.","Multiplier for the source, which is produced by the …","Stage push constant range is visible from. Each stage can …","Starts frame capture.","Stencil state.","What operations will be performed on the stencil part of …","If the stencil aspect of the depth stencil attachment is …","How often this vertex buffer is “stepped” forward.","Stops frame capture.","Whether data will be written to through this attachment.","When drawing strip topologies with indices, this is the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Submits a series of finished command buffers for execution.","<code>true</code> if the acquired buffer can still be used for …","A <code>Vec</code> of supported sample counts.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","See …","The number of bytes occupied per pixel in a color …","The color state of the render targets.","The texture to be copied to/from.","The texture to be copied to/from.","Accessible view of the frame.","The texture to be copied to/from.","The texture to be copied to/from.","Amount of allocated gpu memory attributed to textures, in …","","","Defines which timestamp values will be written for this …","Defines which timestamp values will be written for this …","Get a reference to the underling Tlas.","Reference to the acceleration structure.","Removes the third dimension from this origin","Adds the third dimension to this origin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the string name of the backend.","","","","","","","Adds color space and premultiplied alpha information to …","Removes the colorspace information from the type.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The primitive topology used to interpret vertices.","Affine transform matrix 3x4 (rows x columns, row major …","Transform buffer containing 3x4 (rows x columns, row …","Transform buffer offset in bytes (optional, required if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Kind of query that this query set should contain.","The type of the binding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If set to true, the polygon depth is not clipped to 0-1 …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Flushes any pending write operations and unmaps the buffer …pdate mode for the bottom level acceleration structure.","Update mode for the bottom level acceleration structure.","Returns the allowed usages for this <code>Buffer</code>.","Returns the allowed usages of this <code>Texture</code>.","Usages of a buffer. If the buffer is used in any way that …","The usage of the swap chain. The only supported usage is …","Allowed usages of the texture. If used in other ways, the …","Bitflag of supported texture usages for the surface to use …","Returns true if the state relies on the constant color, …","Modify the current limits to use the buffer alignment …","Modify the current limits to use the resolution limits of …","Utility structures and functions that are built on top of …","<code>Backend</code>-specific vendor ID of the adapter","The compiled vertex stage, its entry point, and the input …","Macro to produce an array of <code>VertexAttribute</code>.","Vertex buffer.","Number of vertices.","Format of a vertex position, must be […","Vertex stride.","The view to use as an attachment.","The view to use as an attachment.","Specifies what view formats will be allowed when calling …","Specifies what view formats will be allowed when calling …","Which shader stages can see this binding.","Construct a wait variant","Construct a WaitForSubmissionIndex variant","Returns the width of this <code>Texture</code>.","Width of the swap chain. Must be the same size as the …","Width of the extent","Returns this set of flags, affected by environment …","Schedule a data write into <code>buffer</code> starting at <code>offset</code>.","Write to a buffer via a directly mapped staging buffer.","Mask which enables/disables writes to different …","Stencil values are AND’d with this mask when writing to …","Schedule a write of some data into a texture.","Issue a timestamp command at this point in the queue. The …","Issue a timestamp command at this point in the queue. The …","Issue a timestamp command at this point in the queue. The …","","X position of the origin","","Y position of the origin","Z position of the origin","Whether workgroup scoped memory will be initialized with …","Allowed access to this texture.","Format of the texture.","Indicates that the binding has a dynamic offset.","The minimum size for a <code>BufferBinding</code> matching this entry, …","True if the texture has a sample count greater than 1. If …","Sample type of the texture binding.","Sub-type of the buffer binding.","Dimension of the texture view that is going to be sampled.","Dimension of the texture view that is going to be sampled.","Descriptor for each triangle geometry.","If <code>true</code>, the buffer can only be read in the shader, and it:","Path to the <code>dxcompiler.dll</code> file, or path to the directory …","Path to the <code>dxil.dll</code> file, or path to the directory …","Description of the validation error.","Description of the internal GPU error.","Lower level source of the error.","Lower level source of the error.","Lower level source of the error.","Defines the range of allowed memory block sizes for …","Raw display handle, underlying display must outlive the …","Raw display handle, underlying window must outlive the …","compressed block dimensions","ASTC RGBA channel","If this is <code>false</code>, the texture can’t be sampled with a …","Describes a Buffer when allocating.","Utility methods not meant to be in the main API.","Argument buffer layout for dispatch_indirect commands.","CPU accessible buffer used to download data back from the …","Argument buffer layout for draw_indexed_indirect commands.","Argument buffer layout for draw_indirect commands.","The texture is laid out densely in memory as:","The texture is laid out densely in memory as:","Methods shared by <code>RenderPass</code> and <code>RenderBundleEncoder</code>.","Efficiently performs many buffer writes by sharing and …","Order in which TextureData is laid out in memory.","Aligns a <code>value</code> to an <code>alignment</code>.","Returns the bytes representation of the struct, ready to …","Returns the bytes representation of the struct, ready to …","Returns the bytes representation of the struct, ready to …","Get a set of backend bits from the environment variable …","The value added to the vertex index before indexing into …","","","","","","","","","","","","","","","","","","","","","","","","","Contents of a buffer on creation.","Creates a Buffer with data to initialize it.","Upload an entire texture and its mipmaps from a source …","","","","","","","","","","","","","Draws primitives from the active vertex buffer(s).","Draws indexed primitives using the active index buffer and …","Draws indexed primitives using the active index buffer and …","Draws primitives from the active vertex buffer(s) based on …","Choose which DX12 shader compiler to use from the …","","","","","","","","","","","Prepare currently mapped buffers for use in a submission.","The first index within the index buffer.","The instance ID of the first instance to draw.","The instance ID of the first instance to draw.","The Index of the first vertex to draw.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Choose which minor OpenGL ES version to use from the …","","","The number of indices to draw.","Initialize the adapter obeying the WGPU_ADAPTER_NAME …","Initialize the adapter obeying the WGPU_ADAPTER_NAME …","The number of instances to draw.","The number of instances to draw.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Determines whether the <code>Backends::BROWSER_WEBGPU</code> backend is …","Debug label of a buffer. This will show up in graphics …","Version of make_spirv intended for use with …","Create a new staging belt.","Create an new instance of wgpu, but disabling …","Generates a set of backends from a comma separated list of …","A recommended key for storing <code>PipelineCache</code>s for the …","Get a power preference from the environment variable …","Asynchronously read the contents of a buffer.","Recall all of the closed buffers back to be reused.","Sets the active bind group for a given bind group index. …","Sets the active index buffer.","Sets the active render pipeline.","<code>wgt::Features::PUSH_CONSTANTS</code> must be enabled on the …","Assign a vertex buffer to a slot.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Usages of a buffer. If the buffer is used in any way that …","The number of vertices to draw.","Allocate the staging belt slice of <code>size</code> to be uploaded …","The number of work groups in X dimension.","The number of work groups in Y dimension.","The number of work groups in Z dimension."],"i":[4,4,8,2,8,86,5,15,144,0,0,0,0,0,82,0,34,123,1,0,0,127,126,126,153,114,114,114,114,114,114,114,114,114,114,114,114,114,114,5,4,129,9,7,8,129,3,5,4,96,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,15,144,0,15,0,0,0,0,0,0,0,0,0,255,4,11,11,8,5,6,5,11,4,0,0,9,10,9,10,5,94,134,134,85,0,0,0,0,0,0,0,0,143,0,0,0,0,0,0,0,0,0,79,0,0,0,0,0,0,0,62,0,0,0,73,73,94,73,130,73,130,73,73,130,2,4,5,4,5,2,4,3,121,121,141,1,1,1,1,1,0,34,0,154,0,0,0,0,87,62,148,0,0,154,79,79,56,0,152,0,4,4,1,1,1,1,56,123,0,104,0,0,1,1,1,1,1,1,0,7,4,6,11,5,5,5,0,0,126,126,100,0,143,141,12,12,12,12,12,12,12,12,12,12,0,96,0,152,3,2,8,129,56,0,207,123,123,0,115,57,122,5,9,9,5,4,128,0,0,0,0,0,0,0,0,126,121,121,0,104,127,0,124,0,0,62,78,206,0,121,121,0,123,123,0,100,90,90,135,85,0,111,207,57,4,0,9,9,3,5,7,7,7,7,7,4,4,4,126,0,0,0,64,0,82,0,64,56,82,134,0,5,6,5,1,135,123,143,57,256,123,84,151,229,79,79,79,79,79,79,79,79,127,150,150,0,0,0,62,78,206,111,111,207,4,4,4,4,4,86,3,4,0,64,0,0,0,0,0,151,0,34,34,34,100,90,236,116,0,127,0,127,0,255,0,0,0,0,0,9,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,5,8,129,10,84,86,4,185,70,142,142,0,0,0,0,0,0,0,0,0,0,0,0,134,121,154,0,0,0,82,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,3,4,4,4,4,4,4,4,4,4,9,10,7,4,4,4,4,5,0,15,144,15,0,0,0,0,0,0,0,0,0,0,141,12,12,12,12,12,12,12,12,61,61,61,12,12,12,12,256,0,79,79,79,79,79,148,1,0,34,0,0,140,144,0,87,0,0,229,207,82,0,0,0,0,0,0,0,0,4,10,4,4,4,4,4,4,4,4,4,4,4,9,129,0,144,0,0,0,0,0,0,0,0,0,15,15,0,0,111,207,151,0,0,0,0,150,257,258,90,90,169,9,4,5,5,141,120,12,12,120,12,12,12,12,12,12,0,140,154,115,12,12,12,12,12,115,2,6,9,5,4,6,11,5,0,4,5,3,4,78,206,153,153,153,124,0,0,0,0,0,62,56,5,129,236,116,236,116,104,0,0,0,107,183,0,70,142,131,132,79,121,150,129,1,101,101,101,2,3,4,2,5,6,7,8,9,10,11,4,4,113,4,86,164,191,109,101,112,52,95,14,16,16,18,22,16,23,24,25,26,27,25,29,32,33,28,259,112,147,149,52,1,95,129,117,63,192,112,52,112,52,27,37,36,37,27,75,91,119,53,80,53,65,145,3,4,2,5,6,7,8,9,10,11,3,4,2,5,6,7,8,9,10,11,3,4,2,5,6,7,8,9,10,11,3,4,2,5,6,7,8,9,10,11,3,3,4,4,2,2,5,5,6,6,7,7,8,8,9,9,10,10,11,11,3,4,2,5,6,7,8,9,10,11,3,4,2,5,6,7,8,9,10,11,44,88,1,1,1,101,229,260,257,44,261,258,262,53,54,55,56,29,57,3,18,183,185,46,14,58,263,264,4,2,47,60,5,61,62,63,64,22,156,15,17,65,66,157,6,67,16,68,69,70,33,32,197,27,71,205,170,72,73,74,36,75,35,158,76,23,77,78,79,206,24,179,159,80,40,177,81,82,160,181,83,84,37,85,86,87,88,89,90,91,92,93,94,41,161,95,96,97,98,99,162,100,101,163,102,103,104,105,106,107,108,182,109,7,110,198,111,25,26,112,189,113,114,115,1,8,116,117,118,119,120,121,122,123,124,125,12,9,126,127,10,191,207,128,129,130,131,132,133,34,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,52,150,151,11,152,153,192,154,229,260,257,44,261,258,262,53,54,55,56,29,57,3,18,183,185,46,14,58,263,264,4,2,47,60,5,61,62,63,64,22,156,15,17,65,66,157,6,67,16,68,69,70,33,32,197,27,71,205,170,72,73,74,36,75,35,158,76,23,77,78,79,206,24,179,159,80,40,177,81,82,160,181,83,84,37,85,86,87,88,89,90,91,92,93,94,41,161,95,96,97,98,99,162,100,101,163,102,103,104,105,106,107,108,182,109,7,110,198,111,25,26,112,189,113,114,115,1,8,116,117,118,119,120,121,122,123,124,125,12,9,126,127,10,191,207,128,129,130,131,132,133,34,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,52,150,151,11,152,153,192,154,165,17,146,53,53,97,27,27,139,76,99,47,47,118,27,27,53,54,55,56,57,3,58,4,2,47,60,5,61,62,63,64,15,17,65,66,6,67,68,69,70,71,72,73,74,75,35,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,41,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,7,110,111,112,113,114,115,1,8,116,117,118,119,120,121,122,123,124,125,12,9,126,127,10,128,129,130,131,132,133,34,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,52,150,151,11,152,153,154,53,54,55,56,57,3,58,4,2,47,60,5,61,62,63,64,15,17,65,66,6,67,68,69,70,71,72,73,74,75,35,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,41,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,7,110,111,112,113,114,115,1,8,116,117,118,119,120,121,122,123,124,125,12,9,126,127,10,128,129,130,131,132,133,34,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,52,150,151,11,152,153,154,60,5,61,156,157,16,158,159,40,160,161,162,163,25,26,128,86,41,83,259,149,53,60,5,61,156,157,16,158,159,40,160,161,162,163,25,26,128,101,122,237,58,73,76,97,98,3,4,2,5,6,7,8,9,10,11,5,1,1,53,18,105,118,72,3,4,2,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,27,27,27,27,0,55,180,109,145,24,23,23,23,23,23,23,23,23,22,23,23,23,23,23,23,23,23,23,24,24,23,23,23,23,25,105,71,74,2,53,54,55,57,3,58,4,2,47,60,64,72,73,35,24,80,82,83,84,85,87,89,90,94,41,100,101,105,109,112,8,117,118,120,121,122,124,126,127,191,129,132,133,34,134,135,137,139,140,141,52,152,153,192,119,122,93,25,133,138,83,99,41,119,29,33,32,29,32,56,57,3,58,4,47,60,5,61,62,63,64,6,73,79,82,84,85,86,87,88,89,90,94,96,100,105,109,7,113,114,115,1,8,117,118,119,120,121,122,123,124,125,12,9,126,127,10,129,130,131,132,133,34,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,52,150,151,11,154,164,16,170,23,25,189,63,63,3,4,2,5,6,7,8,9,10,11,25,186,112,36,36,229,260,257,44,261,258,262,53,54,55,56,29,57,3,18,183,185,46,14,58,263,264,4,2,47,60,5,61,62,63,64,22,156,15,17,65,66,157,6,67,16,68,69,70,33,32,197,27,71,205,170,72,73,74,36,75,35,158,76,23,77,78,79,206,24,179,159,80,40,177,81,82,160,181,83,84,37,85,86,87,88,89,90,91,92,93,94,41,161,95,96,97,98,99,162,100,101,163,102,103,104,105,106,107,108,182,109,7,110,198,111,25,26,112,189,113,114,115,1,8,116,117,118,119,120,121,122,123,124,125,12,9,126,127,10,191,207,128,129,130,131,132,133,34,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,52,150,151,11,152,153,192,154,47,47,181,181,37,37,181,181,37,37,181,181,37,37,181,181,37,37,63,63,29,18,22,156,157,16,33,32,197,27,158,23,179,159,40,177,160,161,162,163,198,25,26,189,84,192,3,4,2,5,6,7,8,9,10,11,24,37,75,91,36,37,66,67,76,97,98,24,56,57,3,58,4,2,47,60,5,61,62,63,156,157,6,16,69,70,73,158,78,79,159,40,82,160,83,84,85,86,87,88,89,90,94,161,95,96,162,100,101,163,104,105,106,109,7,111,25,26,112,113,114,115,1,8,117,118,119,120,121,122,123,124,125,12,9,126,127,10,128,129,130,131,132,133,34,134,135,136,137,138,140,141,142,143,144,145,148,52,150,11,153,154,56,56,56,56,57,57,57,57,3,3,3,3,58,58,58,58,4,4,4,4,2,2,2,2,47,47,47,47,60,60,60,60,5,5,5,5,61,61,61,61,62,62,62,62,63,63,63,63,156,156,156,156,157,157,157,157,6,6,6,6,16,16,16,16,69,69,69,69,70,70,70,70,73,73,73,73,158,158,158,158,78,78,78,78,79,79,79,79,159,159,159,159,40,40,40,40,82,82,82,82,160,160,160,160,83,83,83,83,84,84,84,84,85,85,85,85,86,86,86,86,87,87,87,87,88,88,88,88,89,89,89,89,90,90,90,90,94,94,94,94,161,161,161,161,95,95,95,95,96,96,96,96,162,162,162,162,100,100,100,100,163,163,163,163,104,104,104,104,105,105,105,105,106,106,106,106,109,109,109,109,7,7,7,7,111,111,111,111,25,25,25,25,26,26,26,26,112,112,112,112,113,113,113,113,114,114,114,114,115,115,115,115,1,1,1,1,8,8,8,8,117,117,117,117,118,118,118,118,119,119,119,119,120,120,120,120,121,121,121,121,122,122,122,122,123,123,123,123,124,124,124,124,125,125,125,125,12,12,12,12,9,9,9,9,126,126,126,126,127,127,127,127,10,10,10,10,128,128,128,128,130,130,130,130,131,131,131,131,132,132,132,132,133,133,133,133,34,34,34,34,134,134,134,134,135,135,135,135,136,136,136,136,137,137,137,137,138,138,138,138,140,140,140,140,141,141,141,141,142,142,142,142,143,143,143,143,144,144,144,144,145,145,145,145,148,148,148,148,52,52,52,52,150,150,150,150,11,11,11,11,153,153,153,153,154,154,154,154,37,3,4,2,5,6,7,8,9,10,11,122,74,22,23,53,27,181,205,265,168,188,60,113,192,56,56,57,3,3,3,3,3,18,58,4,4,4,4,4,2,2,2,2,2,47,60,5,5,5,5,5,61,62,63,64,22,156,15,17,65,66,157,6,6,6,6,6,67,16,68,69,69,70,33,32,197,27,71,205,170,72,73,74,36,75,35,158,76,23,77,77,78,79,206,206,24,179,159,80,40,177,81,82,160,181,83,84,37,85,86,87,88,89,90,91,92,93,94,41,161,95,96,97,98,99,162,100,101,163,102,103,104,105,106,107,108,182,109,7,7,7,7,7,110,110,198,111,111,25,26,112,189,113,114,115,1,8,8,8,8,8,116,117,118,119,120,121,122,123,124,125,12,9,9,9,9,9,126,127,10,10,10,10,10,191,207,128,129,130,131,132,133,34,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,52,150,151,11,11,11,11,11,152,153,192,154,237,58,36,37,25,164,186,88,112,119,125,138,191,99,229,260,257,44,261,258,262,53,54,55,56,29,57,3,3,18,183,183,185,46,14,58,263,264,4,2,47,60,5,61,62,63,64,22,156,15,17,65,66,157,6,67,16,68,69,70,33,32,197,27,71,205,170,72,73,74,36,75,35,158,76,23,77,77,78,79,206,24,179,159,80,40,177,81,82,160,181,83,84,37,85,86,87,88,88,89,90,91,92,93,94,41,161,95,96,97,98,99,162,100,101,163,102,102,102,102,103,104,105,106,106,107,108,182,109,7,110,110,198,111,25,26,112,189,113,114,115,1,8,116,117,118,119,120,121,122,123,124,125,12,9,126,127,10,191,207,128,129,130,131,132,133,34,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,52,150,151,11,152,153,192,154,3,4,2,5,6,7,8,9,10,11,3,3,4,4,2,2,5,5,6,6,7,7,8,8,9,9,10,10,11,11,3,4,2,5,6,7,8,9,10,11,2,24,24,3,4,2,5,6,7,8,9,10,11,3,4,2,5,6,7,8,9,10,11,34,185,117,105,129,23,24,44,14,158,161,18,163,18,179,18,22,22,23,68,68,14,14,22,22,177,192,1,0,55,170,1,1,144,1,56,57,3,58,4,2,47,60,5,61,156,157,6,16,73,158,79,159,40,82,160,83,84,85,86,87,88,89,90,94,161,95,96,162,100,163,105,109,7,25,26,113,114,115,1,8,117,118,119,120,121,122,123,124,125,12,9,126,127,10,130,131,132,133,34,134,135,136,137,138,140,141,142,143,144,145,150,11,153,25,164,133,0,0,14,14,205,205,265,265,14,14,3,4,2,5,6,7,8,9,10,11,27,36,37,46,46,3,4,2,5,6,7,8,9,10,11,3,4,2,5,6,7,8,9,10,11,229,260,257,44,261,258,262,53,54,55,56,29,57,3,18,183,185,46,14,58,263,264,4,2,47,60,5,61,62,63,64,22,156,15,17,65,66,157,6,67,16,68,69,70,33,32,197,27,71,205,170,72,73,74,36,75,35,158,76,23,77,78,79,206,24,179,159,80,40,177,81,82,160,181,83,84,37,85,86,87,88,89,90,91,92,93,94,41,161,95,96,97,98,99,162,100,101,163,102,103,104,105,106,107,108,182,109,7,110,198,111,25,26,112,189,113,114,115,1,8,116,117,118,119,120,121,122,123,124,125,12,9,126,127,10,191,207,128,129,130,131,132,133,34,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,52,150,151,11,152,153,192,154,3,4,2,5,6,7,8,9,10,11,3,4,2,5,6,7,8,9,10,11,1,1,1,119,119,1,1,3,4,2,5,6,7,8,9,10,11,117,118,52,128,1,229,117,119,122,1,119,90,22,116,60,3,4,2,5,6,7,8,9,10,11,3,4,2,5,6,7,8,9,10,11,171,173,168,175,180,200,186,188,66,67,74,35,76,80,83,41,99,101,108,182,112,137,52,165,66,76,99,146,106,22,23,60,106,106,89,103,101,101,101,68,116,137,171,71,109,47,47,47,47,47,47,47,47,47,47,47,47,47,188,47,133,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,53,175,103,103,102,101,47,47,47,28,259,147,149,25,186,112,52,133,52,101,76,97,98,37,37,37,37,99,83,99,0,63,117,122,123,14,71,24,14,3,4,2,5,6,7,8,9,10,11,41,17,106,125,139,177,23,84,92,28,259,147,149,229,60,5,61,156,157,16,158,78,159,40,160,161,162,163,25,26,128,122,133,53,1,23,24,105,27,36,37,23,237,58,259,149,198,164,191,99,80,27,36,37,23,75,91,53,129,136,117,79,3,4,2,5,6,7,8,9,10,11,1,53,24,22,1,175,175,27,92,65,139,0,25,186,83,7,1,53,56,57,3,58,4,47,60,5,61,62,63,64,6,73,79,82,84,85,86,87,88,89,90,94,96,100,105,109,7,113,114,115,1,8,117,118,119,120,121,122,123,124,125,12,9,126,127,10,129,130,131,132,133,34,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,52,150,151,11,154,3,4,2,5,6,7,8,9,10,11,36,181,181,37,37,71,37,23,181,181,37,37,36,181,181,37,37,36,181,181,37,37,37,37,181,181,37,37,37,125,60,53,16,25,12,171,186,17,205,1,16,118,77,206,110,108,182,84,136,23,119,93,138,95,23,89,105,3,4,2,5,6,7,8,9,10,11,3,4,2,5,6,7,8,9,10,11,177,198,7,3,4,2,5,6,7,8,9,10,11,1,1,98,28,259,198,147,149,53,53,53,35,41,14,46,132,131,53,54,55,56,57,3,58,4,2,47,60,5,61,62,63,64,15,17,65,66,6,67,68,69,70,71,72,73,74,75,35,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,41,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,7,110,111,112,113,114,115,1,8,116,117,118,119,120,121,122,123,124,125,12,9,126,127,10,128,129,130,131,132,133,34,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,52,150,151,11,152,153,154,56,56,69,77,206,110,111,147,149,3,4,2,5,6,7,8,9,10,11,105,71,205,205,229,260,257,44,261,258,262,53,54,55,56,29,57,3,18,183,185,46,14,58,263,264,4,2,47,60,5,61,62,63,64,22,156,15,17,65,66,157,6,67,16,68,69,70,33,32,197,27,71,205,170,72,73,74,36,75,35,158,76,23,77,78,79,206,24,179,159,80,40,177,81,82,160,181,83,84,37,85,86,87,88,89,90,91,92,93,94,41,161,95,96,97,98,99,162,100,101,163,102,103,104,105,106,107,108,182,109,7,110,198,111,25,26,112,189,113,114,115,1,8,116,117,118,119,120,121,122,123,124,125,12,9,126,127,10,191,207,128,129,130,131,132,133,34,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,52,150,151,11,152,153,192,154,229,260,257,44,261,258,262,53,54,55,56,29,57,3,18,183,185,46,14,58,263,264,4,2,47,60,5,61,62,63,64,22,156,15,17,65,66,157,6,67,16,68,69,70,33,32,197,27,71,205,170,72,73,74,36,75,35,158,76,23,77,78,79,206,24,179,159,80,40,177,81,82,160,181,83,84,37,85,86,87,88,89,90,91,92,93,94,41,161,95,96,97,98,99,162,100,101,163,102,103,104,105,106,107,108,182,109,7,110,198,111,25,26,112,189,113,114,115,1,8,116,117,118,119,120,121,122,123,124,125,12,9,126,127,10,191,207,128,129,130,131,132,133,34,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,52,150,151,11,152,153,192,154,180,145,229,260,257,44,261,258,262,53,54,55,56,29,57,3,18,183,185,46,14,58,263,264,4,2,47,60,5,61,62,63,64,22,156,15,17,65,66,157,6,67,16,68,69,70,33,32,197,27,71,205,170,72,73,74,36,75,35,158,76,23,77,78,79,206,24,179,159,80,40,177,81,82,160,181,83,84,37,85,86,87,88,89,90,91,92,93,94,41,161,95,96,97,98,99,162,100,101,163,102,103,104,105,106,107,108,182,109,7,110,198,111,25,26,112,189,113,114,115,1,8,116,117,118,119,120,121,122,123,124,125,12,9,126,127,10,191,207,128,129,130,131,132,133,34,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,52,150,151,11,152,153,192,154,105,3,4,2,5,6,7,8,9,10,11,16,229,260,257,44,261,258,262,53,54,55,56,29,57,3,18,183,185,46,14,58,263,264,4,2,47,60,5,61,62,63,64,22,156,15,17,65,66,157,6,67,16,68,69,70,33,32,197,27,71,205,170,72,73,74,36,75,35,158,76,23,77,78,79,206,24,179,159,80,40,177,81,82,160,181,83,84,37,85,86,87,88,89,90,91,92,93,94,41,161,95,96,97,98,99,162,100,101,163,102,103,104,105,106,107,108,182,109,7,110,198,111,25,26,112,189,113,114,115,1,8,116,117,118,119,120,121,122,123,124,125,12,9,126,127,10,191,207,128,129,130,131,132,133,34,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,52,150,151,11,152,153,192,154,168,188,16,25,171,164,186,191,84,47,47,0,63,99,0,205,265,265,205,92,93,164,186,145,116,116,25,164,133,2,177,177,88,117,177,27,36,37,131,132,131,132,132,72,266,266,267,267,268,268,267,268,266,269,270,271,271,272,273,274,272,273,275,276,276,277,277,278,0,0,0,0,0,0,187,187,0,0,0,0,247,248,249,0,248,253,251,172,187,247,248,249,253,251,172,187,247,248,249,172,187,247,248,249,172,187,247,248,249,172,250,250,187,247,248,249,251,253,251,172,187,247,248,249,252,252,252,252,0,172,187,172,172,172,172,187,187,187,187,253,248,247,248,247,253,172,187,247,248,249,253,251,172,187,247,248,249,0,172,187,248,0,0,247,248,253,251,172,187,247,248,249,0,172,0,253,0,0,0,0,251,253,252,252,252,252,252,172,187,247,248,249,253,251,172,187,247,248,249,253,251,172,187,247,248,249,253,251,172,187,247,248,249,253,251,172,187,247,248,249,172,247,253,249,249,249],"fc":[826],"p":[[6,"TextureFormat",0],[5,"InstanceFlags",0],[5,"Backends",0],[5,"Features",0],[5,"DownlevelFlags",0],[5,"ShaderStages",0],[5,"TextureFormatFeatureFlags",0],[5,"ColorWrites",0],[5,"BufferUsages",0],[5,"TextureUsages",0],[5,"PipelineStatisticsTypes",0],[6,"VertexFormat",0],[5,"Vec",4749],[5,"TlasPackage",0],[6,"BindingResource",0],[5,"Buffer",0],[5,"BufferBinding",0],[5,"Surface",0],[6,"Option",4750],[17,"Output"],[10,"FnOnce",4751],[5,"Adapter",0],[5,"Device",0],[5,"Instance",0],[5,"Texture",0],[5,"TextureView",0],[5,"CommandEncoder",0],[8,"ImageCopyTexture",0],[5,"QueueWriteBufferView",0],[1,"u8"],[1,"slice"],[5,"BufferViewMut",0],[5,"BufferView",0],[6,"TextureAspect",0],[5,"ComputePassDescriptor",0],[5,"ComputePass",0],[5,"RenderPass",0],[1,"u32"],[1,"tuple"],[5,"QuerySet",0],[5,"RenderPassDescriptor",0],[1,"u64"],[17,"Item"],[5,"BlasBuildEntry",0],[10,"IntoIterator",4752],[5,"TlasBuildEntry",0],[5,"Limits",0],[1,"bool"],[1,"str"],[10,"FnMut",4751],[8,"BufferAddress",0],[5,"ImageSubresourceRange",0],[5,"HalCounters",0],[5,"CoreCounters",0],[5,"InternalCounters",0],[6,"Backend",0],[6,"PowerPreference",0],[5,"RequestAdapterOptionsBase",0],[10,"Clone",4753],[5,"DownlevelCapabilities",0],[6,"ShaderModel",0],[6,"DeviceType",0],[5,"AdapterInfo",0],[6,"MemoryHints",0],[5,"BindGroupEntry",0],[5,"BindGroupDescriptor",0],[5,"BindGroupLayoutDescriptor",0],[5,"BufferSlice",0],[5,"BufferAsyncError",0],[6,"MapMode",0],[5,"TlasInstance",0],[5,"PipelineCompilationOptions",0],[6,"TextureViewDimension",0],[5,"PipelineCacheDescriptor",0],[5,"ComputePassTimestampWrites",0],[5,"ComputePipelineDescriptor",0],[5,"RequestDeviceError",0],[6,"ErrorFilter",0],[6,"BlendFactor",0],[5,"PipelineLayoutDescriptor",0],[5,"SubmissionIndex",0],[6,"BlendOperation",0],[5,"RenderBundleEncoderDescriptor",0],[5,"BlendComponent",0],[6,"LoadOp",0],[5,"BlendState",0],[6,"StoreOp",0],[5,"ColorTargetState",0],[5,"Operations",0],[6,"PrimitiveTopology",0],[5,"RenderPassTimestampWrites",0],[5,"RenderPassColorAttachment",0],[5,"RenderPassDepthStencilAttachment",0],[6,"FrontFace",0],[5,"VertexBufferLayout",0],[6,"Face",0],[5,"VertexState",0],[5,"FragmentState",0],[5,"RenderPipelineDescriptor",0],[6,"PolygonMode",0],[5,"SamplerDescriptor",0],[5,"CompilationInfo",0],[5,"CompilationMessage",0],[6,"CompilationMessageType",0],[5,"PrimitiveState",0],[5,"SourceLocation",0],[6,"ShaderSource",0],[5,"ShaderModuleDescriptor",0],[5,"MultisampleState",0],[5,"CreateSurfaceError",0],[6,"SurfaceError",0],[5,"TextureViewDescriptor",0],[5,"TextureFormatFeatures",0],[6,"AstcBlock",0],[6,"AstcChannel",0],[6,"MaintainBase",0],[5,"StencilState",0],[5,"DepthBiasState",0],[5,"DepthStencilState",0],[6,"IndexFormat",0],[6,"StencilOperation",0],[5,"StencilFaceState",0],[6,"CompareFunction",0],[6,"VertexStepMode",0],[5,"VertexAttribute",0],[6,"PresentMode",0],[6,"CompositeAlphaMode",0],[5,"PresentationTimestamp",0],[5,"Color",0],[6,"TextureDimension",0],[5,"Origin2d",0],[5,"Origin3d",0],[5,"Extent3d",0],[6,"AddressMode",0],[6,"FilterMode",0],[5,"PushConstantRange",0],[5,"CommandBufferDescriptor",0],[5,"RenderBundleDepthStencil",0],[5,"ImageDataLayout",0],[6,"BufferBindingType",0],[6,"TextureSampleType",0],[6,"StorageTextureAccess",0],[6,"SamplerBindingType",0],[6,"BindingType",0],[5,"BindGroupLayoutEntry",0],[5,"ImageCopyBufferBase",0],[5,"ImageCopyTextureBase",0],[6,"PredefinedColorSpace",0],[5,"ImageCopyTextureTaggedBase",0],[6,"SamplerBorderColor",0],[6,"QueryType",0],[6,"Dx12Compiler",0],[6,"Gles3MinorVersion",0],[6,"DeviceLostReason",0],[6,"Ordering",4754],[5,"BindGroup",0],[5,"BindGroupLayout",0],[5,"ComputePipeline",0],[5,"PipelineLayout",0],[5,"RenderBundle",0],[5,"RenderPipeline",0],[5,"Sampler",0],[5,"ShaderModule",0],[8,"SurfaceConfiguration",0],[8,"ImageCopyBuffer",0],[5,"ExposedAdapter",4755],[10,"HalApi",4756],[8,"CreateBlasDescriptor",0],[8,"BlasGeometrySizeDescriptors",0],[5,"Blas",0],[8,"BufferDescriptor",0],[5,"BufferInitDescriptor",4591],[8,"CommandEncoderDescriptor",0],[5,"OpenDevice",4755],[8,"DeviceDescriptor",0],[5,"Path",4757],[5,"Queue",0],[6,"Result",4758],[5,"PipelineCache",0],[8,"QuerySetDescriptor",0],[5,"RenderBundleEncoder",0],[5,"ShaderModuleDescriptorSpirV",0],[6,"SurfaceTarget",0],[10,"Into",4759],[6,"SurfaceTargetUnsafe",0],[8,"TextureDescriptor",0],[6,"TextureDataOrder",4591],[8,"CreateTlasDescriptor",0],[5,"Tlas",0],[10,"Default",4760],[5,"SurfaceCapabilities",0],[5,"InstanceDescriptor",0],[10,"Deserializer",4761],[10,"Deserialize",4761],[5,"Range",4762],[1,"i32"],[5,"CommandBuffer",0],[5,"SurfaceTexture",0],[10,"PartialEq",4754],[8,"RenderBundleDescriptor",0],[5,"Formatter",4763],[5,"Error",4763],[8,"Result",4763],[10,"Debug",4763],[5,"BlasTriangleGeometry",0],[6,"Error",0],[6,"SurfaceStatus",0],[10,"WindowHandle",0],[6,"RequestDeviceError",4764],[6,"ValidationError",4765],[5,"WithSpan",4766],[5,"ShaderError",4767],[6,"CreateShaderModuleError",4768],[5,"ParseError",4769],[5,"SourceLocation",4766],[6,"CreateSurfaceError",4764],[5,"Instance",4764],[6,"HandleError",4770],[10,"HasDisplayHandle",4771],[10,"HasWindowHandle",4771],[5,"AllocatorReport",4772],[5,"GlobalReport",4773],[10,"Future",4774],[10,"WasmNotSend",0],[1,"usize"],[1,"f32"],[10,"Hasher",4775],[10,"Hash",4775],[6,"MaintainResult",0],[5,"Iter",4776],[5,"IterNames",4776],[1,"array"],[10,"Send",4777],[10,"UncapturedErrorHandler",0],[5,"Box",4778],[8,"Maintain",0],[8,"RequestAdapterOptions",0],[10,"Serializer",4779],[10,"Serialize",4779],[8,"DynamicOffset",0],[5,"String",4780],[10,"Fn",4751],[10,"RangeBounds",4762],[10,"Error",4781],[5,"TypeId",4782],[8,"BufferSize",0],[5,"DrawIndirectArgs",4591],[5,"DrawIndexedIndirectArgs",4591],[5,"DispatchIndirectArgs",4591],[10,"DeviceExt",4591],[5,"DownloadBuffer",4591],[10,"RenderEncoder",4591],[5,"StagingBelt",4591],[6,"Cow",4783],[8,"AccelerationStructureUpdateMode",0],[8,"Label",0],[6,"BlasGeometries",0],[6,"ContextBlasGeometries",0],[8,"ImageCopyTextureTagged",0],[5,"ContextTlasInstance",0],[5,"ContextBlasTriangleGeometry",0],[5,"ContextBlasBuildEntry",0],[5,"ContextTlasBuildEntry",0],[5,"ContextTlasPackage",0],[8,"BlasTriangleGeometrySizeDescriptor",0],[15,"StorageTexture",4567],[15,"Buffer",4567],[15,"Texture",4567],[15,"Triangles",4576],[15,"Storage",4577],[15,"Dxc",4578],[15,"Validation",4580],[15,"Internal",4580],[15,"OutOfMemory",4580],[15,"Manual",4585],[15,"RawHandle",4586],[15,"Astc",4588],[15,"Float",4590]],"b":[[782,"impl-Flags-for-Backends"],[783,"impl-Backends"],[784,"impl-Features"],[785,"impl-Flags-for-Features"],[786,"impl-InstanceFlags"],[787,"impl-Flags-for-InstanceFlags"],[788,"impl-DownlevelFlags"],[789,"impl-Flags-for-DownlevelFlags"],[790,"impl-ShaderStages"],[791,"impl-Flags-for-ShaderStages"],[792,"impl-Flags-for-TextureFormatFeatureFlags"],[793,"impl-TextureFormatFeatureFlags"],[794,"impl-ColorWrites"],[795,"impl-Flags-for-ColorWrites"],[796,"impl-Flags-for-BufferUsages"],[797,"impl-BufferUsages"],[798,"impl-Flags-for-TextureUsages"],[799,"impl-TextureUsages"],[800,"impl-PipelineStatisticsTypes"],[801,"impl-Flags-for-PipelineStatisticsTypes"],[1879,"impl-RenderBundleEncoder%3C\'a%3E"],[1880,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[1881,"impl-RenderPass%3C\'encoder%3E"],[1882,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[1883,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[1884,"impl-RenderBundleEncoder%3C\'a%3E"],[1885,"impl-RenderPass%3C\'encoder%3E"],[1886,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[1887,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[1888,"impl-RenderBundleEncoder%3C\'a%3E"],[1889,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[1890,"impl-RenderPass%3C\'encoder%3E"],[1891,"impl-RenderBundleEncoder%3C\'a%3E"],[1892,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[1893,"impl-RenderPass%3C\'encoder%3E"],[1894,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[2432,"impl-Display-for-Backend"],[2433,"impl-Debug-for-Backend"],[2435,"impl-LowerHex-for-Backends"],[2436,"impl-Debug-for-Backends"],[2437,"impl-Octal-for-Backends"],[2438,"impl-UpperHex-for-Backends"],[2439,"impl-Binary-for-Backends"],[2442,"impl-Binary-for-Features"],[2443,"impl-Octal-for-Features"],[2444,"impl-Debug-for-Features"],[2445,"impl-UpperHex-for-Features"],[2446,"impl-LowerHex-for-Features"],[2447,"impl-Binary-for-InstanceFlags"],[2448,"impl-Debug-for-InstanceFlags"],[2449,"impl-Octal-for-InstanceFlags"],[2450,"impl-LowerHex-for-InstanceFlags"],[2451,"impl-UpperHex-for-InstanceFlags"],[2454,"impl-LowerHex-for-DownlevelFlags"],[2455,"impl-Octal-for-DownlevelFlags"],[2456,"impl-Binary-for-DownlevelFlags"],[2457,"impl-Debug-for-DownlevelFlags"],[2458,"impl-UpperHex-for-DownlevelFlags"],[2470,"impl-Debug-for-ShaderStages"],[2471,"impl-Octal-for-ShaderStages"],[2472,"impl-UpperHex-for-ShaderStages"],[2473,"impl-Binary-for-ShaderStages"],[2474,"impl-LowerHex-for-ShaderStages"],[2478,"impl-Debug-for-BufferAsyncError"],[2479,"impl-Display-for-BufferAsyncError"],[2497,"impl-Display-for-RequestDeviceError"],[2498,"impl-Debug-for-RequestDeviceError"],[2501,"impl-Display-for-Error"],[2502,"impl-Debug-for-Error"],[2546,"impl-Octal-for-TextureFormatFeatureFlags"],[2547,"impl-UpperHex-for-TextureFormatFeatureFlags"],[2548,"impl-Debug-for-TextureFormatFeatureFlags"],[2549,"impl-Binary-for-TextureFormatFeatureFlags"],[2550,"impl-LowerHex-for-TextureFormatFeatureFlags"],[2551,"impl-Debug-for-CreateSurfaceError"],[2552,"impl-Display-for-CreateSurfaceError"],[2554,"impl-Display-for-SurfaceError"],[2555,"impl-Debug-for-SurfaceError"],[2564,"impl-Debug-for-ColorWrites"],[2565,"impl-Octal-for-ColorWrites"],[2566,"impl-LowerHex-for-ColorWrites"],[2567,"impl-Binary-for-ColorWrites"],[2568,"impl-UpperHex-for-ColorWrites"],[2580,"impl-Binary-for-BufferUsages"],[2581,"impl-Octal-for-BufferUsages"],[2582,"impl-UpperHex-for-BufferUsages"],[2583,"impl-LowerHex-for-BufferUsages"],[2584,"impl-Debug-for-BufferUsages"],[2587,"impl-Octal-for-TextureUsages"],[2588,"impl-LowerHex-for-TextureUsages"],[2589,"impl-Debug-for-TextureUsages"],[2590,"impl-UpperHex-for-TextureUsages"],[2591,"impl-Binary-for-TextureUsages"],[2620,"impl-LowerHex-for-PipelineStatisticsTypes"],[2621,"impl-Binary-for-PipelineStatisticsTypes"],[2622,"impl-UpperHex-for-PipelineStatisticsTypes"],[2623,"impl-Octal-for-PipelineStatisticsTypes"],[2624,"impl-Debug-for-PipelineStatisticsTypes"],[2745,"impl-From%3CShaderError%3CWithSpan%3CValidationError%3E%3E%3E-for-CompilationInfo"],[2746,"impl-From%3CCreateShaderModuleError%3E-for-CompilationInfo"],[2748,"impl-From%3CShaderError%3CParseError%3E%3E-for-CompilationInfo"],[2830,"impl-Backends"],[2831,"impl-Flags-for-Backends"],[2832,"impl-Features"],[2833,"impl-Flags-for-Features"],[2834,"impl-InstanceFlags"],[2835,"impl-Flags-for-InstanceFlags"],[2836,"impl-DownlevelFlags"],[2837,"impl-Flags-for-DownlevelFlags"],[2838,"impl-Flags-for-ShaderStages"],[2839,"impl-ShaderStages"],[2840,"impl-TextureFormatFeatureFlags"],[2841,"impl-Flags-for-TextureFormatFeatureFlags"],[2842,"impl-Flags-for-ColorWrites"],[2843,"impl-ColorWrites"],[2844,"impl-BufferUsages"],[2845,"impl-Flags-for-BufferUsages"],[2846,"impl-Flags-for-TextureUsages"],[2847,"impl-TextureUsages"],[2848,"impl-PipelineStatisticsTypes"],[2849,"impl-Flags-for-PipelineStatisticsTypes"],[3002,"impl-Index%3Cusize%3E-for-TlasPackage"],[3003,"impl-Index%3CRange%3Cusize%3E%3E-for-TlasPackage"],[3008,"impl-IndexMut%3CRange%3Cusize%3E%3E-for-TlasPackage"],[3009,"impl-IndexMut%3Cusize%3E-for-TlasPackage"],[3588,"impl-RenderBundleEncoder%3C\'a%3E"],[3589,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[3590,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[3591,"impl-RenderPass%3C\'encoder%3E"],[3595,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[3596,"impl-RenderBundleEncoder%3C\'a%3E"],[3597,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[3598,"impl-RenderPass%3C\'encoder%3E"],[3600,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[3601,"impl-RenderBundleEncoder%3C\'a%3E"],[3602,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[3603,"impl-RenderPass%3C\'encoder%3E"],[3605,"impl-RenderBundleEncoder%3C\'a%3E"],[3606,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[3607,"impl-RenderPass%3C\'encoder%3E"],[3608,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[3611,"impl-RenderBundleEncoder%3C\'a%3E"],[3612,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[3613,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[3614,"impl-RenderPass%3C\'encoder%3E"]]}],\
["wgpu_core",{"doc":"This library safely implements WebGPU on native platforms. …","t":"ISSSPIPICCCCCCCHCCCQQQQQCECCCCCCCFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPGFFFFFFGPPPPGPFGPGPPPPPFPPGGGPPPPPPPPPPGPPPPPPPPPPPFPPPPPPPPPPPPPFFPGFFGFFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOONNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPPFGPPPPPPPPPPPPPPPPPGPPPGFFGPGFFFGPPGPGPPGPPPPPPPPPPPPPPPPPPPGPPPPGPGPPPPPPPPGPIIIPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFPPGFPPPPPPPPPPPPPGPPPPGFFIFFFEPGFFFFFGPGPPPPPPPPPPPPPPPPPGPPGPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOONOOONOOONOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOHHHHHHHHHHHHIEPIGIFFFFFPGFFPPPPPPFFPPGPSPFGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOONNNNNNNNNNNNNNOOOCCOOCOONNNNNNONNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOPPPPPPPPPPFPPGGPPPFFPPGPPPPNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNFNNNNNNNNNNNNNNNNNNNNNGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFIFNNNNNNNNNNNNNONNNNONNNONNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNKTFFOOONNNNOOOONNNNNNNNNNNNNNOOOOOOOOOONNNNNNNNIIIIIIIIIIFKIIIIFIIIIIIIIIIIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNGGGGGGGGGGGGGGGGGGGGGGGGGGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNFPGPFPGFPPPGIGFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNNNNNNONNHONNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTPPPPGFFPPGGGGPGPPPPPPPPPPPPFPPPIGPPPPPPPPPPPPPPPPPPPPPPPPPFFGPPPFFPFFFFFFFTPPFFGPPPPPPPPPPPFFFPTTPNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOONOONNNNNNNNNNONNNNNOOOOOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPGPPPPPPPPFPPGFPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOFGPPFGGPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFFPPFFGFFFPPPPPPPPGGOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOONNNNNNNNNNNNNNNNOOOONNNNNNOONNNOOONNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOFNNNNNNONNNNNNNNNOOONNNNNPPPPPPPFIFGIPIGFFFPGGGGPGGFFPPFFPPPPPPPPPPGFPPPPPPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPKPPPPPPPPPPFPPPPPFPPPPPPPPPPPKFIPFKFFGFPPTFGIGGFFGGFIPPPPPPPPPPPPPPPPPPPOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNMNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNOOOOOOOOOOOOOOOONNONNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPPGGPPGPPPGPFFPPPPPPPPPFPPGIPPPPPPPPPNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNHNOOOOOOOOOOOOOOOOOOOOO","n":["Label","MAX_BIND_GROUPS","MAX_COLOR_ATTACHMENTS","MAX_VERTEX_BUFFERS","None","RawString","Some","SubmissionIndex","api","binding_model","command","device","error","global","hal_api","hal_label","hub","id","identity","impl_labeled","impl_parent_device","impl_resource_type","impl_storage_item","impl_trackable","instance","naga","pipeline","present","ray_tracing","registry","resource","storage","validation","Empty","Gles","Vulkan","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","downcast","downcast","downcast","fmt","fmt","fmt","from","from","from","into","into","into","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","AccelerationStructure","AccelerationStructure","ArrayUnsupported","BindError","BindGroup","BindGroupDescriptor","BindGroupDynamicBindingData","BindGroupEntry","BindGroupLayout","BindGroupLayoutDescriptor","BindGroupLayoutEntryError","BindingArrayLengthMismatch","BindingArrayPartialLengthMismatch","BindingArrayZeroLength","BindingRangeTooLarge","BindingResource","BindingSizeTooSmall","BindingTypeMaxCountError","BindingTypeMaxCountErrorKind","BindingZeroSize","BindingZone","BindingsNumMismatch","Buffer","Buffer","BufferArray","BufferArray","BufferBinding","BufferRangeTooLarge","ConflictBinding","CreateBindGroupError","CreateBindGroupLayoutError","CreatePipelineLayoutError","DepthStencilAspect","DestroyedResource","Device","Device","Device","DuplicateBinding","DynamicBindingOutOfBounds","DynamicStorageBuffers","DynamicUniformBuffers","Entry","GetBindGroupLayoutError","InvalidBindingIndex","InvalidGroupIndex","InvalidResource","InvalidResource","InvalidResource","InvalidStorageTextureFormat","InvalidStorageTextureMipLevelCount","InvalidTextureDimension","InvalidTextureMultisample","InvalidTextureSampleType","InvalidVisibility","LateMinBufferBindingSizeMismatch","MisalignedPushConstantRange","MismatchedDynamicOffsetCount","MissingBindingDeclaration","MissingBufferUsage","MissingDownlevelFlags","MissingFeatures","MissingFeatures","MissingStages","MissingTextureUsage","MoreThanOnePushConstantRangePerStage","Non2DMultisampled","PartialRangeMatch","Pipeline","PipelineLayout","PipelineLayoutDescriptor","PushConstantRangeTooLarge","PushConstantUploadError","ResolvedBindGroupDescriptor","ResolvedBindGroupEntry","ResolvedBindingResource","ResolvedBufferBinding","ResolvedPipelineLayoutDescriptor","ResourceUsageCompatibility","SampleTypeFloatFilterableBindingMultisampled","SampledTextures","Sampler","Sampler","SamplerArray","SamplerArray","Samplers","SingleBindingExpected","Stage","StorageBuffers","StorageReadNotSupported","StorageTextureCube","StorageTextureReadWrite","StorageTextures","TextureView","TextureView","TextureViewArray","TextureViewArray","TooLarge","TooManyBindings","TooManyBindings","TooManyGroups","Unaligned","UnalignedBufferOffset","UnalignedDynamicBinding","UniformBuffers","UnmatchedStages","WrongBindingType","WrongSamplerComparison","WrongSamplerFiltering","bind_group_layouts","bind_group_layouts","binding","binding","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_size","buffer","buffer_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compact_index","count","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device","device","device","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","entries","entries","entries","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","group_index","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","kind","label","label","label","label","label","label","label","label","layout","layout","limit","offset","offset","push_constant_ranges","push_constant_ranges","resource","resource","serialize","serialize","serialize","serialize","serialize","serialize","shader_size","size","size","source","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","zone","actual","alignment","bind_group","bind_group","bind_group","binding","binding","binding_range","buffer_size","expected","group","group","group","idx","idx","limit_name","maximum_dynamic_offset","offset","offset","actual","actual","actual","actual","actual","binding","binding","binding","binding","binding","binding","binding","binding","binding","buffer","buffer","expected","expected","expected","expected","given","layout_cmp","layout_dimension","layout_flt","layout_format","layout_multisampled","layout_sample_type","limit","min","mip_level_count","range","sampler_cmp","sampler_flt","size","view_dimension","view_format","view_format","view_samples","binding","binding","error","maximum","actual","bound","index","index","index","intersected","max","max","provided","range","actual","actual","actual","end_offset","idx","idx","idx","matched","missing","offset","range","unmatched","AlreadyStarted","AlreadyStopped","ArcRenderPassDepthStencilAttachment","AttachmentErrorLocation","AttachmentSampleCountMismatch","AttachmentsDimensionMismatch","BeginOcclusionQuery","BeginPipelineStatisticsQuery","BeginPipelineStatisticsQuery","Bind","Bind","BindGroupIndexOutOfRange","BindGroupIndexOutOfRange","BindingSizeTooSmall","BindingSizeTooSmall","BufferOffsetAlignment","BufferOverrun","BufferOverrun","BufferOverrun","Bundle","Clear","ClearError","Color","ColorAttachment","ColorAttachment","ColorAttachmentError","CommandBuffer","CommandBufferMutable","CommandEncoderError","CommandEncoderError","ComputeCommand","ComputePass","ComputePassDescriptor","ComputePassError","ComputePassErrorInner","CopyAspectNotOne","CopyDstMissingAspects","CopyError","CopyFromForbiddenTextureFormat","CopySide","CopySrcMissingAspects","CopyToForbiddenTextureFormat","CreateRenderBundleError","Depth","Destination","DestroyedResource","DestroyedResource","DestroyedResource","DestroyedResource","DestroyedResource","DestroyedResource","DestroyedResource","Device","Device","Device","Device","Device","Device","Discard","Dispatch","Dispatch","Dispatch","DispatchError","DispatchIndirect","Draw","Draw","Draw","DrawError","DrawIndirect","DrawKind","Encoder","Encoder","Encoder","Encoder","EndOcclusionQuery","EndPipelineStatisticsQuery","EndPipelineStatisticsQuery","ExecuteBundle","ExecutionError","ExternalCopyToForbiddenTextureFormat","ImageCopyBuffer","ImageCopyTexture","ImageCopyTextureTagged","IncompatibleBindGroup","IncompatibleBindGroup","IncompatibleBundleReadOnlyDepthStencil","IncompatibleBundleTargets","IncompatibleDepthAccess","IncompatiblePipelineTargets","IncompatibleStencilAccess","IncompatibleType","IndexBeyondLimit","IndirectBufferOverrun","IndirectBufferOverrun","IndirectCountBufferOverrun","InsertDebugMarker","InsertDebugMarker","InstanceBeyondLimit","Invalid","InvalidBytesPerRow","InvalidColorAttachment","InvalidCopySize","InvalidDepthOps","InvalidDepthStencilAttachmentFormat","InvalidDimensionExternal","InvalidFormat","InvalidGroupSize","InvalidMipLevel","InvalidParentEncoder","InvalidParentEncoder","InvalidPopDebugGroup","InvalidPopDebugGroup","InvalidResolveSampleCounts","InvalidResource","InvalidResource","InvalidResource","InvalidResource","InvalidResource","InvalidResource","InvalidRowsPerImage","InvalidSampleCount","InvalidSampleCount","InvalidScissorRect","InvalidStencilOps","InvalidTextureAspect","InvalidTextureLayerRange","InvalidTextureLevelRange","InvalidTextureMipLevel","InvalidValuesOffset","InvalidViewportDepth","InvalidViewportRect","Load","LoadOp","Locked","MemoryInitFailure","MismatchedResolveTextureFormat","MissingAttachments","MissingBlendConstant","MissingBufferUsage","MissingBufferUsage","MissingBufferUsage","MissingBufferUsage","MissingBufferUsage","MissingClearTextureFeature","MissingDownlevelFlags","MissingDownlevelFlags","MissingDownlevelFlags","MissingFeature","MissingFeatures","MissingFeatures","MissingFeatures","MissingIndexBuffer","MissingOcclusionQuerySet","MissingPipeline","MissingPipeline","MissingTextureAspect","MissingTextureUsage","MissingTextureUsage","MissingVertexBuffer","MultiDrawIndirect","MultiDrawIndirectCount","MultiViewDimensionMismatch","MultiViewMismatch","NoValidTextureClearMode","NotRecording","Occlusion","OffsetPlusSizeExceeds64BitBounds","OutOfBounds","OutOfMemory","Pass","PassChannel","PassEnded","PassEnded","PassErrorScope","PassTimestampWrites","PipelineStatistics","PopDebugGroup","PopDebugGroup","PushConstantOffsetAlignment","PushConstantOffsetAlignment","PushConstantOutOfMemory","PushConstantOutOfMemory","PushConstantSizeAlignment","PushConstantSizeAlignment","PushConstants","PushConstants","PushDebugGroup","PushDebugGroup","QueryError","QueryOverrun","QueryReset","QueryUse","QueryUse","QueryUseError","Rect","RenderBundle","RenderBundleDescriptor","RenderBundleEncoder","RenderBundleEncoderDescriptor","RenderBundleError","RenderCommand","RenderCommand","RenderCommandError","RenderPass","RenderPassColorAttachment","RenderPassDepthStencilAttachment","RenderPassDescriptor","RenderPassError","RenderPassErrorInner","Resolve","ResolveError","ResourceUsageCompatibility","ResourceUsageCompatibility","ResourceUsageCompatibility","SameSourceDestinationBuffer","SetBindGroup","SetBindGroup","SetBlendConstant","SetIndexBuffer","SetPipeline","SetPipelineCompute","SetPipelineRender","SetPushConstant","SetPushConstant","SetScissorRect","SetStencilReference","SetVertexBuffer","SetViewport","SimplifiedQueryType","Source","Store","StoreOp","SurfaceTextureDropped","TextureFormatsNotCopyCompatible","TextureOverrun","TextureViewIsNotRenderable","Timestamp","TooMany","TooManyBytesPerSample","Transfer","TransferError","UnalignedBufferOffset","UnalignedBufferOffset","UnalignedBufferOffset","UnalignedBytesPerRow","UnalignedCopyHeight","UnalignedCopyOriginX","UnalignedCopyOriginY","UnalignedCopySize","UnalignedCopyWidth","UnalignedFillSize","UnalignedIndirectBufferOffset","UnalignedIndirectBufferOffset","Unimplemented","Unimplemented","UnmatchedIndexFormats","UnspecifiedBytesPerRow","UnspecifiedRowsPerImage","UnsupportedResolveTargetFormat","Use","UsedTwiceInsideRenderpass","VertexBeyondLimit","VertexBufferIndexOutOfRange","VertexOutOfBounds","WriteTimestamp","WriteTimestamp","aspect","aspect","beginning_of_pass_write_index","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","bundle_ffi","channel","check_finished","clear_value","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_attachments","color_formats","color_space","default","default","default","default","depth","depth","depth_stencil","depth_stencil_attachment","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device","device","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","dummy","end_of_pass_write_index","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_device_error","h","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","label","label","label","label","label","label","label","label","layout","load_op","mip_level","mip_level","multiview","new","occlusion_query_set","origin","origin","parent","premultiplied_alpha","query_set","read_only","resolve_compute_command_ids","resolve_target","sample_count","scope","scope","scope","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_index_buffer","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","stencil","stencil","store_op","texture","texture","timestamp_writes","timestamp_writes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_take","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","view","view","view","w","x","y","index","resolve","buffer_size","end_offset","requested_size","start_offset","start_offset","subresource_array_layer_count","subresource_base_array_layer","subresource_base_mip_level","subresource_mip_level_count","subresource_range_aspects","texture_format","texture_layer_range","texture_level_range","given","limit","limit","total","bind_group_id","buffer_id","color","color","index","len","len","num_dynamic_offsets","offset","offset","query_index","query_index","query_set_id","query_set_id","size_bytes","values_offset","buffer_size","end_offset","index","max","offset","current","limit","buffer_format","index","index_limit","instance_limit","last_index","last_instance","last_vertex","limit","offset","pipeline","pipeline","pipeline_format","slot","slot","slot","step_mode","vertex_limit","indexed","indirect","kind","active_query_index","new_query_index","query_index","query_index","query_set_size","query_type","set_type","index","index","max","max","actual_extent","actual_location","actual_location","actual_samples","begin_count_offset","buffer_size","bundle_depth","bundle_stencil","count","count_buffer_size","dst","dst","end_count_offset","end_offset","expected_extent","expected_location","expected_location","expected_samples","format","location","location","location","location","offset","pass_depth","pass_stencil","reason","src","src","buffer_end_offset","buffer_size","buffer_start_offset","end_query","end_query","query_set_size","start_query","start_query","stride","aspect","aspect","aspect","buffer_size","count","dimension","dst_format","end_offset","end_offset","format","format","format","level","requested","sample_count","side","side","src_format","start_offset","start_offset","texture_size","total","wgpu_render_bundle_draw","wgpu_render_bundle_draw_indexed","wgpu_render_bundle_draw_indexed_indirect","wgpu_render_bundle_draw_indirect","wgpu_render_bundle_insert_debug_marker","wgpu_render_bundle_pop_debug_group","wgpu_render_bundle_push_debug_group","wgpu_render_bundle_set_bind_group","wgpu_render_bundle_set_index_buffer","wgpu_render_bundle_set_pipeline","wgpu_render_bundle_set_push_constants","wgpu_render_bundle_set_vertex_buffer","BufferMapPendingClosure","Device","Device","DeviceDescriptor","DeviceError","DeviceLostCallback","DeviceLostClosure","DeviceLostClosureC","DeviceLostClosureRust","DeviceLostInvocation","DeviceMismatch","DeviceMismatch","HostMap","ImplicitPipelineContext","ImplicitPipelineIds","IncompatibleColorAttachment","IncompatibleDepthStencilAttachment","IncompatibleMultiview","IncompatibleSampleCount","Invalid","Lost","MissingDownlevelFlags","MissingFeatures","OutOfMemory","Read","RenderPassCompatibilityError","ResourceCreationFailed","SHADER_STAGE_COUNT","StuckGpu","UserClosures","WaitIdleError","Write","WrongSubmissionIndex","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","callback","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_validator","default","deserialize","deserialize","deserialize","deserialize","device_lost_invocations","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_c","from_hal","from_rust","global","group_ids","group_ids","into","into","into","into","into","into","into","into","into","into","into","into","into","into","label","mappings","memory_hints","queue","ray_tracing","required_features","required_limits","resource","root_id","root_id","serialize","serialize","serialize","serialize","source","source","submissions","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","user_data","actual","actual","actual","actual","expected","expected","expected","expected","indices","res","res","res","res","BufferStillMapped","CommandEncoder","DestroyedAccelerationStructure","DestroyedBuffer","DestroyedResource","DestroyedResource","DestroyedTexture","InvalidResource","InvalidResource","MemoryInitFailure","Queue","Queue","Queue","QueueSubmitError","QueueWriteError","ScratchBuffer","StagingBuffer","StuckGpu","SubmittedWorkDoneClosure","SubmittedWorkDoneClosureC","SurfaceOutputDropped","SurfaceUnconfigured","TempResource","Transfer","Unmap","ValidateBlasActionsError","ValidateTlasActionsError","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","clone","clone","clone_into","clone_into","create_staging_buffer","device","downcast","downcast","downcast","downcast","downcast","downcast","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_c","from_rust","get_timestamp_period","into","into","into","into","into","into","label","on_submitted_work_done","source","source","submit","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","user_data","validate_write_buffer","write_buffer","write_staging_buffer","write_texture","Device","backend","borrow","borrow_mut","check_is_valid","create_pipeline_cache","downcast","drop","fmt","from","generate_allocator_report","get_hal_counters","get_queue","handle_hal_error","into","is_valid","label","set_queue","try_from","try_into","type_id","upcast","Action","BuildAccelerationStructures","BuildAccelerationStructuresUnsafeTlas","ClearBuffer","ClearTexture","Command","ConfigureSurface","CopyBufferToBuffer","CopyBufferToTexture","CopyTextureToBuffer","CopyTextureToTexture","CreateBindGroup","CreateBindGroupLayout","CreateBlas","CreateBuffer","CreateComputePipeline","CreatePipelineCache","CreatePipelineLayout","CreateQuerySet","CreateRenderBundle","CreateRenderPipeline","CreateSampler","CreateShaderModule","CreateTexture","CreateTextureView","CreateTlas","DestroyBindGroup","DestroyBindGroupLayout","DestroyBlas","DestroyBuffer","DestroyComputePipeline","DestroyPipelineCache","DestroyPipelineLayout","DestroyQuerySet","DestroyRenderBundle","DestroyRenderPipeline","DestroySampler","DestroyShaderModule","DestroyTexture","DestroyTextureView","DestroyTlas","DiscardSurfaceTexture","FILE_NAME","FreeBlas","FreeBuffer","FreeTexture","FreeTlas","GetSurfaceTexture","Init","InsertDebugMarker","PopDebugGroup","Present","PushDebugGroup","ResolveQuerySet","RunComputePass","RunRenderPass","Submit","WriteBuffer","WriteTexture","WriteTimestamp","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","downcast","downcast","fmt","fmt","from","from","into","into","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","backend","base","data","data","data","desc","desc","desc","desc","desc","desc","desc","desc","desc","desc","id","id","id","id","id","id","id","id","id","id","id","implicit_context","implicit_context","layout","parent_id","parent_id","queued","range","size","sizes","to","base","base","blas","blas","destination","destination_offset","dst","dst","dst","dst","dst","dst","dst_offset","occlusion_query_set_id","offset","query_count","query_index","query_set_id","query_set_id","size","size","size","size","size","src","src","src","src","src_offset","start_query","subresource_range","target_colors","target_depth_stencil","timestamp_writes","timestamp_writes","tlas","tlas","ContextError","ContextErrorSource","MultiError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","downcast","downcast","errors","fmt","fmt","fmt","fmt","fn_ident","from","from","into","into","label","new","source","source","source","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","Global","GlobalReport","adapter_as_hal","adapter_downlevel_capabilities","adapter_drop","adapter_features","adapter_get_info","adapter_get_presentation_timestamp","adapter_get_texture_format_features","adapter_is_surface_supported","adapter_limits","adapter_request_device","bind_group_drop","bind_group_layout_drop","blas_destroy","blas_drop","borrow","borrow","borrow_mut","borrow_mut","buffer_as_hal","buffer_destroy","buffer_drop","buffer_get_mapped_range","buffer_map_async","buffer_unmap","command_buffer_drop","command_encoder_as_hal_mut","command_encoder_build_acceleration_structures","command_encoder_build_acceleration_structures_unsafe_tlas","command_encoder_clear_buffer","command_encoder_clear_texture","command_encoder_copy_buffer_to_buffer","command_encoder_copy_buffer_to_texture","command_encoder_copy_texture_to_buffer","command_encoder_copy_texture_to_texture","command_encoder_create_compute_pass","command_encoder_create_render_pass","command_encoder_drop","command_encoder_finish","command_encoder_insert_debug_marker","command_encoder_pop_debug_group","command_encoder_push_debug_group","command_encoder_resolve_query_set","command_encoder_write_timestamp","compute_pass_begin_pipeline_statistics_query","compute_pass_dispatch_workgroups","compute_pass_dispatch_workgroups_indirect","compute_pass_end","compute_pass_end_pipeline_statistics_query","compute_pass_insert_debug_marker","compute_pass_pop_debug_group","compute_pass_push_debug_group","compute_pass_set_bind_group","compute_pass_set_pipeline","compute_pass_set_push_constants","compute_pass_write_timestamp","compute_pipeline_drop","compute_pipeline_get_bind_group_layout","create_adapter_from_hal","create_buffer_error","create_buffer_from_hal","create_device_from_hal","create_render_bundle_error","create_texture_error","create_texture_from_hal","device_as_hal","device_create_bind_group","device_create_bind_group_layout","device_create_blas","device_create_buffer","device_create_command_encoder","device_create_compute_pipeline","device_create_pipeline_cache","device_create_pipeline_layout","device_create_query_set","device_create_render_bundle_encoder","device_create_render_pipeline","device_create_sampler","device_create_shader_module","device_create_shader_module_spirv","device_create_texture","device_create_tlas","device_destroy","device_downlevel_properties","device_drop","device_features","device_fence_as_hal","device_generate_allocator_report","device_get_internal_counters","device_limits","device_poll","device_set_buffer_data","device_set_device_lost_closure","device_start_capture","device_stop_capture","downcast","downcast","drop","enumerate_adapters","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_hal_instance","from_instance","generate_report","hub","hub_report","instance","instance_as_hal","instance_create_surface","into","into","new","pipeline_cache_drop","pipeline_cache_get_data","pipeline_layout_drop","poll_all_devices","query_set_drop","queue_create_staging_buffer","queue_drop","queue_get_timestamp_period","queue_on_submitted_work_done","queue_submit","queue_validate_write_buffer","queue_write_buffer","queue_write_staging_buffer","queue_write_texture","render_bundle_drop","render_bundle_encoder_finish","render_pass_begin_occlusion_query","render_pass_begin_pipeline_statistics_query","render_pass_draw","render_pass_draw_indexed","render_pass_draw_indexed_indirect","render_pass_draw_indirect","render_pass_end","render_pass_end_occlusion_query","render_pass_end_pipeline_statistics_query","render_pass_execute_bundles","render_pass_insert_debug_marker","render_pass_multi_draw_indexed_indirect","render_pass_multi_draw_indexed_indirect_count","render_pass_multi_draw_indirect","render_pass_multi_draw_indirect_count","render_pass_pop_debug_group","render_pass_push_debug_group","render_pass_set_bind_group","render_pass_set_blend_constant","render_pass_set_index_buffer","render_pass_set_pipeline","render_pass_set_push_constants","render_pass_set_scissor_rect","render_pass_set_stencil_reference","render_pass_set_vertex_buffer","render_pass_set_viewport","render_pass_write_timestamp","render_pipeline_drop","render_pipeline_get_bind_group_layout","request_adapter","sampler_drop","shader_module_drop","surface_as_hal","surface_configure","surface_drop","surface_get_capabilities","surface_get_current_texture","surface_present","surface_texture_discard","surfaces","surfaces","texture_as_hal","texture_create_view","texture_destroy","texture_drop","texture_view_as_hal","texture_view_drop","tlas_destroy","tlas_drop","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","HalApi","VARIANT","Hub","HubReport","adapters","bind_group_layouts","bind_groups","borrow","borrow","borrow_mut","borrow_mut","buffers","command_buffers","compute_pipelines","devices","downcast","downcast","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","generate_report","into","into","is_empty","pipeline_caches","pipeline_layouts","query_sets","queues","render_bundles","render_pipelines","samplers","shader_modules","texture_views","textures","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","AdapterId","BindGroupId","BindGroupLayoutId","BlasId","BufferId","CommandBufferId","CommandEncoderId","ComputePassEncoderId","ComputePipelineId","DeviceId","Id","Marker","PipelineCacheId","PipelineLayoutId","QuerySetId","QueueId","RawId","RenderBundleEncoderId","RenderBundleId","RenderPassEncoderId","RenderPipelineId","SamplerId","ShaderModuleId","StagingBufferId","SurfaceId","TextureId","TextureViewId","TlasId","TlasInstanceId","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","compare","compare","deserialize","deserialize","downcast","downcast","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_raw","hash","hash","into","into","into_command_buffer_id","into_command_buffer_id","into_command_encoder_id","into_command_encoder_id","into_raw","markers","partial_cmp","partial_cmp","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unzip","unzip","upcast","upcast","zip","zip","Adapter","BindGroup","BindGroupLayout","Blas","Buffer","CommandBuffer","CommandEncoder","ComputePassEncoder","ComputePipeline","Device","PipelineCache","PipelineLayout","QuerySet","Queue","RenderBundle","RenderBundleEncoder","RenderPassEncoder","RenderPipeline","Sampler","ShaderModule","StagingBuffer","Surface","Texture","TextureView","Tlas","TlasInstance","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","IdentityManager","borrow","borrow_mut","downcast","fmt","free","from","into","mark_as_used","new","process","try_from","try_into","type_id","upcast","Adapter","BackendNotEnabled","CreateSurfaceError","Device","FailedLimit","FailedToCreateSurfaceForAnyBackend","GetSurfaceSupportError","Instance","LimitsExceeded","NoGraphicsQueue","NotFound","RequestAdapterError","RequestAdapterOptions","RequestDeviceError","Surface","Unsupported","UnsupportedFeature","as_hal","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compatible_surface","create_device_and_queue","create_surface","default","deserialize","deserialize","deserialize","discard","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downlevel_capabilities","drop","enumerate_adapters","features","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_fallback_adapter","from","from","from","from","from","from","from","from","from","from","get_capabilities","get_capabilities_with_raw","get_current_texture","get_info","get_presentation_timestamp","get_texture_format_features","instance_per_backend","into","into","into","into","into","into","into","into","is_surface_supported","limits","name","new","new","parse_backends_from_comma_list","power_preference","present","raw","raw","request_adapter","serialize","serialize","serialize","source","surface_per_backend","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","BLEND_CONSTANT","BindGroup","BlendFactorOnUnsupportedTarget","ColorAttachment","ColorState","ColorStateError","ComputePipeline","ComputePipelineDescriptor","ConservativeRasterizationNonFillPolygonMode","Corrupted","CreateComputePipelineError","CreatePipelineCacheError","CreateRenderPipelineError","CreateShaderModuleError","DepthStencilState","DepthStencilStateError","Device","Device","Device","Device","DeviceMismatch","Extended","FormatNotBlendable","FormatNotColor","FormatNotDepth","FormatNotRenderable","FormatNotRenderable","FormatNotStencil","FragmentState","Generation","Implicit","Implicit","ImplicitBindGroupCount","ImplicitLayoutError","IncompatibleFormat","Internal","Internal","Internal","InvalidGroupIndex","InvalidMinMaxBlendFactors","InvalidResource","InvalidResource","InvalidSampleCount","InvalidSampleCount","InvalidSampleCount","InvalidVertexAttributeOffset","InvalidWriteMask","MissingDownlevelFlags","MissingDownlevelFlags","MissingFeatures","MissingFeatures","MissingFeatures","MissingIds","MissingImplicitPipelineIds","Naga","NoTargetSpecified","Outdated","Parsing","Pipeline","PipelineCache","PipelineCacheDescriptor","PipelineCacheValidationError","PipelineConstants","PipelineConstants","PipelineExpectsShaderToUseDualSourceBlending","PipelineFlags","ProgrammableStageDescriptor","ReflectionError","RenderPipeline","RenderPipelineDescriptor","ResolvedComputePipelineDescriptor","ResolvedFragmentState","ResolvedProgrammableStageDescriptor","ResolvedRenderPipelineDescriptor","ResolvedVertexState","STENCIL_REFERENCE","ShaderExpectsPipelineToUseDualSourceBlending","ShaderLocationClash","ShaderModule","ShaderModuleDescriptor","ShaderModuleSource","Stage","Stage","StripIndexFormatForNonStripTopology","TooManyVertexAttributes","TooManyVertexBuffers","Truncated","UnalignedShader","UnalignedVertexStride","Unsupported","Validation","Validation","VertexBufferLayout","VertexState","VertexStep","VertexStrideTooLarge","WRITES_DEPTH","WRITES_STENCIL","Wgsl","all","array_stride","attributes","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffers","buffers","cache","cache","cache","cache","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","constants","constants","contains","data","default","depth_stencil","depth_stencil","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device","device","device","device","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","empty","entry_point","entry_point","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fallback","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_all","is_empty","iter","iter_names","label","label","label","label","label","label","label","label","label","label","last_stride","layout","layout","layout","layout","mode","module","module","multisample","multisample","multiview","multiview","not","primitive","primitive","remove","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","shader_bound_checks","source","source","source","source","source","stage","stage","stage","stage","stage","stage","step_mode","stride","sub","sub_assign","symmetric_difference","targets","targets","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertex","vertex","was_avoidable","zero_initialize_workgroup_memory","zero_initialize_workgroup_memory","pipeline","shader","binding","error","error","error","factor","given","given","given","group","index","index","limit","limit","limit","location","offset","size","stage","stage","stage","stride","strip_index_format","target","topology","bind","group","limit","AlreadyAcquired","ConfigureSurfaceError","Device","Device","Invalid","InvalidSurface","InvalidViewFormat","MissingDownlevelFlags","NotConfigured","PreviousOutputExists","ResolvedSurfaceOutput","StillReferenced","StuckGpu","SurfaceError","SurfaceOutput","TextureDestroyed","TooLarge","UnsupportedAlphaMode","UnsupportedFormat","UnsupportedPresentMode","UnsupportedQueueFamily","UnsupportedUsage","ZeroArea","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","downcast","downcast","downcast","downcast","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","source","source","status","status","texture","texture_id","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","available","available","available","available","height","max_texture_dimension_2d","requested","requested","requested","requested","width","BlasBuildEntry","BlasGeometries","BlasIndexCountProvidedMismatch","BlasNewerThenTlas","BlasTriangleGeometry","BuildAccelerationStructureError","CreateBlasError","CreateBufferError","CreateBufferError","CreateTlasError","Device","Device","Device","DifferentBlasIndexFormats","DifferentBlasVertexFormats","Encoder","IncompatibleBlasBuildSizes","IncompatibleBlasFlags","IncompatibleBlasIndexCount","IncompatibleBlasVertexCount","InsufficientBufferSize","InvalidBlas","InvalidBlas","InvalidBlas","InvalidBlasForInstance","InvalidBlasId","InvalidBlasIdForInstance","InvalidBuffer","InvalidBufferId","InvalidIndexCount","InvalidTlas","InvalidTlas","InvalidTlasId","InvalidVertexFormat","MissingAssociatedData","MissingBlasInputUsageFlag","MissingFeature","MissingFeature","MissingFeature","MissingIndexBuffer","MissingIndexData","MissingTlasInputUsageFlag","TlasBuildEntry","TlasInstance","TlasInstanceCountExceeded","TlasInvalidCustomIndex","TlasPackage","TraceBlasBuildEntry","TraceBlasGeometries","TraceBlasTriangleGeometry","TraceTlasInstance","TraceTlasPackage","TriangleGeometries","TriangleGeometries","UnalignedIndexBufferOffset","UnalignedTransformBufferOffset","Unimplemented","UsedUnbuilt","UsedUnbuilt","UsedUnbuiltBlas","ValidateBlasActionsError","ValidateTlasActionsError","blas_id","blas_id","blas_id","blas_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","custom_index","custom_index","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","first_vertex","first_vertex","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","geometries","geometries","index_buffer","index_buffer","index_buffer_offset","index_buffer_offset","instance_buffer_id","instance_count","instances","instances","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lowest_unmodified","lowest_unmodified","mask","mask","serialize","serialize","serialize","serialize","serialize","serialize","size","size","source","source","source","tlas_id","tlas_id","tlas_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","transform","transform","transform_buffer","transform_buffer","transform_buffer_offset","transform_buffer_offset","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertex_buffer","vertex_buffer","vertex_stride","vertex_stride","RegistryReport","borrow","borrow_mut","clone","clone_into","default","downcast","element_size","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","into","is_empty","num_allocated","num_kept_from_user","num_released_from_user","to_owned","try_from","try_into","type_id","upcast","Aborted","AccessError","AlreadyDestroyed","AlreadyMapped","AlreadyMapped","ArrayLayerCount","Aspects","Blas","BlasDescriptor","Buffer","BufferAccessError","BufferAccessResult","BufferCopy","BufferDescriptor","BufferMapAsyncStatus","BufferMapCallback","BufferMapCallbackC","BufferMapOperation","ContextLost","CreateBufferError","CreateQuerySetError","CreateSamplerError","CreateTextureError","CreateTextureView","CreateTextureViewError","DestroyError","DestroyedAccelerationStructure","DestroyedBuffer","DestroyedResource","DestroyedResource","DestroyedResourceError","DestroyedTexture","Device","Device","Device","Device","Device","Device","Dimension","Err","Error","Failed","Fallible","FlushedStagingBuffer","FormatReinterpretation","HeightNotMultipleOf","IndirectValidationBindGroup","Invalid","Invalid","InvalidAlignment","InvalidAnisotropy","InvalidArrayLayerCount","InvalidAspect","InvalidCompressedDimension","InvalidCubeTextureViewSize","InvalidCubemapArrayTextureDepth","InvalidCubemapTextureDepth","InvalidDepthDimension","InvalidDimension","InvalidDimensionUsages","InvalidFilterModeWithAnisotropy","InvalidFormatUsages","InvalidLodMaxClamp","InvalidLodMinClamp","InvalidMipLevelCount","InvalidMultisampledFormat","InvalidMultisampledStorageBinding","InvalidMultisampledTextureViewDimension","InvalidRange","InvalidResource","InvalidResource","InvalidResource","InvalidResourceError","InvalidSampleCount","InvalidSampleCount","InvalidTextureViewDimension","InvalidUsage","InvalidUsage","InvalidUsageFlags","InvalidViewFormat","Labeled","LimitExceeded","MagFilter","MapAborted","MapAlreadyPending","MapAlreadyPending","MaxBufferSize","MinFilter","MipLevelCount","MipmapFilter","MissingBufferUsage","MissingBufferUsageError","MissingDownlevelFlags","MissingDownlevelFlags","MissingFeatures","MissingFeatures","MissingFeatures","MissingTextureUsageError","MultisampledDepthOrArrayLayer","MultisampledNotRenderAttachment","NegativeRange","None","NotMapped","NotMultipleOfBlockHeight","NotMultipleOfBlockWidth","Ok","OutOfBoundsOverrun","OutOfBoundsUnderrun","OutOfMemory","ParentDevice","QuerySet","QuerySetDescriptor","RenderPass","ResourceErrorIdent","ResourceType","Sampler","SamplerDescriptor","SamplerFilterErrorType","StagingBuffer","Success","Surface","TYPE","Texture","TextureClearMode","TextureDescriptor","TextureDimensionError","TextureErrorDimension","TextureView","TextureViewDescriptor","TextureViewDestroyError","TextureViewNotRenderableReason","Tlas","TlasDescriptor","TooManyArrayLayers","TooManyMipLevels","TooManyObjects","TooManyQueries","UnalignedOffset","UnalignedRange","UnalignedRangeSize","UnalignedSize","Usage","UsageMismatch","Valid","WidthNotMultipleOf","X","Y","Z","Zero","ZeroArrayLayerCount","ZeroCount","ZeroMipLevelCount","address_modes","anisotropy_clamp","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","callback","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compare","count","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device","device","device","device","device","device","device","device","dimension","dimension","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","error_ident","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_c","from_rust","get","host","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_equal","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","lod_max_clamp","lod_min_clamp","mag_filter","mapped_at_creation","max_instances","min_filter","mip_level_count","mipmap_filter","range","same_device","same_device_as","sample_count","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size","size","source","source","source","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_mode","update_mode","usage","usage","user_data","view_formats","end","index","index","max","min","offset","range_size","start","maximum","requested","count","maximum","anisotropic_clamp","filter_mode","filter_type","lod_max_clamp","lod_min_clamp","maximum","requested","depth","depth","dim","requested","requested","requested","requested_aspect","texture","texture","texture_format","total","total","view","view","clear_view","clear_views","is_color","block_height","block_width","dim","format","format","format","format","given","height","height","limit","multiple","multiple","width","width","BadStorageFormat","Binding","BindingError","BindingLayoutSource","Derived","Filtering","FilteringError","Float","InconsistentlyDerivedType","Input","InputError","Integer","Interface","InterfaceVar","InterpolationMismatch","InvalidResource","InvalidWorkgroupSize","Invisible","Missing","Missing","MissingEntryPoint","MultipleEntryPointsFound","NoEntryPointFound","NumericType","Provided","SamplingMismatch","StageError","StageIo","TooManyVaryings","UnsupportedTextureStorageAccess","WrongAddressSpace","WrongBufferSize","WrongSamplerComparison","WrongTextureClass","WrongTextureViewDimension","WrongType","WrongType","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_stage","check_texture_format","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","finalize_entry_point_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment_uses_dual_source_blending","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","new","new_derived","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","validate_color_attachment_bytes_per_sample","vertex_attribute","binding","binding","binding","buffer_size","dim","is_array","min_binding_size","shader","shader","current","current_total","error","error","limit","limit","location","sampler","texture","total","used","var"],"q":[[0,"wgpu_core"],[33,"wgpu_core::api"],[75,"wgpu_core::binding_model"],[613,"wgpu_core::binding_model::BindError"],[632,"wgpu_core::binding_model::CreateBindGroupError"],[670,"wgpu_core::binding_model::CreateBindGroupLayoutError"],[674,"wgpu_core::binding_model::CreatePipelineLayoutError"],[684,"wgpu_core::binding_model::PushConstantUploadError"],[696,"wgpu_core::command"],[1719,"wgpu_core::command::AttachmentErrorLocation"],[1721,"wgpu_core::command::ClearError"],[1734,"wgpu_core::command::ColorAttachmentError"],[1738,"wgpu_core::command::ComputeCommand"],[1754,"wgpu_core::command::ComputePassErrorInner"],[1759,"wgpu_core::command::DispatchError"],[1761,"wgpu_core::command::DrawError"],[1778,"wgpu_core::command::PassErrorScope"],[1781,"wgpu_core::command::QueryUseError"],[1788,"wgpu_core::command::RenderCommandError"],[1792,"wgpu_core::command::RenderPassErrorInner"],[1821,"wgpu_core::command::ResolveError"],[1830,"wgpu_core::command::TransferError"],[1852,"wgpu_core::command::bundle_ffi"],[1864,"wgpu_core::device"],[2110,"wgpu_core::device::RenderPassCompatibilityError"],[2123,"wgpu_core::device::queue"],[2246,"wgpu_core::device::resource"],[2268,"wgpu_core::device::trace"],[2352,"wgpu_core::device::trace::Action"],[2388,"wgpu_core::device::trace::Command"],[2425,"wgpu_core::error"],[2462,"wgpu_core::global"],[2654,"wgpu_core::hal_api"],[2656,"wgpu_core::hub"],[2701,"wgpu_core::id"],[2788,"wgpu_core::id::markers"],[3074,"wgpu_core::identity"],[3089,"wgpu_core::instance"],[3249,"wgpu_core::pipeline"],[3872,"wgpu_core::pipeline::ColorStateError"],[3874,"wgpu_core::pipeline::CreateRenderPipelineError"],[3898,"wgpu_core::pipeline::CreateShaderModuleError"],[3901,"wgpu_core::present"],[3984,"wgpu_core::present::ConfigureSurfaceError"],[3995,"wgpu_core::ray_tracing"],[4315,"wgpu_core::registry"],[4340,"wgpu_core::resource"],[5074,"wgpu_core::resource::BufferAccessError"],[5082,"wgpu_core::resource::CreateBufferError"],[5084,"wgpu_core::resource::CreateQuerySetError"],[5086,"wgpu_core::resource::CreateSamplerError"],[5091,"wgpu_core::resource::CreateTextureError"],[5093,"wgpu_core::resource::CreateTextureViewError"],[5107,"wgpu_core::resource::TextureClearMode"],[5110,"wgpu_core::resource::TextureDimensionError"],[5125,"wgpu_core::validation"],[5282,"wgpu_core::validation::BindingError"],[5291,"wgpu_core::validation::StageError"],[5303,"core::option"],[5304,"wgpu_types"],[5305,"core::fmt"],[5306,"core::fmt"],[5307,"core::any"],[5308,"serde::de"],[5309,"alloc::sync"],[5310,"core::fmt"],[5311,"serde::ser"],[5312,"core::error"],[5313,"alloc::string"],[5314,"core::clone"],[5315,"core::default"],[5316,"serde::de"],[5317,"core::fmt"],[5318,"wgpu_types"],[5319,"serde::ser"],[5320,"wgpu_types"],[5321,"naga::valid"],[5322,"core::ptr::non_null"],[5323,"core::ops::function"],[5324,"wgpu_types"],[5325,"wgpu_types::counters"],[5326,"core::marker"],[5327,"core::marker"],[5328,"wgpu_types"],[5329,"wgpu_types"],[5330,"wgpu_hal::dynamic::adapter"],[5331,"wgpu_hal::dynamic"],[5332,"wgpu_types"],[5333,"wgpu_types::counters"],[5334,"raw_window_handle"],[5335,"wgpu_hal::dynamic::instance"],[5336,"naga::front::wgsl::error"],[5337,"naga::error"],[5338,"naga::valid"],[5339,"bitflags::iter"],[5340,"bitflags::iter"],[5341,"rustc_hash"],[5342,"core::hash"],[5343,"wgpu_types"]],"d":["","","","","No value.","","Some value of type <code>T</code>.","The index of a queue submission.","","","","","","","","","Allocating resource ids, and tracking the resources they …","","","","","","","","","","","Presentation.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Describes a group of bindings and the resources to be …","","Bindable resource and the slot to bind it to.","Bind group layout.","Describes a <code>BindGroupLayout</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a pipeline layout.","","","Describes a group of bindings and the resources to be …","Bindable resource and the slot to bind it to.","","","Describes a pipeline layout.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bind groups that this pipeline uses. The first entry will …","Bind groups that this pipeline uses. The first entry will …","Slot for which binding provides resource. Corresponds to …","Slot for which binding provides resource. Corresponds to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The resources to bind to this bind group.","The resources to bind to this bind group.","Array of entries in this BindGroupLayout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Debug label of the bind group.","Debug label of the bind group.","Debug label of the bind group layout.","Debug label of the pipeline layout.","Debug label of the pipeline layout.","The <code>BindGroupLayout</code> that corresponds to this bind group.","The <code>BindGroupLayout</code> that corresponds to this bind group.","","","","Set of push constant ranges this pipeline uses. Each …","Set of push constant ranges this pipeline uses. Each …","Resource to attach to the binding","Resource to attach to the bindingescribes a depth/stencil attachment to a render pass.","Describes an attachment location in words.","","","","","","","","","","","","","","","","","Clear the output attachment with the clear color. Clearing …","Error encountered while attempting a clear.","","","","","A buffer of commands to be submitted to the GPU for …","The mutable state of a <code>CommandBuffer</code>.","","","","","","Error encountered when performing a compute pass.","Error encountered when performing a compute pass.","","","Error encountered while attempting to do a copy on a …","","","","","Error type returned from <code>RenderBundleEncoder::new</code> if the …","","","","","","","","","","","","","","","","Discards the content of the render target.","","","","","","","","","Error validating a draw call.","","","","","","","","","","","Error type returned from <code>RenderBundleEncoder::new</code> if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Do not clear output attachment.","Operation to perform to the output attachment at the start …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes an individual channel within a render pass, such …","","","","Describes the writing of timestamp values in a render or …","","","","","","","","","","","","","","Error encountered when dealing with queries","","","","","Error encountered while trying to use queries","","","","","Describes a <code>RenderBundleEncoder</code>.","Error encountered when finishing recording a render bundle.","","","Error encountered when encoding a render command. This is …","","Describes a color attachment to a render pass.","Describes a depth/stencil attachment to a render pass.","Describes the attachments of a render pass.","Error encountered when performing a render pass.","Error encountered when performing a render pass.","","Error encountered while trying to resolve a query.","","","","","","","","","","","","Set a range of push constants to values stored in …","","","","","","","","Store the result of the renderpass.","Operation to perform to the output attachment at the end …","","","","","","","","","Error encountered while attempting a data transfer.","","","","","","","","","","","","","","","","","","","","","","","","","","The copy aspect.","The copy aspect.","The index of the query set at which a start timestamp of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The buffer to be copied to/from.","","What operations will be performed on this color attachment.","","If load_op is <code>LoadOp::Clear</code>, the attachment will be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The color attachments of the render pass.","The formats of the color attachments that this render …","The color space of this texture.","","","","","What operations will be performed on the depth part of the …","What operations will be performed on the depth part of the …","Information about the depth attachment that this render …","The depth and stencil attachment of the render pass, if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The index of the query set at which an end timestamp of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Debug label of the render bundle encoder. This will show …","Debug label of the render bundle encoder.","","","The layout of the texture data in this buffer.","Operation to perform to the output attachment at the start …","The target mip level of the texture.","The target mip level of the texture.","If this render bundle will rendering to multiple array …","","Defines where the occlusion query results will be stored …","The base texel of the texture in the selected <code>mip_level</code>. …","The base texel of the texture in the selected <code>mip_level</code>.","","The premultiplication of this texture","The query set to write the timestamps to.","If true, the relevant channel is not changed by a …","Resolves all ids in a list of commands into the …","The view that will receive the resolved output if …","Sample count this render bundle is capable of rendering to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","What operations will be performed on the stencil part of …","What operations will be performed on the stencil part of …","Operation to perform to the output attachment at the end …","The texture to be copied to/from.","The texture to be copied to/from.","Defines where and when timestamp values will be written …","Defines where and when timestamp values will be written …he view to use as an attachment.","The view to use as an attachment.","The view to use as an attachment.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The byte offset within the push constant storage to write …","","","","","","The number of bytes to write. This must be a multiple of …","Index in <code>push_constant_data</code> of the start of the data to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","Safety","Safety","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a validator with the given validation flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Safety","Only use this function in contexts where there is no <code>Device</code>…","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label for the device.","","Hints for memory allocation strategies.","","","Specifies the features that are required by the device …","Specifies the limits that are required by the device …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A texture or buffer to be freed soon.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","Safety","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Structure describing a logical device. Some members are …","Returns the backend this device is using.","","","","Safety","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Don’t use this error type with thiserror’s #[…","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","Safety","","","","","","","Safety","","","","","","","","","Creates a compute pass.","Creates a render pass.","","","","","","","","","","","","","","","","","","","","","Get an ID of one of the bind group layouts. The ID adds a …","Safety","Assign <code>id_in</code> an error with the given <code>label</code>.","Safety","Safety","","Assign <code>id_in</code> an error with the given <code>label</code>.","Safety","Safety","","","","","","","Safety","","","","","","Create a shader module with the given <code>source</code>.","Safety","","","","","","","Safety","","","","Check <code>device_id</code> for freeable resources and completed …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Safety","Safety","","","","","Safety","Creates a new surface targeting the given display/window …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Poll all devices on all backends.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get an ID of one of the bind group layouts. The ID adds a …","","","","Safety","","","","","","","","","Safety","","","","Safety","","","","","","","","","","","","","","All the resources tracked by a <code>crate::global::Global</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An identifier for a wgpu object.","Marker trait used to determine which types uniquely …","","","","","The raw underlying representation of an identifier.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Safety","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Coerce the identifiers into its raw underlying …","Marker types for each resource.","","","","","","","","","","","","","Unzip a raw identifier into its components.","","","","Zip together an identifier and return its raw underlying …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Error when requesting a device from the adaptor","","","","Safety","Returns the backend this adapter is using.","","","","","","","","","","","","","","","","","","","","","","","","","","","Surface that is required to be presentable with the …","","Creates a new surface targeting the given display/window …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates that only a fallback adapter can be returned. …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","List of instances per backend.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Generates a set of backends from a comma separated list of …","Power preference for the adapter.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a compute pipeline.","","","","","","","","","","","","","","","","","","","","","Describes fragment processing in a render pipeline.","","","","Number of implicit bind groups derived at pipeline …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a programmable pipeline stage.","","","Describes a render (graphics) pipeline.","Describes a compute pipeline.","Describes fragment processing in a render pipeline.","Describes a programmable pipeline stage.","Describes a render (graphics) pipeline.","Describes the vertex process in a render pipeline.","","","","","","","","","","","","","","","","","","Describes how the vertex buffer is interpreted.","Describes the vertex process in a render pipeline.","How a render pipeline will retrieve attributes from a …","","","","","Get a flags value with all known bits set.","The stride, in bytes, between elements of this buffer.","The list of attributes which comprise a single vertex.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The format of any vertex buffers used with this pipeline.","The format of any vertex buffers used with this pipeline.","The pipeline cache to use when creating this pipeline.","The pipeline cache to use when creating this pipeline.","The pipeline cache to use when creating this pipeline.","The pipeline cache to use when creating this pipeline.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Specifies the values of pipeline-overridable constants in …","Specifies the values of pipeline-overridable constants in …","Whether all set bits in a source flags value are also set …","","","The effect of draw calls on the depth and stencil aspects …","The effect of draw calls on the depth and stencil aspects …","","","","","","","","","","","","","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","The name of the entry point in the compiled shader. The …","The name of the entry point in the compiled shader. The …","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The fragment processing state for this pipeline.","The fragment processing state for this pipeline.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","","","","","","","","","","","The byte size required to fit the last vertex in the …","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","Whether the buffer is indexed by vertex number or instance …","The compiled shader module for this stage.","The compiled shader module for this stage.","The multi-sampling properties of the pipeline.","The multi-sampling properties of the pipeline.","If the pipeline will be used with a multiview render pass, …","If the pipeline will be used with a multiview render pass, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The properties of the pipeline at the primitive assembly …","The properties of the pipeline at the primitive assembly …","The intersection of a source flags value with the …","","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","The compiled compute stage and its entry point.","The compiled compute stage and its entry point.","The compiled vertex stage and its entry point.","The compiled vertex stage and its entry point.","The compiled fragment stage and its entry point.","The compiled fragment stage and its entry point.","How often this vertex buffer is “stepped” forward.","The byte stride in the buffer between one attribute value …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The effect of draw calls on the color aspect of the output …","The effect of draw calls on the color aspect of the output …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The vertex processing state for this pipeline.","The vertex processing state for this pipeline.","Could the error have been avoided? That is, is there a …","Whether workgroup scoped memory will be initialized with …","Whether workgroup scoped memory will be initialized with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error encountered while attempting to do a copy on a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Mapping was aborted (by unmapping or destroying the buffer …","","","The buffer is already mapped.","","","","","","","","","","","The status code provided to the buffer mapping callback.","","","","The context is Lost.","","","","","","","","","A buffer that has been marked as destroyed and is staged …","","","","A texture that has been marked as destroyed and is staged …","","","","","","","","Contains the error value","An unknown error.","","","","","","","","The buffer is in an invalid state.","The range isn’t properly aligned.","","","","","","","","","","","","","","","","","","","The range isn’t fully contained in the buffer.","","","","","","","","","","Incompatible usage flags.","","","","","","Mapping was already requested.","","","","","","","","","","","AddressMode::ClampToBorder requires feature …","","","","","","","","","","Contains the success value","","","","","","","","","","","Describes a <code>Sampler</code>","","A temporary buffer, consumed by the command that uses it.","The Buffer is successfully mapped, <code>get_mapped_range</code> can be …","","","","","","","","","Describes a <code>TextureView</code>.","","","","","","","","","","","","","","","","","","","","","","","","How to deal with out of bounds accesses in the u (i.e. x) …","Must be at least 1. If this is not 1, all filter modes …","Border color to use when address_mode is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If this is enabled, this is a comparison sampler using the …","Total count of queries the set contains. Must not be zero. …","","","","","","","","","","","","","","","","","Dimensions of the texture.","The dimension of the texture view.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flags for the bottom level acceleration structure.","Flags for the bottom level acceleration structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Format of the texture.","Format of the texture view, or <code>None</code> for the same format as …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Safety","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns a string identifying this resource for logging and …","","","","","","","","","","","Debug label of a buffer. This will show up in graphics …","Debug label of the texture. This will show up in graphics …","Debug label for the query set.","Label for the bottom level acceleration structure.","Label for the top level acceleration structure.","Debug label of the texture view.","Debug label of the sampler.","Maximum level of detail (i.e. mip level) to use","Minimum level of detail (i.e. mip level) to use","How to filter the texture when it needs to be magnified …","Allows a buffer to be mapped immediately after they are …","Number of instances that can be stored in the acceleration …","How to filter the texture when it needs to be minified …","Mip count of texture. For a texture with no extra mips, …","How to filter between mip map levels","Range within the texture that is accessible via this view.","","","Sample count of texture. If this is not 1, texture must …","","","","","","","","Size of a buffer, in bytes.","Size of the texture. All components must be greater than …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Kind of query that this query set should contain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update mode for the bottom level acceleration structure.","Update mode for the bottom level acceleration structure.","Usages of a buffer. If the buffer is used in any way that …","Allowed usages of the texture. If used in other ways, the …","","Specifies what view formats will be allowed when calling …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The binding layout is derived from the pipeline layout.","","","","","","","","","","","","","","","","","","","","The binding layout is provided by the user in BGLs.","","Errors produced when validating a programmable stage of a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return true if the fragment <code>format</code> is covered by the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,201,0,201,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,28,29,12,0,0,0,0,0,0,0,0,14,14,14,14,0,14,0,0,14,0,14,28,29,28,29,0,14,13,0,0,0,14,14,13,14,23,14,30,17,17,13,0,13,31,14,23,31,14,14,14,14,14,13,0,23,30,14,14,12,12,23,24,14,23,12,24,15,0,0,23,0,0,0,0,0,0,14,12,17,28,29,28,29,17,14,15,17,14,12,12,17,28,29,28,29,24,13,23,23,24,14,30,17,24,14,14,14,25,41,18,19,12,13,14,15,16,17,18,19,20,21,22,34,23,24,25,41,37,26,27,28,29,30,42,38,31,32,12,13,14,15,16,17,18,19,20,21,22,34,23,24,25,41,37,26,27,28,29,30,42,38,31,32,32,27,26,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,32,16,18,20,22,25,26,28,34,37,38,12,13,14,15,16,17,18,19,20,21,22,34,23,24,25,41,37,26,27,28,29,30,42,38,31,32,34,37,38,20,21,22,25,26,32,25,25,25,25,26,26,26,26,32,32,32,32,12,12,13,13,14,14,15,15,16,16,17,18,19,20,21,22,34,23,23,24,24,25,41,37,26,27,28,29,30,30,42,38,31,31,32,32,12,12,12,13,13,14,14,14,14,14,14,15,16,17,18,19,20,21,22,34,23,23,23,23,24,25,41,37,26,27,28,29,30,42,38,31,31,32,32,25,26,12,13,14,15,16,17,18,19,20,21,22,34,23,24,25,41,37,26,27,28,29,30,42,38,31,32,16,34,37,38,20,21,22,25,41,20,21,16,26,27,25,41,18,19,18,20,22,25,26,28,32,26,27,12,13,14,23,31,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,12,13,14,15,16,23,24,30,31,32,12,13,14,15,16,17,18,19,20,21,22,34,23,24,25,41,37,26,27,28,29,30,42,38,31,32,12,13,14,15,16,17,18,19,20,21,22,34,23,24,25,41,37,26,27,28,29,30,42,38,31,32,12,13,14,15,16,17,18,19,20,21,22,34,23,24,25,41,37,26,27,28,29,30,42,38,31,32,12,13,14,15,16,17,18,19,20,21,22,34,23,24,25,41,37,26,27,28,29,30,42,38,31,32,16,372,373,372,373,374,373,374,374,374,372,372,373,374,373,374,373,374,373,374,375,376,377,378,379,380,379,381,382,383,384,385,386,387,388,377,375,376,378,379,380,386,383,387,384,381,382,380,377,385,388,386,387,388,383,382,384,381,389,390,389,390,391,392,392,393,394,393,394,391,393,394,395,396,397,398,398,395,396,395,396,398,398,397,72,72,0,0,82,82,89,65,89,63,82,63,67,62,66,73,60,73,86,89,74,0,80,57,82,0,0,0,0,60,0,0,0,0,0,86,86,0,86,0,86,86,0,80,85,58,60,63,67,71,82,87,60,63,71,72,82,55,75,63,65,89,0,65,82,88,89,0,88,0,63,71,82,87,89,65,89,89,0,86,0,0,0,62,66,82,82,67,67,67,72,66,63,82,82,65,89,66,55,86,55,86,82,82,86,81,62,86,63,82,63,82,82,60,63,71,82,87,55,86,57,86,67,82,86,60,60,86,82,67,67,74,0,55,86,82,82,66,60,63,67,73,86,60,63,82,86,71,63,82,55,66,82,62,66,60,67,86,66,88,88,82,82,60,55,70,60,72,82,89,0,63,82,0,0,70,65,89,63,82,63,82,63,82,63,67,65,89,0,73,89,63,82,0,0,0,0,0,0,0,0,82,0,0,0,0,0,0,0,71,0,63,67,82,86,65,89,89,89,65,89,89,65,89,89,89,89,89,0,85,75,0,82,86,86,82,70,81,81,87,0,60,67,86,86,86,86,86,86,86,60,63,82,58,67,66,86,86,82,71,72,66,67,66,65,89,200,399,84,97,98,54,93,56,91,57,58,94,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,100,79,80,81,82,83,84,85,86,87,55,88,89,97,98,54,93,56,91,57,58,94,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,100,79,80,81,82,83,84,85,86,87,55,88,89,199,0,77,54,76,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,55,88,89,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,55,88,89,79,56,399,56,61,68,79,78,100,56,79,56,91,65,68,74,75,76,77,78,84,93,94,97,98,54,93,56,91,57,58,94,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,100,79,80,81,82,83,84,85,86,87,55,88,89,93,94,91,84,56,70,74,75,76,77,78,79,84,56,56,56,56,70,70,70,70,74,74,74,74,75,75,75,75,76,76,76,76,84,84,84,84,97,98,56,91,57,57,58,58,94,59,59,60,60,61,62,62,63,63,64,64,65,66,66,67,67,68,70,71,71,72,72,73,73,74,75,76,77,78,100,79,80,80,81,81,82,82,83,83,84,85,86,86,87,87,55,55,88,89,89,97,98,54,93,56,91,57,57,58,58,94,59,60,60,60,60,60,60,61,62,62,62,63,63,63,63,63,63,63,63,63,63,63,63,64,65,66,66,66,67,67,67,67,67,67,68,70,70,71,71,71,71,71,71,71,71,72,72,73,73,74,75,76,77,78,100,79,80,81,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,83,84,85,86,86,86,86,86,87,87,87,87,87,87,55,55,55,55,55,88,89,59,68,56,74,75,97,98,54,93,56,91,57,58,94,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,100,79,80,81,82,83,84,85,86,87,55,88,89,97,98,93,94,210,56,61,79,199,76,200,399,56,91,79,200,399,91,399,84,76,65,77,56,59,64,83,56,91,65,68,74,75,76,77,78,84,91,57,58,59,60,62,63,64,66,67,71,72,73,82,83,86,87,55,78,100,76,200,399,61,79,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,55,88,89,57,58,59,60,62,63,64,66,67,71,72,73,80,81,82,83,86,87,55,89,97,98,54,93,56,91,57,58,94,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,100,79,80,81,82,83,84,85,86,87,55,88,89,93,97,98,54,93,56,91,57,58,94,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,100,79,80,81,82,83,84,85,86,87,55,88,89,93,97,98,54,93,56,91,57,58,94,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,100,79,80,81,82,83,84,85,86,87,55,88,89,97,98,54,93,56,91,57,58,94,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,100,79,80,81,82,83,84,85,86,87,55,88,89,77,78,100,68,68,68,400,400,401,401,402,402,401,403,403,404,404,405,405,403,404,406,406,407,407,408,409,410,411,408,410,411,408,412,409,413,414,413,414,412,412,415,415,416,416,415,417,417,418,419,420,421,420,421,422,423,423,419,418,418,422,423,421,423,422,424,425,424,426,426,427,428,427,429,429,430,431,430,431,432,432,433,433,434,435,436,436,435,434,437,438,434,435,432,432,433,433,439,439,440,437,438,435,436,436,440,437,438,441,441,441,442,441,442,442,441,441,443,444,445,446,447,448,449,446,448,443,444,445,450,447,451,446,448,449,446,448,448,450,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,0,0,0,0,0,0,0,0,45,0,0,0,102,102,102,102,45,45,0,0,45,123,0,45,0,122,0,0,123,122,131,132,133,452,219,122,123,102,130,124,45,44,43,125,131,132,133,452,219,122,123,102,130,124,45,44,43,125,131,132,122,123,102,124,45,44,43,125,122,123,102,124,45,44,43,125,0,130,123,124,45,125,130,131,132,133,452,219,122,123,102,130,124,45,44,43,125,131,132,123,123,123,123,123,122,122,123,102,102,124,124,45,45,44,44,43,43,125,131,132,133,452,219,122,122,123,102,130,124,45,45,44,43,125,133,45,133,0,219,125,131,132,133,452,219,122,123,102,130,124,45,44,43,125,182,130,182,0,0,182,182,0,219,125,123,124,45,125,122,45,130,122,123,102,124,45,44,43,125,122,102,124,45,44,43,0,131,132,133,452,219,122,123,102,130,124,45,44,43,125,131,132,133,452,219,122,123,102,130,124,45,44,43,125,131,132,133,452,219,122,123,102,130,124,45,44,43,125,131,132,133,452,219,122,123,102,130,124,45,44,43,125,132,453,454,455,456,453,454,455,456,453,453,454,455,456,137,137,141,141,136,137,141,136,137,136,0,136,137,0,0,141,141,137,0,0,137,137,0,136,137,137,137,138,145,146,141,136,137,138,145,146,141,136,137,145,136,137,136,137,138,138,138,145,146,141,136,137,138,141,136,136,137,137,138,145,146,141,136,136,136,136,136,136,137,137,137,137,137,137,137,137,146,146,138,138,145,146,141,136,137,138,138,136,137,138,136,137,136,137,138,145,146,141,136,137,138,145,146,141,136,137,138,145,146,141,136,137,138,145,146,141,136,137,145,138,138,138,138,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,164,164,164,164,0,163,164,164,164,164,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,0,163,163,163,163,163,163,164,164,163,164,164,164,164,163,163,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,164,457,458,459,460,461,457,462,459,463,464,465,458,466,467,468,462,469,459,463,464,465,458,466,460,467,468,463,464,461,462,469,460,460,461,467,461,470,471,472,473,474,474,475,476,477,478,479,480,475,471,479,474,481,481,474,475,476,477,478,479,475,476,477,478,475,474,480,471,471,470,471,472,473,0,0,0,167,165,167,165,165,165,167,165,165,167,167,165,165,167,167,165,167,165,167,165,167,165,167,165,167,165,167,165,167,165,167,165,167,165,0,0,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,241,172,241,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,241,172,172,241,241,241,241,241,241,172,241,172,172,172,241,241,172,172,172,172,241,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,241,241,172,172,172,172,172,172,172,172,172,241,172,241,172,241,172,241,0,482,0,0,243,243,243,104,243,104,243,243,243,243,243,104,243,243,243,243,243,243,243,104,243,104,104,243,243,243,243,243,243,243,243,243,243,243,243,104,243,104,243,104,243,104,243,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,264,265,264,265,264,265,264,265,264,265,264,265,264,265,264,265,264,265,264,264,264,264,265,265,265,265,265,264,265,265,264,265,264,265,265,192,265,191,265,0,264,265,264,265,264,265,264,265,264,265,264,265,264,265,264,265,264,265,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,268,269,286,287,288,289,290,291,292,293,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,268,269,286,287,288,289,290,291,292,293,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,268,269,286,287,288,289,290,291,292,293,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,268,269,286,287,288,289,290,291,292,293,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,268,269,286,287,288,289,290,291,292,293,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,268,269,286,287,288,289,290,291,292,293,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,268,269,286,287,288,289,290,291,292,293,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,268,269,286,287,288,289,290,291,292,293,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,268,269,286,287,288,289,290,291,292,293,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,268,269,286,287,288,289,290,291,292,293,0,294,294,294,294,294,294,294,294,294,294,294,294,294,294,0,246,0,185,0,246,0,0,185,185,251,0,0,0,0,255,185,242,295,297,295,296,242,255,185,251,246,297,295,296,242,255,185,251,246,296,255,185,251,246,296,255,185,251,246,250,295,242,242,296,185,251,297,297,295,296,242,255,185,251,246,295,297,242,295,242,296,296,255,255,185,185,251,251,246,246,250,297,295,296,242,255,185,185,185,251,246,297,297,297,295,295,295,242,297,295,296,242,255,185,251,246,295,295,242,295,242,0,250,297,297,242,242,296,185,251,185,297,296,255,185,251,246,296,255,185,251,246,297,295,296,242,255,185,251,246,297,295,296,242,255,185,251,246,297,295,296,242,255,185,251,246,297,295,296,242,255,185,251,246,303,306,226,226,226,0,0,0,226,317,0,0,0,0,226,0,233,220,160,226,317,317,314,314,315,314,315,315,0,233,220,226,0,0,314,220,160,226,233,314,220,226,314,315,226,226,314,220,226,233,160,226,306,306,231,226,317,233,306,0,0,0,220,226,226,0,0,306,0,0,0,0,0,0,0,303,226,226,0,0,0,220,226,226,226,226,317,226,226,317,233,160,0,0,0,226,303,303,231,303,308,308,303,303,303,303,303,303,303,303,231,230,318,233,304,305,306,218,307,220,319,160,159,308,309,310,311,312,225,313,158,314,315,226,303,316,320,317,231,230,318,233,304,305,306,218,307,220,319,160,159,308,309,310,311,312,225,313,158,314,315,226,303,316,320,317,309,310,218,307,225,313,230,233,304,305,306,218,307,220,160,308,309,310,311,312,225,313,158,314,315,226,303,316,317,230,233,304,305,306,218,307,220,160,308,309,310,311,312,225,313,158,314,315,226,303,316,317,303,304,305,303,158,316,225,313,230,304,218,308,309,311,225,158,318,319,159,320,303,231,230,318,233,304,305,306,218,307,220,319,160,159,308,309,310,311,312,225,313,158,314,315,226,303,316,320,317,318,319,159,320,303,304,305,303,317,303,303,303,303,317,317,317,317,303,158,230,318,233,233,304,305,306,306,218,307,220,220,319,160,160,159,308,309,310,311,312,225,313,158,314,314,315,315,226,226,303,303,303,303,303,316,320,317,317,225,313,231,230,318,233,233,233,233,233,304,305,306,306,306,218,307,220,220,220,220,220,220,319,160,160,160,160,159,308,309,310,311,312,225,313,158,314,315,226,226,226,226,226,226,226,226,303,316,320,317,303,303,303,303,303,303,303,303,303,303,231,230,318,233,304,305,306,218,307,220,319,160,159,308,309,310,311,312,225,313,158,314,315,226,303,316,320,317,303,303,303,303,303,318,319,159,320,230,218,307,225,313,158,316,218,307,225,313,316,304,305,225,313,225,313,303,225,313,303,230,304,218,308,309,311,225,158,303,230,233,306,220,160,226,218,307,309,310,311,312,308,316,303,303,303,311,312,230,233,304,305,306,218,307,220,160,308,309,310,311,312,225,313,158,314,315,226,303,316,317,233,306,220,160,314,315,226,317,303,231,230,318,233,304,305,306,218,307,220,319,160,159,308,309,310,311,312,225,313,158,314,315,226,303,316,320,317,231,230,318,233,304,305,306,218,307,220,319,160,159,308,309,310,311,312,225,313,158,314,315,226,303,316,320,317,231,230,318,233,304,305,306,218,307,220,319,160,159,308,309,310,311,312,225,313,158,314,315,226,303,316,320,317,303,231,230,318,233,304,305,306,218,307,220,319,160,159,308,309,310,311,312,225,313,158,314,315,226,303,316,320,317,225,313,317,304,305,483,483,484,485,486,487,488,489,490,491,484,491,492,489,490,491,493,493,484,485,486,487,492,494,488,494,495,495,495,257,0,257,253,257,253,253,253,257,253,0,257,253,0,0,257,253,253,253,253,253,253,253,257,253,299,256,257,253,299,256,257,253,257,253,257,253,299,256,257,257,253,253,299,256,257,257,253,253,253,253,299,256,257,253,299,256,257,253,299,256,299,256,257,253,257,253,257,253,299,256,257,253,299,256,257,253,299,256,257,253,299,256,496,497,498,499,500,500,496,497,498,499,500,0,0,193,144,0,0,0,216,237,0,216,237,193,193,193,193,193,193,193,193,193,193,142,144,193,193,193,193,193,193,193,144,193,216,193,193,216,237,193,193,216,193,0,0,193,193,0,0,0,0,0,0,501,330,193,193,237,142,144,144,0,0,194,335,331,332,501,194,195,216,237,193,142,144,334,196,335,329,330,331,332,333,501,194,195,216,237,193,142,144,334,196,335,329,330,331,332,333,216,237,193,142,144,196,329,330,331,332,333,216,237,193,142,144,196,329,330,331,332,333,335,332,196,329,330,331,332,333,501,194,195,216,237,193,142,144,334,196,335,329,330,331,332,333,334,329,216,216,237,237,193,193,142,142,144,144,334,196,335,329,330,331,332,333,501,194,195,216,216,216,237,237,237,193,193,193,142,144,334,196,335,329,330,331,332,333,194,331,334,329,334,329,196,196,195,333,501,194,195,216,237,193,142,144,334,196,335,329,330,331,332,333,195,333,335,332,196,329,330,331,332,333,334,329,216,237,193,195,196,333,216,237,193,142,144,196,329,330,331,332,333,216,237,193,142,144,335,332,334,329,334,329,501,194,195,216,237,193,142,144,334,196,335,329,330,331,332,333,501,194,195,216,237,193,142,144,334,196,335,329,330,331,332,333,501,194,195,216,237,193,142,144,334,196,335,329,330,331,332,333,501,194,195,216,237,193,142,144,334,196,335,329,330,331,332,333,334,329,334,329,0,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,352,207,188,352,143,340,340,0,0,0,0,0,354,0,0,0,0,0,352,0,0,0,0,213,0,0,0,0,143,262,0,0,143,207,213,262,229,224,340,190,352,143,0,0,262,339,207,151,352,352,229,262,262,213,262,262,262,213,213,213,229,213,229,229,213,213,213,262,352,143,262,188,0,339,213,262,207,213,352,213,0,339,341,143,352,143,207,341,340,341,143,0,207,213,213,229,224,0,339,213,143,354,143,339,339,190,143,143,262,0,0,0,354,0,0,0,0,0,0,352,354,502,0,0,0,0,0,0,0,0,0,0,0,262,262,229,224,143,143,143,207,340,207,151,339,338,338,338,339,262,224,262,227,227,227,355,151,337,352,353,189,143,47,49,48,46,150,207,347,139,348,354,153,349,338,339,213,260,340,342,262,263,227,343,341,229,224,344,188,345,346,350,355,151,337,352,353,189,143,47,49,48,46,150,207,347,139,348,354,153,349,338,339,213,260,340,342,262,263,227,343,341,229,224,344,188,345,346,350,355,189,151,337,143,47,49,48,46,207,338,339,213,260,340,262,263,227,341,229,224,188,151,337,143,47,49,48,46,207,338,339,213,260,340,262,263,227,341,229,224,188,227,223,260,337,143,47,48,46,260,227,336,150,153,342,343,344,345,346,211,260,355,151,337,352,353,189,143,47,49,48,46,150,207,347,139,348,354,153,349,338,339,213,260,340,342,262,263,227,343,341,229,224,344,188,345,346,350,150,347,348,153,349,342,343,344,345,346,350,260,227,260,260,260,260,351,214,235,337,337,352,353,189,143,143,47,47,49,49,48,48,46,46,150,207,207,347,139,348,354,153,349,338,339,339,213,213,260,340,340,342,262,262,263,263,227,343,341,229,229,224,224,344,188,188,345,346,350,211,260,355,151,337,352,353,189,143,143,143,143,143,47,49,48,46,150,207,207,207,207,347,139,348,354,153,349,338,339,213,213,213,213,213,260,340,342,262,262,262,262,263,227,343,341,229,229,229,224,224,224,344,188,188,345,346,350,353,353,151,189,355,151,337,352,353,189,143,47,49,48,46,150,207,347,139,348,354,153,349,338,339,213,260,340,342,262,263,227,343,341,229,224,344,188,345,346,350,336,351,150,347,153,349,342,343,344,345,346,350,206,211,223,214,235,260,227,227,227,227,206,235,227,211,227,260,336,336,211,337,143,47,48,46,260,227,206,211,143,207,213,262,229,224,188,151,337,143,47,49,48,46,207,338,339,213,260,340,262,263,227,341,229,224,188,337,143,47,49,48,46,207,339,213,340,262,263,229,224,188,355,151,337,352,353,189,143,47,49,48,46,150,207,347,139,348,354,153,349,338,339,213,260,340,342,262,263,227,343,341,229,224,344,188,345,346,350,355,151,337,352,353,189,143,47,49,48,46,150,207,347,139,348,354,153,349,338,339,213,260,340,342,262,263,227,343,341,229,224,344,188,345,346,350,223,355,151,337,352,353,189,143,47,49,48,46,150,207,347,139,348,354,153,349,338,339,213,260,340,342,262,263,227,343,341,229,224,344,188,345,346,350,355,151,337,352,353,189,143,47,49,48,46,150,207,347,139,348,354,153,349,338,339,213,260,340,342,262,263,227,343,341,229,224,344,188,345,346,350,214,235,206,211,355,211,503,504,505,505,504,506,507,503,508,508,509,509,510,510,510,511,511,512,512,513,514,515,516,517,515,518,519,520,518,516,517,519,520,521,522,522,523,524,525,524,523,526,527,525,523,527,525,526,527,524,526,366,326,0,0,357,326,0,367,366,326,0,367,0,0,368,326,326,366,366,368,326,326,326,0,357,368,0,0,326,366,366,366,366,366,366,366,368,357,364,365,356,366,367,368,326,357,364,365,356,366,367,368,326,356,0,364,365,366,367,368,326,364,365,366,367,368,326,357,364,365,356,366,367,368,326,356,364,364,365,365,356,366,366,367,367,368,368,326,326,356,357,364,365,356,366,367,368,326,326,357,364,365,356,366,367,368,326,356,357,326,364,365,366,367,368,326,364,365,366,367,368,326,357,364,365,356,366,367,368,326,357,364,365,356,366,367,368,326,365,357,364,365,356,366,367,368,326,357,364,365,356,366,367,368,326,0,365,528,529,530,531,529,529,531,528,530,532,532,533,534,532,535,534,533,533,532,535,534],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]],3],[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,4],[5,5],[6,6],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,8],[[10,[7,9]]]],[[5,8],[[10,[7,9]]]],[[6,8],[[10,[7,9]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],0,0,[-1,[[10,[18]]],33],[-1,[[10,[20]]],33],[-1,[[10,[22]]],33],[-1,[[10,[25]]],33],[-1,[[10,[26]]],33],[-1,[[10,[28]]],33],[34,[[36,[35]]]],[37,[[36,[35]]]],[38,[[36,[35]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,7],[37,7],[38,7],0,0,0,[[25,25],39],[[26,26],39],[[32,32],39],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[12,8],40],[[12,8],40],[[13,8],40],[[13,8],40],[[14,8],40],[[14,8],40],[[15,8],40],[[15,8],40],[[16,8],40],[[16,8],40],[[17,8],40],[[18,8],40],[[19,8],40],[[20,8],40],[[21,8],40],[[22,8],40],[[34,8],40],[[23,8],40],[[23,8],40],[[24,8],40],[[24,8],40],[[25,8],40],[[41,8],40],[[37,8],40],[[26,8],40],[[27,8],40],[[28,8],40],[[29,8],40],[[30,8],40],[[30,8],40],[[42,8],40],[[38,8],40],[[31,8],40],[[31,8],40],[[32,8],40],[[32,8],40],[43,12],[44,12],[-1,-1,[]],[-1,-1,[]],[45,13],[46,14],[47,14],[45,14],[48,14],[49,14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[44,23],[-1,-1,[]],[46,23],[45,23],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[46,31],[-1,-1,[]],0,[[25,-1],7,50],[[26,-1],7,50],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[34,1],[37,1],[38,1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[18,-1],10,51],[[20,-1],10,51],[[22,-1],10,51],[[25,-1],10,51],[[26,-1],10,51],[[28,-1],10,51],0,0,0,[12,[[2,[52]]]],[13,[[2,[52]]]],[14,[[2,[52]]]],[23,[[2,[52]]]],[31,[[2,[52]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[54,[[10,[7,55]]]],0,[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[[[68,[-1]]],[[68,[-1]]],69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[[[76,[-1]]],[[76,[-1]]],69],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[55,55],[88,88],[89,89],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],0,0,0,[[],56],[[],61],[[],[[68,[-1]]],90],[[],79],0,0,0,0,[-1,[[10,[56]]],33],[-1,[[10,[91]]],33],[-1,[[10,[65]]],33],[-1,[[10,[[68,[-2]]]]],33,92],[-1,[[10,[74]]],33],[-1,[[10,[75]]],33],[-1,[[10,[[76,[-2]]]]],33,92],[-1,[[10,[77]]],33],[-1,[[10,[78]]],33],[-1,[[10,[84]]],33],[93,[[36,[35]]]],[94,[[36,[35]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[93,7],[94,7],[95,91],0,[[56,56],39],[[70,70],39],[[74,74],39],[[75,75],39],[[[76,[-1]],[76,[-1]]],39,96],[[77,77],39],[[78,78],39],[[79,79],39],[[84,84],39],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[97,8],40],[[98,8],40],[[56,8],40],[[91,8],40],[[57,8],40],[[57,8],40],[[58,8],40],[[58,8],40],[[94,8],40],[[59,8],40],[[59,8],40],[[60,8],40],[[60,8],40],[[61,8],40],[[62,8],40],[[62,8],40],[[63,8],40],[[63,8],40],[[64,8],40],[[64,8],40],[[65,8],40],[[66,8],40],[[66,8],40],[[67,8],40],[[67,8],40],[[[68,[-1]],8],40,99],[[70,8],40],[[71,8],40],[[71,8],40],[[72,8],40],[[72,8],40],[[73,8],40],[[73,8],40],[[74,8],40],[[75,8],40],[[[76,[-1]],8],40,99],[[77,8],40],[[78,8],40],[[100,8],40],[[79,8],40],[[80,8],40],[[80,8],40],[[81,8],40],[[81,8],40],[[82,8],40],[[82,8],40],[[83,8],40],[[83,8],40],[[84,8],40],[[85,8],40],[[86,8],40],[[86,8],40],[[87,8],40],[[87,8],40],[[55,8],40],[[55,8],40],[[88,8],40],[[89,8],40],[[89,8],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[81,57],[-1,-1,[]],[-1,-1,[]],[48,58],[-1,-1,[]],[-1,-1,[]],[46,60],[-1,-1,[]],[55,60],[47,60],[48,60],[45,60],[-1,-1,[]],[-1,-1,[]],[32,62],[[[101,[0]]],62],[55,63],[46,63],[44,63],[62,63],[43,63],[72,63],[30,63],[48,63],[24,63],[-1,-1,[]],[45,63],[47,63],[-1,-1,[]],[-1,-1,[]],[[[101,[0]]],66],[32,66],[-1,-1,[]],[49,67],[102,67],[47,67],[24,67],[-1,-1,[]],[48,67],[-1,-1,[]],[-1,-1,[]],[103,70],[46,71],[45,71],[72,71],[44,71],[55,71],[48,71],[-1,-1,[]],[73,71],[45,72],[-1,-1,[]],[-1,-1,[]],[47,73],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[44,82],[66,82],[102,82],[72,82],[55,82],[-1,-1,[]],[45,82],[46,82],[30,82],[49,82],[47,82],[48,82],[43,82],[81,82],[67,82],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[47,86],[43,86],[-1,-1,[]],[60,86],[49,86],[45,87],[48,87],[55,87],[-1,-1,[]],[46,87],[86,87],[44,55],[81,55],[-1,-1,[]],[45,55],[46,55],[-1,-1,[]],[-1,-1,[]],[45,59],0,[[56,-1],7,50],[[74,-1],7,50],[[75,-1],7,50],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[97,[[2,[1]]]],[98,[[2,[1]]]],[93,1],[94,1],0,0,0,0,0,0,0,0,0,[[56,95,[2,[[0,[0]]]]],[[10,[91,57]]]],0,0,0,[91,95],0,0,0,[[104,[105,[65]]],[[10,[[106,[0]],64]]]],0,0,0,0,0,[[56,-1],10,51],[[91,-1],10,51],[[65,-1],10,51],[[[68,[-1]],-2],10,107,51],[[74,-1],10,51],[[75,-1],10,51],[[[76,[-1]],-2],10,107,51],[[77,-1],10,51],[[78,-1],10,51],[[84,-1],10,51],[[91,108,109,110,[2,[111]]],7],[57,[[2,[52]]]],[58,[[2,[52]]]],[59,[[2,[52]]]],[60,[[2,[52]]]],[62,[[2,[52]]]],[63,[[2,[52]]]],[64,[[2,[52]]]],[66,[[2,[52]]]],[67,[[2,[52]]]],[71,[[2,[52]]]],[72,[[2,[52]]]],[73,[[2,[52]]]],[82,[[2,[52]]]],[83,[[2,[52]]]],[86,[[2,[52]]]],[87,[[2,[52]]]],[55,[[2,[52]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[93,[[10,[[112,[54]],46]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[93,[[10,[54,46]]]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[91,113,113,113,113],7],[[91,113,113,113,114,113],7],[[91,108,110],7],[[91,108,110],7],[[91,115],7],[91,7],[[91,115],7],[[91,113,[2,[116]],117,118],7],[[91,108,109,110,[2,[111]]],7],[[91,119],7],[[91,120,113,113,121],7],[[91,113,108,110,[2,[111]]],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[122,122],[123,123],[102,102],[124,124],[45,45],[44,44],[43,43],[125,125],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[126,127,128],129],[[],130],[-1,[[10,[123]]],33],[-1,[[10,[124]]],33],[-1,[[10,[45]]],33],[-1,[[10,[125]]],33],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[131,7],[132,7],[[123,123],39],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[122,8],40],[[122,8],40],[[123,8],40],[[102,8],40],[[102,8],40],[[124,8],[[10,[7,9]]]],[[124,8],40],[[45,8],40],[[45,8],40],[[44,8],40],[[44,8],40],[[43,8],40],[[43,8],40],[[125,8],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[45,122],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[101,[124]]],45],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[132,133],[134,45],[135,133],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[123,-1],10,51],[[124,-1],10,51],[[45,-1],10,51],[[125,-1],10,51],[122,[[2,[52]]]],[45,[[2,[52]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[136,136],[137,137],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[138,111],[[10,[[7,[139,[140,[121]]]],136]]]],[138,[[36,[35]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[138,7],[[141,8],40],[[136,8],40],[[136,8],40],[[137,8],40],[[137,8],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[46,136],[45,136],[-1,-1,[]],[86,136],[48,136],[60,136],[55,137],[142,137],[-1,-1,[]],[143,137],[46,137],[48,137],[144,137],[45,137],[145,146],[[[101,[147]]],146],[138,148],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[138,1],[[138,146],[[2,[149]]]],[136,[[2,[52]]]],[137,[[2,[52]]]],[[138,[105,[[36,[93]]]]],[[10,[149,[7,[149,137]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,53,[]],[-1,53,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],0,[[138,[151,[150]],152,111],[[10,[7,136]]]],[[138,[151,[150]],110,[105,[121]]],[[10,[7,136]]]],[[138,[151,[150]],110,139],[[10,[7,136]]]],[[138,[154,[[151,[153]]]],[105,[121]],155,156],[[10,[7,136]]]],0,[35,157],[-1,-2,[],[]],[-1,-2,[],[]],[35,[[10,[7,45]]]],[[[36,[35]],158],[[10,[[36,[159]],160]]]],[-1,-2,[],[]],[35,7],[[35,8],40],[-1,-1,[]],[35,[[2,[161]]]],[35,162],[35,[[2,[[36,[138]]]]]],[[35,134],45],[-1,-2,[],[]],[35,39],[35,1],[[35,[36,[138]]],7],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[163]]],33],[-1,[[10,[164]]],33],[-1,-2,[],[]],[-1,-2,[],[]],[[163,8],40],[[164,8],40],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[163,-1],10,51],[[164,-1],10,51],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[165,165],[[-1,-2],7,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[165,[[101,[166]]]],[[167,8],40],[[167,8],40],[[165,8],[[10,[7,9]]]],[[165,8],[[10,[7,9]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-2,[[2,[165]]],[52,168,169],[[171,[],[[170,[-1]]]]]],[167,[[2,[52]]]],[165,[[2,[52]]]],0,[-1,-2,[],[]],[-1,53,[]],[-1,53,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],0,0,[[172,173,-2],-1,[],[[147,[2],[[174,[-1]]]]]],[[172,173],175],[[172,173],7],[[172,173],126],[[172,173],176],[[172,173],177],[[172,173,178],179],[[172,173,180],39],[[172,173],181],[[172,173,182,[2,[183]],[2,[95]],[2,[184]]],[[10,[[7,[95,184]],185]]]],[[172,116],7],[[172,186],7],[[172,187],[[10,[7,188]]]],[[172,187],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[172,108,-2],-1,[],[[147,[2],[[174,[-1]]]]]],[[172,108],[[10,[7,188]]]],[[172,108],7],[[172,108,110,[2,[110]]],[[10,[[7,[[140,[121]],152]],143]]]],[[172,108,110,[2,[110]],189],[[10,[149,143]]]],[[172,108],190],[[172,191],7],[[172,192,-2],-1,[],[[147,[2],[[174,[-1]]]]]],[[172,192,-1,-2],[[10,[7,193]]],[[166,[],[[170,[194]]]]],[[166,[],[[170,[195]]]]]],[[172,192,-1,-2],[[10,[7,193]]],[[166,[],[[170,[194]]]]],[[166,[],[[170,[196]]]]]],[[172,192,108,110,[2,[110]]],[[10,[7,60]]]],[[172,192,197,198],[[10,[7,60]]]],[[172,192,108,110,108,110,110],[[10,[7,87]]]],[[172,192,199,200,156],[[10,[7,87]]]],[[172,192,200,199,156],[[10,[7,87]]]],[[172,192,200,200,156],[[10,[7,87]]]],[[172,192,61],[[7,[97,[2,[55]]]]]],[[172,192,79],[[7,[98,[2,[55]]]]]],[[172,192],7],[[172,192,[202,[201]]],[[7,[191,[2,[55]]]]]],[[172,192,1],[[10,[7,55]]]],[[172,192],[[10,[7,55]]]],[[172,192,1],[[10,[7,55]]]],[[172,192,203,113,113,108,110],[[10,[7,71]]]],[[172,192,203,113],[[10,[7,71]]]],[[172,97,203,113],[[10,[7,64]]]],[[172,97,113,113,113],[[10,[7,64]]]],[[172,97,108,110],[[10,[7,64]]]],[[172,97],[[10,[7,64]]]],[[172,97],[[10,[7,64]]]],[[172,97,1,113],[[10,[7,64]]]],[[172,97],[[10,[7,64]]]],[[172,97,1,113],[[10,[7,64]]]],[[172,97,113,[2,[116]],[105,[117]]],[[10,[7,64]]]],[[172,97,204],[[10,[7,64]]]],[[172,97,113,[105,[121]]],[[10,[7,64]]]],[[172,97,203,113],[[10,[7,64]]]],[[172,204],7],[[172,204,113,[2,[186]]],[[7,[186,[2,[31]]]]]],[[172,205,[2,[173]]],173],[[172,[2,[108]],206],7],[[172,95,206,[2,[108]]],[[7,[108,[2,[207]]]]]],[[172,173,208,182,[2,[183]],[2,[95]],[2,[184]]],[[10,[[7,[95,184]],185]]]],[[172,[2,[209]],210],7],[[172,[2,[197]],211],7],[[172,[101,[212]],95,211,[2,[197]]],[[7,[197,[2,[213]]]]]],[[172,95,-2],-1,[],[[147,[2],[[174,[-1]]]]]],[[172,95,20,[2,[116]]],[[7,[116,[2,[14]]]]]],[[172,95,22,[2,[186]]],[[7,[186,[2,[13]]]]]],[[172,95,214,215,[2,[187]]],[[7,[187,[2,[152]],[2,[216]]]]]],[[172,95,206,[2,[108]]],[[7,[108,[2,[207]]]]]],[[172,95,[217,[201]],[2,[192]]],[[7,[192,[2,[45]]]]]],[[172,95,218,[2,[204]],[2,[219]]],[[7,[204,[2,[220]]]]]],[[172,95,158,[2,[221]]],[[7,[221,[2,[160]]]]]],[[172,95,25,[2,[222]]],[[7,[222,[2,[23]]]]]],[[172,95,223,[2,[203]]],[[7,[203,[2,[224]]]]]],[[172,95,56],[[7,[91,[2,[57]]]]]],[[172,95,225,[2,[119]],[2,[219]]],[[7,[119,[2,[226]]]]]],[[172,95,227,[2,[228]]],[[7,[228,[2,[229]]]]]],[[172,95,230,231,[2,[232]]],[[7,[232,[2,[233]]]]]],[[172,95,230,[234,[[105,[113]]]],[2,[232]]],[[7,[232,[2,[233]]]]]],[[172,95,211,[2,[197]]],[[7,[197,[2,[213]]]]]],[[172,95,235,[2,[236]]],[[7,[236,[2,[237]]]]]],[[172,95],7],[[172,95],175],[[172,95],7],[[172,95],126],[[172,95,-2],-1,[],[[147,[2],[[174,[-1]]]]]],[[172,95],[[2,[161]]]],[[172,95],238],[[172,95],181],[[172,95,[239,[149]]],[[10,[39,122]]]],[[172,108,110,[105,[121]]],190],[[172,95,133],7],[[172,95],7],[[172,95],7],[-1,-2,[],[]],[-1,-2,[],[]],[172,7],[[172,240],[[106,[173]]]],[[241,241],39],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[241,8],40],[-1,-1,[]],[-1,-1,[]],[1,172],[242,172],[172,241],0,[241,243],0,[172,2],[[172,244,245,[2,[180]]],[[10,[180,246]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,247],172],[[172,221],7],[[172,221],[[2,[[106,[121]]]]]],[[172,222],7],[[172,39],[[10,[39,122]]]],[[172,203],7],[[172,184,111,[2,[248]]],[[10,[[7,[248,[140,[121]]]],136]]]],[[172,184],7],[[172,184],148],[[172,184,146],149],[[172,184,[105,[191]]],[[10,[149,[7,[149,137]]]]]],[[172,184,108,152,111],[[10,[7,136]]]],[[172,184,108,110,[105,[121]]],[[10,[7,136]]]],[[172,184,108,110,248],[[10,[7,136]]]],[[172,184,200,[105,[121]],155,156],[[10,[7,136]]]],[[172,209],7],[[172,91,210,[2,[209]]],[[7,[209,[2,[59]]]]]],[[172,98,113],[[10,[7,83]]]],[[172,98,203,113],[[10,[7,83]]]],[[172,98,113,113,113,113],[[10,[7,83]]]],[[172,98,113,113,113,114,113],[[10,[7,83]]]],[[172,98,108,110],[[10,[7,83]]]],[[172,98,108,110],[[10,[7,83]]]],[[172,98],[[10,[7,83]]]],[[172,98],[[10,[7,83]]]],[[172,98],[[10,[7,83]]]],[[172,98,[105,[209]]],[[10,[7,83]]]],[[172,98,1,113],[[10,[7,83]]]],[[172,98,108,110,113],[[10,[7,83]]]],[[172,98,108,110,108,110,113],[[10,[7,83]]]],[[172,98,108,110,113],[[10,[7,83]]]],[[172,98,108,110,108,110,113],[[10,[7,83]]]],[[172,98],[[10,[7,83]]]],[[172,98,1,113],[[10,[7,83]]]],[[172,98,113,[2,[116]],[105,[117]]],[[10,[7,83]]]],[[172,98,249],[[10,[7,83]]]],[[172,98,108,109,110,[2,[111]]],[[10,[7,83]]]],[[172,98,119],[[10,[7,83]]]],[[172,98,120,113,[105,[121]]],[[10,[7,83]]]],[[172,98,113,113,113,113],[[10,[7,83]]]],[[172,98,113],[[10,[7,83]]]],[[172,98,113,108,110,[2,[111]]],[[10,[7,83]]]],[[172,98,148,148,148,148,148,148],[[10,[7,83]]]],[[172,98,203,113],[[10,[7,83]]]],[[172,119],7],[[172,119,113,[2,[186]]],[[7,[186,[2,[31]]]]]],[[172,250,240,[2,[173]]],[[10,[173,251]]]],[[172,228],7],[[172,232],7],[[172,180,-2],-1,[],[[147,[2],[[174,[-1]]]]]],[[172,180,95,[252,[[106,[178]]]]],[[2,[253]]]],[[172,180],7],[[172,180,173],[[10,[254,255]]]],[[172,180,[2,[197]]],[[10,[256,257]]]],[[172,180],[[10,[258,257]]]],[[172,180],[[10,[7,257]]]],[241,259],0,[[172,197,-2],-1,[],[[147,[2],[[174,[-1]]]]]],[[172,197,260,[2,[261]]],[[7,[261,[2,[262]]]]]],[[172,197],[[10,[7,188]]]],[[172,197],7],[[172,261,-2],-1,[],[[147,[2],[[174,[-1]]]]]],[[172,261],[[10,[7,263]]]],[[172,236],[[10,[7,188]]]],[[172,236],7],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[243,243],39],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[243,8],40],[-1,-1,[]],[-1,-1,[]],[104,243],[-1,-2,[],[]],[-1,-2,[],[]],[243,39],0,0,0,0,0,0,0,0,0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[264,264],[[[265,[-1]]],[[265,[-1]]],266],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[264,264],267],[[[265,[-1]],[265,[-1]]],267,266],[[-1,-2],267,[],[]],[[-1,-2],267,[],[]],[-1,[[10,[264]]],33],[-1,[[10,[[265,[-2]]]]],33,266],[-1,-2,[],[]],[-1,-2,[],[]],[[264,264],39],[[[265,[-1]],[265,[-1]]],39,266],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[[265,[-1]],8],40,266],[-1,-1,[]],[-1,-1,[]],[264,[[265,[-1]]],266],[[264,-1],7,50],[[[265,[-1]],-2],7,266,50],[-1,-2,[],[]],[-1,-2,[],[]],[[[265,[268]]],191],[192,191],[[[265,[269]]],192],[191,192],[[[265,[-1]]],264,266],0,[[264,264],[[2,[267]]]],[[[265,[-1]],[265,[-1]]],[[2,[267]]],266],[[264,-1],10,51],[[[265,[-1]],-2],10,266,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[264,[[7,[113,113]]]],[[[265,[-1]]],[[7,[113,113]]],266],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[[113,113],264],[[113,113],[[265,[-1]]],266],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[270,8],40],[[271,8],40],[[272,8],40],[[273,8],40],[[274,8],40],[[275,8],40],[[276,8],40],[[277,8],40],[[278,8],40],[[279,8],40],[[280,8],40],[[281,8],40],[[282,8],40],[[283,8],40],[[284,8],40],[[285,8],40],[[268,8],40],[[269,8],40],[[286,8],40],[[287,8],40],[[288,8],40],[[289,8],40],[[290,8],40],[[291,8],40],[[292,8],40],[[293,8],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[294,[-1]],8],40,[99,266]],[[[294,[-1]],[265,[-1]]],7,266],[-1,-1,[]],[-1,-2,[],[]],[[[294,[-1]],[265,[-1]]],[[265,[-1]]],266],[[],[[294,[-1]]],266],[[[294,[-1]]],[[265,[-1]]],266],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[242,2],[295,157],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[296,296],[255,255],[185,185],[251,251],[246,246],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],0,[[[36,[295]],182,3,[2,[183]]],[[10,[[7,[[36,[35]],[36,[138]]]],185]]]],[[242,244,245],[[10,[297,246]]]],[[],242],[-1,[[10,[296]]],33],[-1,[[10,[185]]],33],[-1,[[10,[251]]],33],[297,[[10,[7,257]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[295,175],[297,7],[[242,240],[[106,[295]]]],[295,126],0,[[296,8],40],[[296,8],40],[[255,8],40],[[255,8],40],[[185,8],40],[[185,8],40],[[251,8],40],[[251,8],40],[[246,8],40],[[246,8],40],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[45,185],[-1,-1,[]],[296,185],[-1,-1,[]],[-1,-1,[]],[[297,295],[[10,[298,255]]]],[[297,205],[[10,[298,255]]]],[297,[[10,[299,257]]]],[295,176],[295,177],[[295,178],179],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[295,297],39],[295,181],0,[205,295],[[1,247],242],[1,240],0,[297,[[10,[258,257]]]],[[297,157],[[2,[300]]]],[[242,157],[[2,[301]]]],[[242,[302,[297]],240],[[10,[295,251]]]],[[296,-1],10,51],[[185,-1],10,51],[[251,-1],10,51],[185,[[2,[52]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],303],0,0,[[303,303],303],[[303,303],7],[[303,303],303],[[303,303],7],[303,113],[303,113],[[303,303],303],[[303,303],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[230,230],[233,233],[304,304],[305,305],[306,306],[218,218],[307,307],[220,220],[160,160],[308,308],[309,309],[310,310],[311,311],[312,312],[225,225],[313,313],[158,158],[314,314],[315,315],[226,226],[303,303],[316,316],[317,317],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[303,303],0,0,[[303,303],39],0,[[],316],0,0,[-1,[[10,[230]]],33],[-1,[[10,[304]]],33],[-1,[[10,[218]]],33],[-1,[[10,[308]]],33],[-1,[[10,[309]]],33],[-1,[[10,[311]]],33],[-1,[[10,[225]]],33],[-1,[[10,[158]]],33],[318,[[36,[35]]]],[319,[[36,[35]]]],[159,[[36,[35]]]],[320,[[36,[35]]]],[[303,303],303],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[318,7],[319,7],[159,7],[320,7],[[],303],0,0,[[303,303],39],[[317,317],39],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[303,-1],7,[[321,[],[[170,[303]]]]]],0,[[230,8],40],[[318,8],40],[[233,8],40],[[233,8],40],[[304,8],40],[[305,8],40],[[306,8],40],[[306,8],40],[[218,8],40],[[307,8],40],[[220,8],40],[[220,8],40],[[319,8],40],[[160,8],40],[[160,8],40],[[159,8],40],[[308,8],40],[[309,8],40],[[310,8],40],[[311,8],40],[[312,8],40],[[225,8],40],[[313,8],40],[[158,8],40],[[314,8],40],[[314,8],40],[[315,8],40],[[315,8],40],[[226,8],40],[[226,8],40],[[303,8],40],[[303,8],40],[[303,8],40],[[303,8],40],[[303,8],40],[[316,8],40],[[320,8],40],[[317,8],40],[[317,8],40],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[44,233],[[[323,[322]]],233],[-1,-1,[]],[45,233],[[[323,[[325,[324]]]]],233],[-1,-1,[]],[-1,-1,[]],[23,306],[-1,-1,[]],[13,306],[-1,-1,[]],[-1,-1,[]],[43,220],[-1,-1,[]],[326,220],[306,220],[45,220],[46,220],[-1,-1,[]],[317,160],[-1,-1,[]],[45,160],[44,160],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[45,226],[-1,-1,[]],[43,226],[306,226],[315,226],[46,226],[44,226],[81,226],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[113,[[2,[303]]]],[113,303],[113,303],[113,303],[-1,303,[[321,[],[[170,[303]]]]]],[1,[[2,[303]]]],[[303,-1],7,50],[[303,303],7],[[303,303],303],[[303,303],39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[303,-1,[]],[303,39],[303,39],[303,[[327,[303]]]],[303,[[328,[303]]]],[318,1],[319,1],[159,1],[320,1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[303,303],0,0,[[303,303],7],[[230,-1],10,51],[[304,-1],10,51],[[218,-1],10,51],[[308,-1],10,51],[[309,-1],10,51],[[311,-1],10,51],[[225,-1],10,51],[[158,-1],10,51],[[303,303,39],7],0,[233,[[2,[52]]]],[306,[[2,[52]]]],[220,[[2,[52]]]],[160,[[2,[52]]]],[226,[[2,[52]]]],0,0,0,0,0,0,0,0,[[303,303],303],[[303,303],7],[[303,303],303],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[[303,303],7],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[303,303],303],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],0,0,[317,39],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[257,257],[253,253],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[257,8],40],[[257,8],40],[[253,8],40],[[253,8],40],[[299,8],40],[[256,8],40],[-1,-1,[]],[45,257],[-1,-1,[]],[122,253],[45,253],[43,253],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[257,[[2,[52]]]],[253,[[2,[52]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,53,[]],[-1,53,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[216,216],[237,237],[193,193],[142,142],[144,144],[196,196],[329,329],[330,330],[331,331],[332,332],[333,333],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],0,0,[-1,[[10,[196]]],33],[-1,[[10,[329]]],33],[-1,[[10,[330]]],33],[-1,[[10,[331]]],33],[-1,[[10,[332]]],33],[-1,[[10,[333]]],33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[216,8],40],[[216,8],40],[[237,8],40],[[237,8],40],[[193,8],40],[[193,8],40],[[142,8],40],[[142,8],40],[[144,8],40],[[144,8],40],[[334,8],40],[[196,8],40],[[335,8],40],[[329,8],40],[[330,8],40],[[331,8],40],[[332,8],40],[[333,8],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[207,216],[45,216],[207,237],[45,237],[-1,-1,[]],[55,193],[-1,-1,[]],[45,193],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[196,-1],10,51],[[329,-1],10,51],[[330,-1],10,51],[[331,-1],10,51],[[332,-1],10,51],[[333,-1],10,51],0,0,[216,[[2,[52]]]],[237,[[2,[52]]]],[193,[[2,[52]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],0,0,0,0,0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[259,259],[[-1,-2],7,[],[]],[[],259],[-1,-2,[],[]],0,[[259,259],39],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[259,8],40],[-1,-1,[]],[-1,-2,[],[]],[259,39],0,0,0,[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[151,[-1]]],[[151,[-1]]],336],[337,337],[143,143],[47,47],[49,49],[48,48],[46,46],[207,207],[338,338],[339,339],[213,213],[260,260],[340,340],[262,262],[263,263],[227,227],[341,341],[229,229],[224,224],[188,188],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],0,0,[[],260],[-1,[[10,[337]]],33],[-1,[[10,[143]]],33],[-1,[[10,[47]]],33],[-1,[[10,[48]]],33],[-1,[[10,[46]]],33],[-1,[[10,[260]]],33],[-1,[[10,[227]]],33],[336,[[36,[35]]]],[150,[[36,[35]]]],[153,[[36,[35]]]],[342,[[36,[35]]]],[343,[[36,[35]]]],[344,[[36,[35]]]],[345,[[36,[35]]]],[346,[[36,[35]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[150,7],[347,7],[348,7],[153,7],[349,7],[342,7],[343,7],[344,7],[345,7],[346,7],[350,7],[[260,260],39],[[227,227],39],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[351,337],0,0,[[337,8],[[10,[7,9]]]],[[337,8],40],[[352,8],40],[[353,8],40],[[189,8],40],[[143,8],40],[[143,8],40],[[47,8],40],[[47,8],40],[[49,8],40],[[49,8],40],[[48,8],40],[[48,8],40],[[46,8],40],[[46,8],40],[[150,8],40],[[207,8],40],[[207,8],40],[[347,8],40],[[139,8],40],[[348,8],40],[[354,8],40],[[153,8],40],[[349,8],40],[[338,8],40],[[339,8],40],[[339,8],40],[[213,8],40],[[213,8],40],[[260,8],40],[[340,8],40],[[340,8],40],[[342,8],40],[[262,8],40],[[262,8],40],[[263,8],40],[[263,8],40],[[227,8],40],[[343,8],40],[[341,8],40],[[229,8],40],[[229,8],40],[[224,8],40],[[224,8],40],[[344,8],40],[[188,8],40],[[188,8],40],[[345,8],40],[[346,8],40],[[350,8],40],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[47,143],[46,143],[-1,-1,[]],[45,143],[48,143],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[143,207],[45,207],[-1,-1,[]],[43,207],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[43,213],[262,213],[339,213],[45,213],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[48,262],[46,262],[-1,-1,[]],[45,262],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[44,229],[-1,-1,[]],[45,229],[44,224],[-1,-1,[]],[45,224],[-1,-1,[]],[46,188],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[355,353],[[[101,[147]]],353],[[[151,[-1]]],[[10,[[36,[-1]],46]]],336],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[336]],[36,[336]]],39],[351,1],[150,1],[347,99],[153,1],[349,99],[342,1],[343,1],[344,1],[345,1],[346,1],[350,99],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[336,35],[[10,[7,45]]]],[[336,-1],[[10,[7,45]]],336],0,[[337,-1],10,51],[[143,-1],10,51],[[47,-1],10,51],[[48,-1],10,51],[[46,-1],10,51],[[260,-1],10,51],[[227,-1],10,51],0,0,[143,[[2,[52]]]],[207,[[2,[52]]]],[213,[[2,[52]]]],[262,[[2,[52]]]],[229,[[2,[52]]]],[224,[[2,[52]]]],[188,[[2,[52]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[356,357,[361,[358,111,[360,[359]]]],1,120,362,[2,[363]]],[[10,[362,326]]]],[[178,364],[[10,[7,364]]]],[364,364],[365,365],[366,366],[367,367],[368,368],[326,326],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[356,120,[2,[1]]],[[10,[53,326]]]],[[364,8],40],[[364,8],40],[[365,8],40],[[365,8],40],[[356,8],40],[[366,8],40],[[366,8],40],[[367,8],40],[[367,8],40],[[368,8],40],[[368,8],40],[[326,8],40],[[326,8],40],[[356,1],[[10,[39,326]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[46,326],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[369,370,181],356],[181,357],[326,[[2,[52]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[[-1,113],[[10,[7,113]]],[[166,[],[[170,[[2,[178]]]]]]]],[371,365],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[1,"str"],[6,"Option",5303],[5,"InstanceFlags",5304],[5,"Empty",33],[5,"Gles",33],[5,"Vulkan",33],[1,"tuple"],[5,"Formatter",5305],[5,"Error",5305],[6,"Result",5306],[5,"TypeId",5307],[6,"BindGroupLayoutEntryError",75],[6,"CreateBindGroupLayoutError",75],[6,"CreateBindGroupError",75],[6,"BindingZone",75],[5,"BindingTypeMaxCountError",75],[6,"BindingTypeMaxCountErrorKind",75],[5,"BindGroupEntry",75],[5,"ResolvedBindGroupEntry",75],[5,"BindGroupDescriptor",75],[5,"ResolvedBindGroupDescriptor",75],[5,"BindGroupLayoutDescriptor",75],[6,"CreatePipelineLayoutError",75],[6,"PushConstantUploadError",75],[5,"PipelineLayoutDescriptor",75],[5,"BufferBinding",75],[5,"ResolvedBufferBinding",75],[6,"BindingResource",75],[6,"ResolvedBindingResource",75],[6,"BindError",75],[6,"GetBindGroupLayoutError",75],[5,"LateMinBufferBindingSizeMismatch",75],[10,"Deserializer",5308],[5,"BindGroupLayout",75],[5,"Device",2246],[5,"Arc",5309],[5,"PipelineLayout",75],[5,"BindGroup",75],[1,"bool"],[8,"Result",5305],[5,"ResolvedPipelineLayoutDescriptor",75],[5,"BindGroupDynamicBindingData",75],[5,"MissingDownlevelFlags",1864],[5,"MissingFeatures",1864],[6,"DeviceError",1864],[5,"InvalidResourceError",4340],[5,"MissingBufferUsageError",4340],[5,"DestroyedResourceError",4340],[5,"MissingTextureUsageError",4340],[10,"Hasher",5310],[10,"Serializer",5311],[10,"Error",5312],[5,"String",5313],[5,"CommandBufferMutable",696],[6,"CommandEncoderError",696],[5,"RenderBundleEncoderDescriptor",696],[6,"CreateRenderBundleError",696],[6,"ExecutionError",696],[5,"RenderBundleError",696],[6,"ClearError",696],[5,"ComputePassDescriptor",696],[6,"DispatchError",696],[6,"ComputePassErrorInner",696],[5,"ComputePassError",696],[6,"ComputeCommand",696],[6,"DrawError",696],[6,"RenderCommandError",696],[5,"Rect",696],[10,"Clone",5314],[6,"SimplifiedQueryType",696],[6,"QueryError",696],[6,"QueryUseError",696],[6,"ResolveError",696],[6,"LoadOp",696],[6,"StoreOp",696],[5,"PassChannel",696],[5,"RenderPassColorAttachment",696],[5,"RenderPassDepthStencilAttachment",696],[5,"RenderPassDescriptor",696],[6,"AttachmentErrorLocation",696],[6,"ColorAttachmentError",696],[6,"RenderPassErrorInner",696],[5,"RenderPassError",696],[5,"PassTimestampWrites",696],[6,"CopySide",696],[6,"TransferError",696],[6,"CopyError",696],[6,"DrawKind",696],[6,"PassErrorScope",696],[10,"Default",5315],[5,"RenderBundleEncoder",696],[10,"Deserialize",5308],[5,"CommandBuffer",696],[5,"RenderBundle",696],[8,"DeviceId",2701],[10,"PartialEq",5316],[5,"ComputePass",696],[5,"RenderPass",696],[10,"Debug",5305],[5,"ArcRenderPassDepthStencilAttachment",696],[5,"Box",5317],[6,"RenderPassCompatibilityError",1864],[6,"QueryType",5304],[5,"Hub",2656],[1,"slice"],[5,"Vec",5318],[10,"Serialize",5311],[8,"BufferId",2701],[6,"IndexFormat",5304],[8,"BufferAddress",5304],[8,"BufferSize",5304],[8,"MappedMutexGuard",5319],[1,"u32"],[1,"i32"],[8,"RawString",0],[8,"BindGroupId",2701],[8,"DynamicOffset",5304],[1,"usize"],[8,"RenderPipelineId",2701],[5,"ShaderStages",5304],[1,"u8"],[6,"WaitIdleError",1864],[6,"HostMap",1864],[5,"DeviceMismatch",1864],[5,"ImplicitPipelineContext",1864],[5,"Features",5304],[5,"DownlevelFlags",5304],[5,"ValidationFlags",5320],[5,"Validator",5320],[5,"UserClosures",1864],[5,"DeviceLostClosureRust",1864],[5,"DeviceLostClosureC",1864],[5,"DeviceLostClosure",1864],[6,"DeviceError",5321],[8,"DeviceLostCallback",1864],[6,"QueueWriteError",2123],[6,"QueueSubmitError",2123],[5,"Queue",2123],[5,"StagingBuffer",4340],[5,"NonNull",5322],[6,"TempResource",2123],[6,"ValidateBlasActionsError",3995],[6,"BufferAccessError",4340],[6,"ValidateTlasActionsError",3995],[5,"SubmittedWorkDoneClosureC",2123],[5,"SubmittedWorkDoneClosure",2123],[10,"FnOnce",5323],[1,"f32"],[8,"SubmissionIndex",0],[5,"Buffer",4340],[6,"Fallible",4340],[1,"u64"],[5,"Texture",4340],[5,"ImageCopyTexture",5304],[5,"ImageDataLayout",5304],[5,"Extent3d",5304],[6,"Backend",5304],[5,"PipelineCacheDescriptor",3249],[5,"PipelineCache",3249],[6,"CreatePipelineCacheError",3249],[5,"AllocatorReport",5324],[5,"HalCounters",5324],[6,"Action",2268],[6,"Command",2268],[5,"MultiError",2425],[10,"Iterator",5325],[5,"ContextError",2425],[10,"Send",5326],[10,"Sync",5326],[17,"Item"],[10,"ExactSizeIterator",5327],[5,"Global",2462],[8,"AdapterId",2701],[17,"Output"],[5,"DownlevelCapabilities",5304],[5,"AdapterInfo",5304],[5,"PresentationTimestamp",5304],[6,"TextureFormat",5304],[5,"TextureFormatFeatures",5304],[8,"SurfaceId",2701],[5,"Limits",5304],[8,"DeviceDescriptor",1864],[5,"Path",5328],[8,"QueueId",2701],[6,"RequestDeviceError",3089],[8,"BindGroupLayoutId",2701],[8,"BlasId",2701],[6,"DestroyError",4340],[5,"BufferMapOperation",4340],[8,"BufferAccessResult",4340],[8,"CommandBufferId",2701],[8,"CommandEncoderId",2701],[6,"BuildAccelerationStructureError",3995],[5,"BlasBuildEntry",3995],[5,"TlasPackage",3995],[5,"TlasBuildEntry",3995],[8,"TextureId",2701],[5,"ImageSubresourceRange",5304],[8,"ImageCopyBuffer",696],[8,"ImageCopyTexture",696],[8,"Label",0],[5,"CommandBufferDescriptor",5304],[8,"QuerySetId",2701],[8,"ComputePipelineId",2701],[5,"DynExposedAdapter",5329],[8,"BufferDescriptor",4340],[6,"CreateBufferError",4340],[5,"DynOpenDevice",5330],[8,"RenderBundleId",2701],[8,"RenderBundleDescriptor",696],[8,"TextureDescriptor",4340],[10,"DynTexture",5331],[6,"CreateTextureError",4340],[8,"BlasDescriptor",4340],[6,"BlasGeometrySizeDescriptors",5304],[6,"CreateBlasError",3995],[5,"CommandEncoderDescriptor",5304],[5,"ComputePipelineDescriptor",3249],[5,"ImplicitPipelineIds",1864],[6,"CreateComputePipelineError",3249],[8,"PipelineCacheId",2701],[8,"PipelineLayoutId",2701],[8,"QuerySetDescriptor",4340],[6,"CreateQuerySetError",4340],[5,"RenderPipelineDescriptor",3249],[6,"CreateRenderPipelineError",3249],[5,"SamplerDescriptor",4340],[8,"SamplerId",2701],[6,"CreateSamplerError",4340],[5,"ShaderModuleDescriptor",3249],[6,"ShaderModuleSource",3249],[8,"ShaderModuleId",2701],[6,"CreateShaderModuleError",3249],[6,"Cow",5332],[8,"TlasDescriptor",4340],[8,"TlasId",2701],[6,"CreateTlasError",3995],[5,"InternalCounters",5324],[6,"Maintain",5304],[5,"Backends",5304],[5,"GlobalReport",2462],[5,"Instance",3089],[5,"HubReport",2656],[6,"RawDisplayHandle",5333],[6,"RawWindowHandle",5333],[6,"CreateSurfaceError",3089],[5,"InstanceDescriptor",5304],[8,"StagingBufferId",2701],[5,"Color",5304],[8,"RequestAdapterOptions",3089],[6,"RequestAdapterError",3089],[5,"SurfaceConfiguration",5304],[6,"ConfigureSurfaceError",3901],[5,"SurfaceCapabilities",5304],[6,"GetSurfaceSupportError",3089],[5,"SurfaceOutput",3901],[6,"SurfaceError",3901],[6,"SurfaceStatus",5304],[5,"RegistryReport",4315],[5,"TextureViewDescriptor",4340],[8,"TextureViewId",2701],[6,"CreateTextureViewError",4340],[6,"TextureViewDestroyError",4340],[5,"RawId",2701],[5,"Id",2701],[10,"Marker",2701],[6,"Ordering",5316],[6,"CommandEncoder",2788],[6,"CommandBuffer",2788],[6,"Adapter",2788],[6,"Surface",2788],[6,"Device",2788],[6,"Queue",2788],[6,"Buffer",2788],[6,"StagingBuffer",2788],[6,"TextureView",2788],[6,"Texture",2788],[6,"Sampler",2788],[6,"BindGroupLayout",2788],[6,"PipelineLayout",2788],[6,"BindGroup",2788],[6,"ShaderModule",2788],[6,"RenderPipeline",2788],[6,"ComputePipeline",2788],[6,"PipelineCache",2788],[6,"RenderPassEncoder",2788],[6,"ComputePassEncoder",2788],[6,"RenderBundleEncoder",2788],[6,"RenderBundle",2788],[6,"QuerySet",2788],[6,"Blas",2788],[6,"Tlas",2788],[6,"TlasInstance",2788],[5,"IdentityManager",3074],[5,"Adapter",3089],[5,"FailedLimit",3089],[5,"Surface",3089],[5,"SurfaceCapabilities",5321],[5,"ResolvedSurfaceOutput",3901],[10,"DynSurface",5334],[10,"DynInstance",5329],[5,"RequestAdapterOptions",5304],[5,"PipelineFlags",3249],[5,"ProgrammableStageDescriptor",3249],[5,"ResolvedProgrammableStageDescriptor",3249],[6,"ImplicitLayoutError",3249],[5,"ResolvedComputePipelineDescriptor",3249],[5,"VertexBufferLayout",3249],[5,"VertexState",3249],[5,"ResolvedVertexState",3249],[5,"FragmentState",3249],[5,"ResolvedFragmentState",3249],[5,"ResolvedRenderPipelineDescriptor",3249],[6,"ColorStateError",3249],[6,"DepthStencilStateError",3249],[5,"VertexStep",3249],[6,"PipelineCacheValidationError",3249],[5,"ShaderModule",3249],[5,"ComputePipeline",3249],[5,"RenderPipeline",3249],[10,"IntoIterator",5335],[5,"ParseError",5336],[5,"ShaderError",5337],[6,"ValidationError",5320],[5,"WithSpan",5338],[6,"StageError",5125],[5,"Iter",5339],[5,"IterNames",5339],[5,"TraceBlasTriangleGeometry",3995],[6,"TraceBlasGeometries",3995],[5,"TraceBlasBuildEntry",3995],[5,"TraceTlasInstance",3995],[5,"TraceTlasPackage",3995],[5,"BlasTriangleGeometry",3995],[5,"TlasInstance",3995],[10,"ParentDevice",4340],[5,"ResourceErrorIdent",4340],[6,"TextureErrorDimension",4340],[6,"TextureDimensionError",4340],[6,"TextureViewNotRenderableReason",4340],[6,"SamplerFilterErrorType",4340],[5,"TextureView",4340],[5,"Sampler",4340],[5,"QuerySet",4340],[5,"Blas",4340],[5,"Tlas",4340],[5,"DestroyedBuffer",4340],[5,"FlushedStagingBuffer",4340],[5,"DestroyedTexture",4340],[5,"DestroyedAccelerationStructure",4340],[10,"Labeled",4340],[6,"BufferMapAsyncStatus",4340],[5,"BufferMapCallback",4340],[6,"TextureClearMode",4340],[5,"BufferMapCallbackC",4340],[5,"Interface",5125],[6,"BindingLayoutSource",5125],[5,"ResourceBinding",5340],[5,"FxHasher",5341],[5,"BuildHasherDefault",5310],[5,"HashMap",5342],[8,"StageIo",5125],[6,"CompareFunction",5304],[5,"NumericType",5125],[5,"InterfaceVar",5125],[6,"BindingError",5125],[6,"FilteringError",5125],[6,"InputError",5125],[5,"Module",5340],[5,"ModuleInfo",5320],[6,"VertexFormat",5304],[15,"MismatchedDynamicOffsetCount",613],[15,"UnalignedDynamicBinding",613],[15,"DynamicBindingOutOfBounds",613],[15,"BindingArrayPartialLengthMismatch",632],[15,"BindingArrayLengthMismatch",632],[15,"BindingSizeTooSmall",632],[15,"BindingsNumMismatch",632],[15,"WrongBindingType",632],[15,"BufferRangeTooLarge",632],[15,"InvalidTextureMultisample",632],[15,"InvalidTextureSampleType",632],[15,"InvalidTextureDimension",632],[15,"InvalidStorageTextureFormat",632],[15,"InvalidStorageTextureMipLevelCount",632],[15,"WrongSamplerComparison",632],[15,"WrongSamplerFiltering",632],[15,"BindingRangeTooLarge",632],[15,"Entry",670],[15,"InvalidBindingIndex",670],[15,"TooManyGroups",674],[15,"MisalignedPushConstantRange",674],[15,"MoreThanOnePushConstantRangePerStage",674],[15,"PushConstantRangeTooLarge",674],[15,"PartialRangeMatch",684],[15,"MissingStages",684],[15,"UnmatchedStages",684],[15,"TooLarge",684],[8,"ImageCopyTextureTagged",696],[15,"Color",1719],[15,"BufferOverrun",1721],[15,"OffsetPlusSizeExceeds64BitBounds",1721],[15,"InvalidTextureLayerRange",1721],[15,"InvalidTextureLevelRange",1721],[15,"MissingTextureAspect",1721],[15,"TooMany",1734],[15,"TooManyBytesPerSample",1734],[15,"SetBindGroup",1738],[15,"DispatchIndirect",1738],[15,"PushDebugGroup",1738],[15,"InsertDebugMarker",1738],[15,"SetPushConstant",1738],[15,"WriteTimestamp",1738],[15,"BeginPipelineStatisticsQuery",1738],[15,"IndirectBufferOverrun",1754],[15,"BindGroupIndexOutOfRange",1754],[15,"InvalidGroupSize",1759],[15,"UnmatchedIndexFormats",1761],[15,"MissingVertexBuffer",1761],[15,"IndexBeyondLimit",1761],[15,"InstanceBeyondLimit",1761],[15,"VertexBeyondLimit",1761],[15,"VertexOutOfBounds",1761],[15,"Draw",1778],[15,"Dispatch",1778],[15,"AlreadyStarted",1781],[15,"OutOfBounds",1781],[15,"UsedTwiceInsideRenderpass",1781],[15,"IncompatibleType",1781],[15,"BindGroupIndexOutOfRange",1788],[15,"VertexBufferIndexOutOfRange",1788],[15,"AttachmentsDimensionMismatch",1792],[15,"AttachmentSampleCountMismatch",1792],[15,"IndirectCountBufferOverrun",1792],[15,"IndirectBufferOverrun",1792],[15,"IncompatibleBundleReadOnlyDepthStencil",1792],[15,"InvalidResolveSampleCounts",1792],[15,"MismatchedResolveTextureFormat",1792],[15,"UnsupportedResolveTargetFormat",1792],[15,"TextureViewIsNotRenderable",1792],[15,"BufferOverrun",1821],[15,"QueryOverrun",1821],[15,"InvalidTextureAspect",1830],[15,"CopyFromForbiddenTextureFormat",1830],[15,"CopyToForbiddenTextureFormat",1830],[15,"BufferOverrun",1830],[15,"InvalidMipLevel",1830],[15,"TextureOverrun",1830],[15,"TextureFormatsNotCopyCompatible",1830],[15,"InvalidTextureMipLevel",1830],[15,"InvalidSampleCount",1830],[5,"DeviceLostInvocation",1864],[15,"IncompatibleColorAttachment",2110],[15,"IncompatibleDepthStencilAttachment",2110],[15,"IncompatibleSampleCount",2110],[15,"IncompatibleMultiview",2110],[15,"Init",2352],[15,"CreateRenderBundle",2352],[15,"CreateShaderModule",2352],[15,"WriteBuffer",2352],[15,"WriteTexture",2352],[15,"CreateTextureView",2352],[15,"CreateComputePipeline",2352],[15,"CreateRenderPipeline",2352],[15,"CreatePipelineCache",2352],[15,"CreateQuerySet",2352],[15,"CreateBlas",2352],[15,"CreateTlas",2352],[15,"GetSurfaceTexture",2352],[15,"RunComputePass",2388],[15,"RunRenderPass",2388],[15,"BuildAccelerationStructuresUnsafeTlas",2388],[15,"BuildAccelerationStructures",2388],[15,"ResolveQuerySet",2388],[15,"CopyBufferToBuffer",2388],[15,"CopyBufferToTexture",2388],[15,"CopyTextureToBuffer",2388],[15,"CopyTextureToTexture",2388],[15,"ClearBuffer",2388],[15,"ClearTexture",2388],[15,"WriteTimestamp",2388],[10,"HalApi",2654],[15,"IncompatibleFormat",3872],[15,"UnalignedShader",3874],[15,"Stage",3874],[15,"Internal",3874],[15,"PipelineConstants",3874],[15,"BlendFactorOnUnsupportedTarget",3874],[15,"TooManyVertexBuffers",3874],[15,"TooManyVertexAttributes",3874],[15,"VertexStrideTooLarge",3874],[15,"UnalignedVertexStride",3874],[15,"InvalidVertexAttributeOffset",3874],[15,"StripIndexFormatForNonStripTopology",3874],[15,"InvalidGroupIndex",3898],[15,"UnsupportedFormat",3984],[15,"UnsupportedPresentMode",3984],[15,"UnsupportedAlphaMode",3984],[15,"UnsupportedUsage",3984],[15,"TooLarge",3984],[6,"BlasGeometries",3995],[10,"ResourceType",4340],[15,"NegativeRange",5074],[15,"OutOfBoundsUnderrun",5074],[15,"OutOfBoundsOverrun",5074],[15,"UnalignedOffset",5074],[15,"UnalignedRangeSize",5074],[15,"MaxBufferSize",5082],[15,"TooManyQueries",5084],[15,"InvalidFilterModeWithAnisotropy",5086],[15,"InvalidLodMaxClamp",5086],[15,"InvalidMipLevelCount",5091],[15,"InvalidCubemapTextureDepth",5093],[15,"InvalidCubemapArrayTextureDepth",5093],[15,"InvalidArrayLayerCount",5093],[15,"TooManyMipLevels",5093],[15,"TooManyArrayLayers",5093],[15,"InvalidAspect",5093],[15,"InvalidTextureViewDimension",5093],[15,"FormatReinterpretation",5093],[15,"Surface",5107],[15,"RenderPass",5107],[15,"NotMultipleOfBlockHeight",5110],[15,"NotMultipleOfBlockWidth",5110],[15,"LimitExceeded",5110],[15,"WidthNotMultipleOf",5110],[15,"HeightNotMultipleOf",5110],[15,"WrongAddressSpace",5282],[15,"WrongTextureViewDimension",5282],[15,"WrongTextureClass",5282],[15,"WrongBufferSize",5282],[15,"InvalidWorkgroupSize",5291],[15,"Filtering",5291],[15,"Input",5291],[15,"TooManyVaryings",5291]],"b":[[342,"impl-Debug-for-BindGroupLayoutEntryError"],[343,"impl-Display-for-BindGroupLayoutEntryError"],[344,"impl-Debug-for-CreateBindGroupLayoutError"],[345,"impl-Display-for-CreateBindGroupLayoutError"],[346,"impl-Debug-for-CreateBindGroupError"],[347,"impl-Display-for-CreateBindGroupError"],[348,"impl-Debug-for-BindingZone"],[349,"impl-Display-for-BindingZone"],[350,"impl-Display-for-BindingTypeMaxCountError"],[351,"impl-Debug-for-BindingTypeMaxCountError"],[359,"impl-Display-for-CreatePipelineLayoutError"],[360,"impl-Debug-for-CreatePipelineLayoutError"],[361,"impl-Debug-for-PushConstantUploadError"],[362,"impl-Display-for-PushConstantUploadError"],[370,"impl-Debug-for-BindError"],[371,"impl-Display-for-BindError"],[374,"impl-Display-for-GetBindGroupLayoutError"],[375,"impl-Debug-for-GetBindGroupLayoutError"],[376,"impl-Display-for-LateMinBufferBindingSizeMismatch"],[377,"impl-Debug-for-LateMinBufferBindingSizeMismatch"],[378,"impl-From%3CMissingDownlevelFlags%3E-for-BindGroupLayoutEntryError"],[379,"impl-From%3CMissingFeatures%3E-for-BindGroupLayoutEntryError"],[383,"impl-From%3CInvalidResourceError%3E-for-CreateBindGroupError"],[384,"impl-From%3CMissingBufferUsageError%3E-for-CreateBindGroupError"],[385,"impl-From%3CDeviceError%3E-for-CreateBindGroupError"],[386,"impl-From%3CDestroyedResourceError%3E-for-CreateBindGroupError"],[387,"impl-From%3CMissingTextureUsageError%3E-for-CreateBindGroupError"],[398,"impl-From%3CMissingFeatures%3E-for-CreatePipelineLayoutError"],[400,"impl-From%3CInvalidResourceError%3E-for-CreatePipelineLayoutError"],[401,"impl-From%3CDeviceError%3E-for-CreatePipelineLayoutError"],[1225,"impl-Display-for-CreateRenderBundleError"],[1226,"impl-Debug-for-CreateRenderBundleError"],[1227,"impl-Display-for-ExecutionError"],[1228,"impl-Debug-for-ExecutionError"],[1230,"impl-Display-for-RenderBundleError"],[1231,"impl-Debug-for-RenderBundleError"],[1232,"impl-Debug-for-ClearError"],[1233,"impl-Display-for-ClearError"],[1235,"impl-Debug-for-DispatchError"],[1236,"impl-Display-for-DispatchError"],[1237,"impl-Display-for-ComputePassErrorInner"],[1238,"impl-Debug-for-ComputePassErrorInner"],[1239,"impl-Display-for-ComputePassError"],[1240,"impl-Debug-for-ComputePassError"],[1242,"impl-Debug-for-DrawError"],[1243,"impl-Display-for-DrawError"],[1244,"impl-Display-for-RenderCommandError"],[1245,"impl-Debug-for-RenderCommandError"],[1248,"impl-Display-for-QueryError"],[1249,"impl-Debug-for-QueryError"],[1250,"impl-Debug-for-QueryUseError"],[1251,"impl-Display-for-QueryUseError"],[1252,"impl-Debug-for-ResolveError"],[1253,"impl-Display-for-ResolveError"],[1261,"impl-Display-for-AttachmentErrorLocation"],[1262,"impl-Debug-for-AttachmentErrorLocation"],[1263,"impl-Display-for-ColorAttachmentError"],[1264,"impl-Debug-for-ColorAttachmentError"],[1265,"impl-Debug-for-RenderPassErrorInner"],[1266,"impl-Display-for-RenderPassErrorInner"],[1267,"impl-Display-for-RenderPassError"],[1268,"impl-Debug-for-RenderPassError"],[1271,"impl-Display-for-TransferError"],[1272,"impl-Debug-for-TransferError"],[1273,"impl-Debug-for-CopyError"],[1274,"impl-Display-for-CopyError"],[1275,"impl-Debug-for-CommandEncoderError"],[1276,"impl-Display-for-CommandEncoderError"],[1278,"impl-Debug-for-PassErrorScope"],[1279,"impl-Display-for-PassErrorScope"],[1292,"impl-From%3CInvalidResourceError%3E-for-ClearError"],[1294,"impl-From%3CCommandEncoderError%3E-for-ClearError"],[1295,"impl-From%3CMissingBufferUsageError%3E-for-ClearError"],[1296,"impl-From%3CDestroyedResourceError%3E-for-ClearError"],[1297,"impl-From%3CDeviceError%3E-for-ClearError"],[1300,"impl-From%3CLateMinBufferBindingSizeMismatch%3E-for-DispatchError"],[1301,"impl-From%3CBox%3CBinderError%3E%3E-for-DispatchError"],[1302,"impl-From%3CCommandEncoderError%3E-for-ComputePassErrorInner"],[1303,"impl-From%3CInvalidResourceError%3E-for-ComputePassErrorInner"],[1304,"impl-From%3CMissingFeatures%3E-for-ComputePassErrorInner"],[1305,"impl-From%3CDispatchError%3E-for-ComputePassErrorInner"],[1306,"impl-From%3CMissingDownlevelFlags%3E-for-ComputePassErrorInner"],[1307,"impl-From%3CQueryUseError%3E-for-ComputePassErrorInner"],[1308,"impl-From%3CBindError%3E-for-ComputePassErrorInner"],[1309,"impl-From%3CDestroyedResourceError%3E-for-ComputePassErrorInner"],[1310,"impl-From%3CPushConstantUploadError%3E-for-ComputePassErrorInner"],[1312,"impl-From%3CDeviceError%3E-for-ComputePassErrorInner"],[1313,"impl-From%3CMissingBufferUsageError%3E-for-ComputePassErrorInner"],[1316,"impl-From%3CBox%3CBinderError%3E%3E-for-DrawError"],[1317,"impl-From%3CLateMinBufferBindingSizeMismatch%3E-for-DrawError"],[1319,"impl-From%3CMissingTextureUsageError%3E-for-RenderCommandError"],[1320,"impl-From%3CRenderPassCompatibilityError%3E-for-RenderCommandError"],[1321,"impl-From%3CMissingBufferUsageError%3E-for-RenderCommandError"],[1322,"impl-From%3CPushConstantUploadError%3E-for-RenderCommandError"],[1324,"impl-From%3CDestroyedResourceError%3E-for-RenderCommandError"],[1328,"impl-From%3CInvalidResourceError%3E-for-QueryError"],[1329,"impl-From%3CDeviceError%3E-for-QueryError"],[1330,"impl-From%3CQueryUseError%3E-for-QueryError"],[1331,"impl-From%3CMissingFeatures%3E-for-QueryError"],[1332,"impl-From%3CCommandEncoderError%3E-for-QueryError"],[1333,"impl-From%3CDestroyedResourceError%3E-for-QueryError"],[1335,"impl-From%3CResolveError%3E-for-QueryError"],[1349,"impl-From%3CMissingFeatures%3E-for-RenderPassErrorInner"],[1350,"impl-From%3CDrawError%3E-for-RenderPassErrorInner"],[1351,"impl-From%3CRenderPassCompatibilityError%3E-for-RenderPassErrorInner"],[1352,"impl-From%3CQueryUseError%3E-for-RenderPassErrorInner"],[1353,"impl-From%3CCommandEncoderError%3E-for-RenderPassErrorInner"],[1355,"impl-From%3CDeviceError%3E-for-RenderPassErrorInner"],[1356,"impl-From%3CInvalidResourceError%3E-for-RenderPassErrorInner"],[1357,"impl-From%3CBindError%3E-for-RenderPassErrorInner"],[1358,"impl-From%3CMissingTextureUsageError%3E-for-RenderPassErrorInner"],[1359,"impl-From%3CMissingBufferUsageError%3E-for-RenderPassErrorInner"],[1360,"impl-From%3CDestroyedResourceError%3E-for-RenderPassErrorInner"],[1361,"impl-From%3CMissingDownlevelFlags%3E-for-RenderPassErrorInner"],[1362,"impl-From%3CColorAttachmentError%3E-for-RenderPassErrorInner"],[1363,"impl-From%3CRenderCommandError%3E-for-RenderPassErrorInner"],[1367,"impl-From%3CMissingBufferUsageError%3E-for-TransferError"],[1368,"impl-From%3CMissingDownlevelFlags%3E-for-TransferError"],[1370,"impl-From%3CClearError%3E-for-TransferError"],[1371,"impl-From%3CMissingTextureUsageError%3E-for-TransferError"],[1372,"impl-From%3CDeviceError%3E-for-CopyError"],[1373,"impl-From%3CDestroyedResourceError%3E-for-CopyError"],[1374,"impl-From%3CCommandEncoderError%3E-for-CopyError"],[1376,"impl-From%3CInvalidResourceError%3E-for-CopyError"],[1377,"impl-From%3CTransferError%3E-for-CopyError"],[1378,"impl-From%3CMissingFeatures%3E-for-CommandEncoderError"],[1379,"impl-From%3CColorAttachmentError%3E-for-CommandEncoderError"],[1381,"impl-From%3CDeviceError%3E-for-CommandEncoderError"],[1382,"impl-From%3CInvalidResourceError%3E-for-CommandEncoderError"],[1971,"impl-Display-for-WaitIdleError"],[1972,"impl-Debug-for-WaitIdleError"],[1974,"impl-Display-for-RenderPassCompatibilityError"],[1975,"impl-Debug-for-RenderPassCompatibilityError"],[1976,"impl-Display-for-DeviceMismatch"],[1977,"impl-Debug-for-DeviceMismatch"],[1978,"impl-Debug-for-DeviceError"],[1979,"impl-Display-for-DeviceError"],[1980,"impl-Display-for-MissingFeatures"],[1981,"impl-Debug-for-MissingFeatures"],[1982,"impl-Debug-for-MissingDownlevelFlags"],[1983,"impl-Display-for-MissingDownlevelFlags"],[2177,"impl-Debug-for-QueueWriteError"],[2178,"impl-Display-for-QueueWriteError"],[2179,"impl-Display-for-QueueSubmitError"],[2180,"impl-Debug-for-QueueSubmitError"],[2185,"impl-From%3CInvalidResourceError%3E-for-QueueWriteError"],[2186,"impl-From%3CDeviceError%3E-for-QueueWriteError"],[2188,"impl-From%3CTransferError%3E-for-QueueWriteError"],[2189,"impl-From%3CDestroyedResourceError%3E-for-QueueWriteError"],[2190,"impl-From%3CClearError%3E-for-QueueWriteError"],[2191,"impl-From%3CCommandEncoderError%3E-for-QueueSubmitError"],[2192,"impl-From%3CValidateBlasActionsError%3E-for-QueueSubmitError"],[2194,"impl-From%3CBufferAccessError%3E-for-QueueSubmitError"],[2195,"impl-From%3CInvalidResourceError%3E-for-QueueSubmitError"],[2196,"impl-From%3CDestroyedResourceError%3E-for-QueueSubmitError"],[2197,"impl-From%3CValidateTlasActionsError%3E-for-QueueSubmitError"],[2198,"impl-From%3CDeviceError%3E-for-QueueSubmitError"],[2437,"impl-Display-for-ContextError"],[2438,"impl-Debug-for-ContextError"],[2439,"impl-Debug-for-MultiError"],[2440,"impl-Display-for-MultiError"],[3155,"impl-Debug-for-FailedLimit"],[3156,"impl-Display-for-FailedLimit"],[3157,"impl-Debug-for-GetSurfaceSupportError"],[3158,"impl-Display-for-GetSurfaceSupportError"],[3159,"impl-Debug-for-RequestDeviceError"],[3160,"impl-Display-for-RequestDeviceError"],[3161,"impl-Debug-for-RequestAdapterError"],[3162,"impl-Display-for-RequestAdapterError"],[3163,"impl-Display-for-CreateSurfaceError"],[3164,"impl-Debug-for-CreateSurfaceError"],[3171,"impl-From%3CDeviceError%3E-for-RequestDeviceError"],[3173,"impl-From%3CFailedLimit%3E-for-RequestDeviceError"],[3355,"impl-PipelineFlags"],[3356,"impl-Flags-for-PipelineFlags"],[3537,"impl-Display-for-CreateShaderModuleError"],[3538,"impl-Debug-for-CreateShaderModuleError"],[3541,"impl-Display-for-ImplicitLayoutError"],[3542,"impl-Debug-for-ImplicitLayoutError"],[3545,"impl-Debug-for-CreateComputePipelineError"],[3546,"impl-Display-for-CreateComputePipelineError"],[3548,"impl-Debug-for-CreatePipelineCacheError"],[3549,"impl-Display-for-CreatePipelineCacheError"],[3559,"impl-Debug-for-ColorStateError"],[3560,"impl-Display-for-ColorStateError"],[3561,"impl-Display-for-DepthStencilStateError"],[3562,"impl-Debug-for-DepthStencilStateError"],[3563,"impl-Display-for-CreateRenderPipelineError"],[3564,"impl-Debug-for-CreateRenderPipelineError"],[3565,"impl-Debug-for-PipelineFlags"],[3566,"impl-Octal-for-PipelineFlags"],[3567,"impl-LowerHex-for-PipelineFlags"],[3568,"impl-Binary-for-PipelineFlags"],[3569,"impl-UpperHex-for-PipelineFlags"],[3572,"impl-Debug-for-PipelineCacheValidationError"],[3573,"impl-Display-for-PipelineCacheValidationError"],[3579,"impl-From%3CMissingFeatures%3E-for-CreateShaderModuleError"],[3580,"impl-From%3CShaderError%3CParseError%3E%3E-for-CreateShaderModuleError"],[3582,"impl-From%3CDeviceError%3E-for-CreateShaderModuleError"],[3583,"impl-From%3CShaderError%3CWithSpan%3CValidationError%3E%3E%3E-for-CreateShaderModuleError"],[3586,"impl-From%3CCreatePipelineLayoutError%3E-for-ImplicitLayoutError"],[3588,"impl-From%3CCreateBindGroupLayoutError%3E-for-ImplicitLayoutError"],[3591,"impl-From%3CMissingDownlevelFlags%3E-for-CreateComputePipelineError"],[3593,"impl-From%3CStageError%3E-for-CreateComputePipelineError"],[3594,"impl-From%3CImplicitLayoutError%3E-for-CreateComputePipelineError"],[3595,"impl-From%3CDeviceError%3E-for-CreateComputePipelineError"],[3596,"impl-From%3CInvalidResourceError%3E-for-CreateComputePipelineError"],[3598,"impl-From%3CPipelineCacheValidationError%3E-for-CreatePipelineCacheError"],[3600,"impl-From%3CDeviceError%3E-for-CreatePipelineCacheError"],[3601,"impl-From%3CMissingFeatures%3E-for-CreatePipelineCacheError"],[3613,"impl-From%3CDeviceError%3E-for-CreateRenderPipelineError"],[3615,"impl-From%3CMissingDownlevelFlags%3E-for-CreateRenderPipelineError"],[3616,"impl-From%3CImplicitLayoutError%3E-for-CreateRenderPipelineError"],[3617,"impl-From%3CDepthStencilStateError%3E-for-CreateRenderPipelineError"],[3618,"impl-From%3CInvalidResourceError%3E-for-CreateRenderPipelineError"],[3619,"impl-From%3CMissingFeatures%3E-for-CreateRenderPipelineError"],[3620,"impl-From%3CColorAttachmentError%3E-for-CreateRenderPipelineError"],[3626,"impl-Flags-for-PipelineFlags"],[3627,"impl-PipelineFlags"],[3940,"impl-Debug-for-SurfaceError"],[3941,"impl-Display-for-SurfaceError"],[3942,"impl-Display-for-ConfigureSurfaceError"],[3943,"impl-Debug-for-ConfigureSurfaceError"],[3949,"impl-From%3CWaitIdleError%3E-for-ConfigureSurfaceError"],[3950,"impl-From%3CDeviceError%3E-for-ConfigureSurfaceError"],[3951,"impl-From%3CMissingDownlevelFlags%3E-for-ConfigureSurfaceError"],[4141,"impl-Display-for-CreateBlasError"],[4142,"impl-Debug-for-CreateBlasError"],[4143,"impl-Debug-for-CreateTlasError"],[4144,"impl-Display-for-CreateTlasError"],[4145,"impl-Display-for-BuildAccelerationStructureError"],[4146,"impl-Debug-for-BuildAccelerationStructureError"],[4147,"impl-Debug-for-ValidateBlasActionsError"],[4148,"impl-Display-for-ValidateBlasActionsError"],[4149,"impl-Debug-for-ValidateTlasActionsError"],[4150,"impl-Display-for-ValidateTlasActionsError"],[4163,"impl-From%3CCreateBufferError%3E-for-CreateBlasError"],[4164,"impl-From%3CDeviceError%3E-for-CreateBlasError"],[4165,"impl-From%3CCreateBufferError%3E-for-CreateTlasError"],[4166,"impl-From%3CDeviceError%3E-for-CreateTlasError"],[4168,"impl-From%3CCommandEncoderError%3E-for-BuildAccelerationStructureError"],[4170,"impl-From%3CDeviceError%3E-for-BuildAccelerationStructureError"],[4688,"impl-Display-for-ResourceErrorIdent"],[4689,"impl-Debug-for-ResourceErrorIdent"],[4693,"impl-Debug-for-BufferAccessError"],[4694,"impl-Display-for-BufferAccessError"],[4695,"impl-Debug-for-MissingBufferUsageError"],[4696,"impl-Display-for-MissingBufferUsageError"],[4697,"impl-Debug-for-MissingTextureUsageError"],[4698,"impl-Display-for-MissingTextureUsageError"],[4699,"impl-Debug-for-DestroyedResourceError"],[4700,"impl-Display-for-DestroyedResourceError"],[4701,"impl-Debug-for-InvalidResourceError"],[4702,"impl-Display-for-InvalidResourceError"],[4704,"impl-Display-for-CreateBufferError"],[4705,"impl-Debug-for-CreateBufferError"],[4713,"impl-Display-for-TextureDimensionError"],[4714,"impl-Debug-for-TextureDimensionError"],[4715,"impl-Debug-for-CreateTextureError"],[4716,"impl-Display-for-CreateTextureError"],[4718,"impl-Debug-for-TextureViewNotRenderableReason"],[4719,"impl-Display-for-TextureViewNotRenderableReason"],[4721,"impl-Display-for-CreateTextureViewError"],[4722,"impl-Debug-for-CreateTextureViewError"],[4723,"impl-Display-for-TextureViewDestroyError"],[4724,"impl-Debug-for-TextureViewDestroyError"],[4728,"impl-Debug-for-CreateSamplerError"],[4729,"impl-Display-for-CreateSamplerError"],[4730,"impl-Debug-for-CreateQuerySetError"],[4731,"impl-Display-for-CreateQuerySetError"],[4733,"impl-Display-for-DestroyError"],[4734,"impl-Debug-for-DestroyError"],[4746,"impl-From%3CMissingBufferUsageError%3E-for-BufferAccessError"],[4747,"impl-From%3CInvalidResourceError%3E-for-BufferAccessError"],[4749,"impl-From%3CDeviceError%3E-for-BufferAccessError"],[4750,"impl-From%3CDestroyedResourceError%3E-for-BufferAccessError"],[4756,"impl-From%3CBufferAccessError%3E-for-CreateBufferError"],[4757,"impl-From%3CDeviceError%3E-for-CreateBufferError"],[4759,"impl-From%3CMissingDownlevelFlags%3E-for-CreateBufferError"],[4769,"impl-From%3CMissingDownlevelFlags%3E-for-CreateTextureError"],[4770,"impl-From%3CCreateTextureViewError%3E-for-CreateTextureError"],[4771,"impl-From%3CTextureDimensionError%3E-for-CreateTextureError"],[4772,"impl-From%3CDeviceError%3E-for-CreateTextureError"],[4776,"impl-From%3CDestroyedResourceError%3E-for-CreateTextureViewError"],[4777,"impl-From%3CInvalidResourceError%3E-for-CreateTextureViewError"],[4779,"impl-From%3CDeviceError%3E-for-CreateTextureViewError"],[4784,"impl-From%3CMissingFeatures%3E-for-CreateSamplerError"],[4786,"impl-From%3CDeviceError%3E-for-CreateSamplerError"],[4787,"impl-From%3CMissingFeatures%3E-for-CreateQuerySetError"],[4789,"impl-From%3CDeviceError%3E-for-CreateQuerySetError"],[5201,"impl-Display-for-NumericType"],[5202,"impl-Debug-for-NumericType"],[5203,"impl-Display-for-InterfaceVar"],[5204,"impl-Debug-for-InterfaceVar"],[5206,"impl-Debug-for-BindingError"],[5207,"impl-Display-for-BindingError"],[5208,"impl-Display-for-FilteringError"],[5209,"impl-Debug-for-FilteringError"],[5210,"impl-Display-for-InputError"],[5211,"impl-Debug-for-InputError"],[5212,"impl-Display-for-StageError"],[5213,"impl-Debug-for-StageError"]]}],\
["wgpu_examples",{"doc":"","t":"CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCHHHHKTMNMNNNMHMHHHHHHHHHHHHHHHHFNNNNNNNNNNNHNNNNNNNNHHHHHHHH","n":["boids","bunnymark","conservative_raster","cube","framework","hello","hello_compute","hello_synchronization","hello_triangle","hello_windows","hello_workgroups","mipmap","msaa_line","ray_cube_compute","ray_cube_fragment","ray_scene","ray_shadows","ray_traced_triangle","render_to_texture","repeated_compute","shadow","skybox","srgb_blend","stencil_triangles","storage_texture","texture_arrays","timestamp_queries","uniform_values","utils","water","main","main","main","main","Example","SRGB","init","optional_features","render","required_downlevel_capabilities","required_features","required_limits","resize","run","update","main","main","main","main","main","main","main","main","main","main","main","main","main","main","main","main","Example","as_any","as_any_mut","borrow","borrow_mut","downcast","from","init","into","into_any","into_any_arc","into_any_rc","main","optional_features","render","resize","try_from","try_into","type_id","upcast","update","main","main","main","main","main","main","output_image_native","main"],"q":[[0,"wgpu_examples"],[30,"wgpu_examples::boids"],[31,"wgpu_examples::bunnymark"],[32,"wgpu_examples::conservative_raster"],[33,"wgpu_examples::cube"],[34,"wgpu_examples::framework"],[45,"wgpu_examples::hello"],[46,"wgpu_examples::hello_compute"],[47,"wgpu_examples::hello_synchronization"],[48,"wgpu_examples::hello_triangle"],[49,"wgpu_examples::hello_windows"],[50,"wgpu_examples::hello_workgroups"],[51,"wgpu_examples::mipmap"],[52,"wgpu_examples::msaa_line"],[53,"wgpu_examples::ray_cube_compute"],[54,"wgpu_examples::ray_cube_fragment"],[55,"wgpu_examples::ray_scene"],[56,"wgpu_examples::ray_shadows"],[57,"wgpu_examples::ray_traced_triangle"],[58,"wgpu_examples::render_to_texture"],[59,"wgpu_examples::repeated_compute"],[60,"wgpu_examples::shadow"],[61,"wgpu_examples::skybox"],[82,"wgpu_examples::srgb_blend"],[83,"wgpu_examples::stencil_triangles"],[84,"wgpu_examples::storage_texture"],[85,"wgpu_examples::texture_arrays"],[86,"wgpu_examples::timestamp_queries"],[87,"wgpu_examples::uniform_values"],[88,"wgpu_examples::utils"],[89,"wgpu_examples::water"],[90,"wgpu::api::surface"],[91,"wgpu::api::adapter"],[92,"wgpu::api::device"],[93,"wgpu::api::queue"],[94,"wgpu_types"],[95,"wgpu::api::texture_view"],[96,"wgpu_types"],[97,"core::any"],[98,"alloc::boxed"],[99,"alloc::sync"],[100,"alloc::rc"],[101,"core::result"],[102,"core::any"],[103,"alloc::vec"],[104,"alloc::string"]],"d":["","","","","","","","","","","This example assumes that you’ve seen hello-compute and …","","The parts of this example enabling MSAA are:","","","","","","","See hello-compute example main.rs for more details as …","","","","","This example demonstrates the basic usage of storage …","","Sample demonstrating different kinds of gpu timestamp …","Points of interest for seeing uniforms in action:","","","run example","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Outputs a vector of RGBA bytes as a png image with the …",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],0,0,[[2,3,4,5],6],[[],7],[[6,8,4,5],1],[[],9],[[],7],[[],10],[[6,2,4,5],1],[11,1],[[6,12],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[2,3,4,5],14],[-1,-2,[],[]],[[[15,[-1]]],[[15,[13]]],[]],[[[16,[-1]]],[[16,[13]]],[]],[[[17,[-1]]],[[17,[13]]],[]],[[],1],[[],7],[[14,8,4,5],1],[[14,2,4,5],1],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,[[20,[-2]]],[],[]],[[14,12],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[22,[21]],[1,[23,23]],24],1],[[],1]],"c":[],"p":[[1,"tuple"],[8,"SurfaceConfiguration",90],[5,"Adapter",91],[5,"Device",92],[5,"Queue",93],[10,"Example",34],[5,"Features",94],[5,"TextureView",95],[5,"DownlevelCapabilities",94],[5,"Limits",94],[1,"str"],[6,"WindowEvent",96],[10,"Any",97],[5,"Example",61],[5,"Box",98],[5,"Arc",99],[5,"Rc",100],[6,"Result",101],[5,"TypeId",97],[6,"Option",102],[1,"u8"],[5,"Vec",103],[1,"usize"],[5,"String",104]],"b":[]}],\
["wgpu_hal",{"doc":"A cross-platform unsafe graphics abstraction.","t":"RRRRRRPTTTRFFFGFFGGFFFFFFFKRFKIFFTTTRFFRFFPRFFFFFFFPFTTTTTTTTTTTFFRKRFPFRFFTTTTTFFKPPPPRGIFKFKKKKKKKKFKKFKKKKKKKKKKKKTTPFTRIFFTTTTKRFFPTTIPPPTTSSSSSSTTTTTFITTPFPTTTFPPPTTTTTTTTFRFGPGRFFFTSRKRTFFRFPTTTTTTTTTTTTTRFGGRFPPKRFFGRTTRFFFFFFFRFPPTTTPPJTFFOOMMOOMMMMOONNNNNNNNNNNOCONOMMONOCNMMMMMMMMMMOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOMMOOOOONNMMOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNOOMMONNNNNNNNNNNNNMMMMNMMMMMMOOOOMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMOOONOOOONNOMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMOONNNNNNNNNNNOOMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMMMMMMMMMMMMNOOOCNNNNNNNNNNNOMMMMMMOMMMMOOOOOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMMMMNMMMMMMMMCOONNNNNNNNNNNOOOOOMNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOONMMNNOOOONOOOOOOOOOOONNNNNNNNNNNNOOOOOOMMOOMNNNNMMMMOOOOOOOOOOONNNNNNNNNNNMMMMOOOOOOOONNNNNNNNNNNNNMMMMMMMMMMMMMMMMMMMMOOOOOOONNNNNOOOOOOMMOOMMONNNNNNNNNNNNNNNNNNNNNNMMOOMMNNNNNNNNNNNOOOOOOMMOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMONNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOCOMMOMMOOOEEESCHCCCCCCCCCSSSSSSSSSSSFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFFFFFPFFFFFFFPFFFFPFGFNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOFFFFFFFFFFFFTTGPFFPFFFFPFTFGFFFFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOO","n":["A","A","A","A","A","A","AABBs","ACCELERATION_STRUCTURE_SCRATCH","ALLOW_COMPACTION","ALLOW_UPDATE","AccelerationStructure","AccelerationStructureAABBs","AccelerationStructureBarrier","AccelerationStructureBuildFlags","AccelerationStructureBuildMode","AccelerationStructureBuildSizes","AccelerationStructureDescriptor","AccelerationStructureEntries","AccelerationStructureFormat","AccelerationStructureGeometryFlags","AccelerationStructureInstances","AccelerationStructureTriangleIndices","AccelerationStructureTriangleTransform","AccelerationStructureTriangles","AccelerationStructureUses","AcquiredSurfaceTexture","Adapter","Adapter","Alignments","Api","AtomicFenceValue","Attachment","AttachmentOps","BOTTOM_LEVEL_ACCELERATION_STRUCTURE_INPUT","BUILD_INPUT","BUILD_OUTPUT","BindGroup","BindGroupDescriptor","BindGroupEntry","BindGroupLayout","BindGroupLayoutDescriptor","BindGroupLayoutFlags","BottomLevel","Buffer","BufferBarrier","BufferBinding","BufferCopy","BufferDescriptor","BufferMapping","BufferTextureCopy","BufferUses","Build","BuildAccelerationStructureDescriptor","COLOR","COLOR_ATTACHMENT","COLOR_ATTACHMENT_BLEND","COLOR_TARGET","COMPLEX","COPY_DST","COPY_DST","COPY_DST","COPY_SRC","COPY_SRC","COPY_SRC","Capabilities","ColorAttachment","CommandBuffer","CommandEncoder","CommandEncoder","CommandEncoderDescriptor","Compilation","ComputePassDescriptor","ComputePipeline","ComputePipelineDescriptor","CopyExtent","DEPTH","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","DEPTH_STENCIL_READ","DEPTH_STENCIL_WRITE","DebugSource","DepthStencilAttachment","Device","Device","Device","Device","Device","Device","DeviceError","DropCallback","DropGuard","DynAccelerationStructure","DynAcquiredSurfaceTexture","DynAdapter","DynBindGroup","DynBindGroupLayout","DynBuffer","DynCommandBuffer","DynCommandEncoder","DynComputePipeline","DynDevice","DynExposedAdapter","DynFence","DynInstance","DynOpenDevice","DynPipelineCache","DynPipelineLayout","DynQuerySet","DynQueue","DynRenderPipeline","DynResource","DynSampler","DynShaderModule","DynSurface","DynSurfaceTexture","DynTexture","DynTextureView","EXCLUSIVE","EXCLUSIVE","EntryPoint","ExposedAdapter","FIRST_VERTEX_INSTANCE","Fence","FenceValue","FormatAspects","GetAccelerationStructureBuildSizesDescriptor","INCLUSIVE","INCLUSIVE","INDEX","INDIRECT","Instance","Instance","InstanceDescriptor","InstanceError","Instances","LOAD","LOW_MEMORY","Label","Linkage","Lost","Lost","MAP_READ","MAP_WRITE","MAX_ANISOTROPY","MAX_BIND_GROUPS","MAX_COLOR_ATTACHMENTS","MAX_CONCURRENT_SHADER_STAGES","MAX_MIP_LEVELS","MAX_VERTEX_BUFFERS","MULTISAMPLE_RESOLVE","MULTISAMPLE_X16","MULTISAMPLE_X2","MULTISAMPLE_X4","MULTISAMPLE_X8","MemoryFlags","MemoryRange","NO_DUPLICATE_ANY_HIT_INVOCATION","NUM_WORK_GROUPS","Naga","NagaShader","None","OPAQUE","ORDERED","ORDERED","OpenDevice","Other","OutOfMemory","Outdated","PARTIALLY_BOUND","PLANE_0","PLANE_1","PLANE_2","PREFER_COHERENT","PREFER_FAST_BUILD","PREFER_FAST_TRACE","PRESENT","PassTimestampWrites","PipelineCache","PipelineCacheDescriptor","PipelineCacheError","PipelineConstants","PipelineError","PipelineLayout","PipelineLayoutDescriptor","PipelineLayoutFlags","ProgrammableStage","QUERY_RESOLVE","QUERY_SIZE","QuerySet","Queue","Queue","RESOURCE","Rect","RenderPassDescriptor","RenderPipeline","RenderPipelineDescriptor","ResourceCreationFailed","SAMPLED","SAMPLED_LINEAR","SAMPLED_MINMAX","SHADER_INPUT","STENCIL","STORAGE","STORAGE_ATOMIC","STORAGE_READ","STORAGE_READ","STORAGE_READ_WRITE","STORAGE_READ_WRITE","STORAGE_READ_WRITE","STORE","Sampler","SamplerDescriptor","ShaderError","ShaderInput","ShaderModule","ShaderModuleDescriptor","Some","SpirV","Surface","Surface","SurfaceCapabilities","SurfaceConfiguration","SurfaceError","SurfaceTexture","TOP_LEVEL_ACCELERATION_STRUCTURE_INPUT","TRANSIENT","Texture","TextureBarrier","TextureBinding","TextureCopy","TextureCopyBase","TextureDescriptor","TextureFormatCapabilities","TextureUses","TextureView","TextureViewDescriptor","TopLevel","Triangles","UNIFORM","UNINITIALIZED","UNKNOWN","Unexpected","Update","VALIDATION_CANARY","VERTEX","ValidationCanary","VertexBufferLayout","acceleration_structure_size","acceleration_structures","acquire_texture","acquire_texture","adapter","adapter","add_raw_buffer","add_raw_buffer","add_raw_texture","add_raw_texture","address_modes","alignments","all","all","all","all","all","all","all","all","all","all","all","anisotropy_clamp","api","array_layer","array_layer_count","array_stride","as_any","as_any_mut","aspect","at_mip_level","attributes","auxil","backend","begin_compute_pass","begin_compute_pass","begin_debug_marker","begin_debug_marker","begin_encoding","begin_encoding","begin_query","begin_query","begin_render_pass","begin_render_pass","beginning_of_pass_write_index","bind_group_layouts","binding","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffer","buffer","buffer","buffer","buffer_copy_offset","buffer_copy_pitch","buffer_layout","buffers","build_acceleration_structures","build_acceleration_structures","build_scratch_size","cache","cache","capabilities","capabilities","clamp_size_to_virtual","clamp_size_to_virtual","clear_buffer","clear_buffer","clear_value","clear_value","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_attachments","color_targets","compare","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","composite_alpha_mode","composite_alpha_modes","configure","configure","constants","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains_invalid_bits","contains_invalid_bits","copy_buffer_to_buffer","copy_buffer_to_buffer","copy_buffer_to_texture","copy_buffer_to_texture","copy_extent","copy_query_results","copy_query_results","copy_texture_to_buffer","copy_texture_to_buffer","copy_texture_to_texture","copy_texture_to_texture","count","count","count","count","create_acceleration_structure","create_acceleration_structure","create_bind_group","create_bind_group","create_bind_group_layout","create_bind_group_layout","create_buffer","create_buffer","create_command_encoder","create_command_encoder","create_compute_pipeline","create_compute_pipeline","create_fence","create_fence","create_pipeline_cache","create_pipeline_cache","create_pipeline_layout","create_pipeline_layout","create_query_set","create_query_set","create_render_pipeline","create_render_pipeline","create_sampler","create_sampler","create_shader_module","create_shader_module","create_surface","create_surface","create_texture","create_texture","create_texture_view","create_texture_view","current_extent","data","debug_source","default","depth","depth_ops","depth_stencil","depth_stencil_attachment","deserialize","deserialize","destination_acceleration_structure","destroy_acceleration_structure","destroy_acceleration_structure","destroy_bind_group","destroy_bind_group","destroy_bind_group_layout","destroy_bind_group_layout","destroy_buffer","destroy_buffer","destroy_command_encoder","destroy_command_encoder","destroy_compute_pipeline","destroy_compute_pipeline","destroy_fence","destroy_fence","destroy_pipeline_cache","destroy_pipeline_cache","destroy_pipeline_layout","destroy_pipeline_layout","destroy_query_set","destroy_query_set","destroy_render_pipeline","destroy_render_pipeline","destroy_sampler","destroy_sampler","destroy_shader_module","destroy_shader_module","destroy_texture","destroy_texture","destroy_texture_view","destroy_texture_view","device","device","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","dimension","dimension","discard_encoding","discard_encoding","discard_texture","discard_texture","dispatch","dispatch","dispatch_indirect","dispatch_indirect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downlevel","draw","draw","draw_indexed","draw_indexed","draw_indexed_indirect","draw_indexed_indirect","draw_indexed_indirect_count","draw_indexed_indirect_count","draw_indirect","draw_indirect","draw_indirect_count","draw_indirect_count","drop","dst_base","dst_offset","dx12_shader_compiler","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","end","end_compute_pass","end_compute_pass","end_debug_marker","end_debug_marker","end_encoding","end_encoding","end_of_pass_write_index","end_query","end_query","end_render_pass","end_render_pass","entries","entries","entries","entries","entry_point","enumerate_adapters","enumerate_adapters","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exit","exit","expect_downcast","expect_downcast","expect_downcast","expect_downcast","expect_downcast","expect_downcast","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extent","extent","features","features","file_name","first_vertex","flags","flags","flags","flags","flags","flags","flags","flush_mapped_ranges","flush_mapped_ranges","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","format","format","formats","fragment_stage","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","generate_allocator_report","generate_allocator_report","get_acceleration_structure_build_sizes","get_acceleration_structure_build_sizes","get_acceleration_structure_device_address","get_acceleration_structure_device_address","get_and_reset","get_fence_value","get_fence_value","get_internal_counters","get_internal_counters","get_presentation_timestamp","get_presentation_timestamp","get_timestamp_period","get_timestamp_period","gles","gles_minor_version","h","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","indices","info","info","info","init","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_debug_marker","insert_debug_marker","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","invalidate_mapped_ranges","invalidate_mapped_ranges","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_coherent","is_cube_compatible","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_one","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","layout","layout","layout","limits","lod_clamp","mag_filter","map","map_buffer","map_buffer","map_extent_to_copy_size","max_copy_size","maximum_frame_latency","maximum_frame_latency","memory_flags","memory_flags","min","min_filter","mip_level","mip_level_count","mipmap_filter","mode","module","module","multisample","multiview","multiview","name","new","not","not","not","not","not","not","not","not","not","not","not","occlusion_query_set","offset","offset","offset","offset","offset","open","open","ops","origin","pipeline_cache_get_data","pipeline_cache_get_data","pipeline_cache_validation_key","pipeline_cache_validation_key","pipeline_cache_validation_key","place_acceleration_structure_barrier","place_acceleration_structure_barrier","present","present","present_mode","present_modes","primitive","ptr","push_constant_ranges","query_set","queue","queue","queue","range","range","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","reset_all","reset_all","reset_queries","reset_queries","resolve_target","resource_index","runtime_checks","sample_count","sample_count","samplers","scratch_buffer","scratch_buffer_offset","serialize","serialize","set","set","set","set","set","set","set","set","set","set","set","set_bind_group","set_bind_group","set_blend_constants","set_blend_constants","set_compute_pipeline","set_compute_pipeline","set_index_buffer","set_index_buffer","set_push_constants","set_push_constants","set_render_pipeline","set_render_pipeline","set_scissor_rect","set_scissor_rect","set_stencil_reference","set_stencil_reference","set_vertex_buffer","set_vertex_buffer","set_viewport","set_viewport","size","size","size","size","size","size","size","source","source","source","source","source","source_acceleration_structure","source_code","src_base","src_offset","stage","start","start_capture","start_capture","stencil_ops","step_mode","stop_capture","stop_capture","stride","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","submit","submit","suboptimal","suboptimal","surface_capabilities","surface_capabilities","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","target","target","texture","texture","texture","texture_base","texture_format_capabilities","texture_format_capabilities","textures","timestamp_writes","timestamp_writes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","transform","transition_buffers","transition_buffers","transition_textures","transition_textures","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unconfigure","unconfigure","uniform_bounds_check_alignment","union","union","union","union","union","union","union","union","union","union","union","unmap_buffer","unmap_buffer","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_scratch_size","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","vertex_buffer","vertex_buffers","vertex_count","vertex_format","vertex_stage","vertex_stride","view","view","view_formats","view_formats","vulkan","w","wait","wait","width","write_timestamp","write_timestamp","x","y","zero_initialize_workgroup_memory","Empty","Gles","Vulkan","MAX_I32_BINDING_SIZE","db","map_naga_stage","amd","apple","arm","broadcom","imgtec","intel","mesa","nvidia","qualcomm","VENDOR","VENDOR","VENDOR","VENDOR","VENDOR","DEVICE_KABY_LAKE_MASK","DEVICE_SKY_LAKE_MASK","VENDOR","VENDOR","VENDOR","VENDOR","Api","Context","Encoder","Resource","acquire_texture","acquire_texture","add_raw_buffer","add_raw_buffer","add_raw_texture","add_raw_texture","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","begin_compute_pass","begin_compute_pass","begin_debug_marker","begin_debug_marker","begin_encoding","begin_encoding","begin_query","begin_query","begin_render_pass","begin_render_pass","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_acceleration_structures","build_acceleration_structures","clear_buffer","clear_buffer","clone","clone_into","configure","configure","copy_buffer_to_buffer","copy_buffer_to_buffer","copy_buffer_to_texture","copy_buffer_to_texture","copy_query_results","copy_query_results","copy_texture_to_buffer","copy_texture_to_buffer","copy_texture_to_texture","copy_texture_to_texture","create_acceleration_structure","create_acceleration_structure","create_bind_group","create_bind_group","create_bind_group_layout","create_bind_group_layout","create_buffer","create_buffer","create_command_encoder","create_command_encoder","create_compute_pipeline","create_compute_pipeline","create_fence","create_fence","create_pipeline_cache","create_pipeline_cache","create_pipeline_layout","create_pipeline_layout","create_query_set","create_query_set","create_render_pipeline","create_render_pipeline","create_sampler","create_sampler","create_shader_module","create_shader_module","create_surface","create_surface","create_texture","create_texture","create_texture_view","create_texture_view","destroy_acceleration_structure","destroy_acceleration_structure","destroy_bind_group","destroy_bind_group","destroy_bind_group_layout","destroy_bind_group_layout","destroy_buffer","destroy_buffer","destroy_command_encoder","destroy_command_encoder","destroy_compute_pipeline","destroy_compute_pipeline","destroy_fence","destroy_fence","destroy_pipeline_cache","destroy_pipeline_cache","destroy_pipeline_layout","destroy_pipeline_layout","destroy_query_set","destroy_query_set","destroy_render_pipeline","destroy_render_pipeline","destroy_sampler","destroy_sampler","destroy_shader_module","destroy_shader_module","destroy_texture","destroy_texture","destroy_texture_view","destroy_texture_view","discard_encoding","discard_encoding","discard_texture","discard_texture","dispatch","dispatch","dispatch_indirect","dispatch_indirect","downcast","downcast","downcast","downcast","draw","draw","draw_indexed","draw_indexed","draw_indexed_indirect","draw_indexed_indirect","draw_indexed_indirect_count","draw_indexed_indirect_count","draw_indirect","draw_indirect","draw_indirect_count","draw_indirect_count","end_compute_pass","end_compute_pass","end_debug_marker","end_debug_marker","end_encoding","end_encoding","end_query","end_query","end_render_pass","end_render_pass","enumerate_adapters","enumerate_adapters","exit","exit","flush_mapped_ranges","flush_mapped_ranges","fmt","fmt","fmt","from","from","from","from","generate_allocator_report","get_acceleration_structure_build_sizes","get_acceleration_structure_build_sizes","get_acceleration_structure_device_address","get_acceleration_structure_device_address","get_fence_value","get_fence_value","get_internal_counters","get_internal_counters","get_presentation_timestamp","get_presentation_timestamp","get_timestamp_period","get_timestamp_period","init","insert_debug_marker","insert_debug_marker","into","into","into","into","invalidate_mapped_ranges","invalidate_mapped_ranges","map_buffer","map_buffer","open","open","pipeline_cache_get_data","pipeline_cache_validation_key","place_acceleration_structure_barrier","place_acceleration_structure_barrier","present","present","reset_all","reset_all","reset_queries","reset_queries","set_bind_group","set_bind_group","set_blend_constants","set_blend_constants","set_compute_pipeline","set_compute_pipeline","set_index_buffer","set_index_buffer","set_push_constants","set_push_constants","set_render_pipeline","set_render_pipeline","set_scissor_rect","set_scissor_rect","set_stencil_reference","set_stencil_reference","set_vertex_buffer","set_vertex_buffer","set_viewport","set_viewport","start_capture","start_capture","stop_capture","stop_capture","submit","submit","surface_capabilities","surface_capabilities","texture_format_capabilities","texture_format_capabilities","to_owned","transition_buffers","transition_buffers","transition_textures","transition_textures","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unconfigure","unconfigure","unmap_buffer","unmap_buffer","upcast","upcast","upcast","upcast","wait","wait","write_timestamp","write_timestamp","AccelerationStructure","Adapter","AdapterContext","AdapterContextLock","Api","BindGroup","BindGroupLayout","Buffer","CommandBuffer","CommandEncoder","ComputePipeline","DefaultRenderbuffer","Device","Fence","PipelineCache","PipelineLayout","QuerySet","Queue","RenderPipeline","Renderbuffer","Sampler","ShaderClearProgram","ShaderModule","Texture","Texture","TextureFormatDesc","TextureInner","TextureView","adapter_context","add_raw_buffer","add_raw_buffer","add_raw_texture","add_raw_texture","array_layer_count","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin_compute_pass","begin_compute_pass","begin_debug_marker","begin_debug_marker","begin_encoding","begin_encoding","begin_query","begin_query","begin_render_pass","begin_render_pass","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_acceleration_structures","build_acceleration_structures","clear_buffer","clear_buffer","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","color_uniform_location","context","copy_buffer_to_buffer","copy_buffer_to_buffer","copy_buffer_to_texture","copy_buffer_to_texture","copy_query_results","copy_query_results","copy_size","copy_texture_to_buffer","copy_texture_to_buffer","copy_texture_to_texture","copy_texture_to_texture","create_acceleration_structure","create_acceleration_structure","create_bind_group","create_bind_group","create_bind_group_layout","create_bind_group_layout","create_buffer","create_buffer","create_command_encoder","create_command_encoder","create_compute_pipeline","create_compute_pipeline","create_fence","create_fence","create_pipeline_cache","create_pipeline_cache","create_pipeline_layout","create_pipeline_layout","create_query_set","create_query_set","create_render_pipeline","create_render_pipeline","create_sampler","create_sampler","create_shader_module","create_shader_module","create_texture","create_texture","create_texture_view","create_texture_view","data_type","default","default_framebuffer","deref","destroy_acceleration_structure","destroy_acceleration_structure","destroy_bind_group","destroy_bind_group","destroy_bind_group_layout","destroy_bind_group_layout","destroy_buffer","destroy_buffer","destroy_command_encoder","destroy_command_encoder","destroy_compute_pipeline","destroy_compute_pipeline","destroy_fence","destroy_fence","destroy_pipeline_cache","destroy_pipeline_cache","destroy_pipeline_layout","destroy_pipeline_layout","destroy_query_set","destroy_query_set","destroy_render_pipeline","destroy_render_pipeline","destroy_sampler","destroy_sampler","destroy_shader_module","destroy_shader_module","destroy_texture","destroy_texture","destroy_texture_view","destroy_texture_view","discard_encoding","discard_encoding","dispatch","dispatch","dispatch_indirect","dispatch_indirect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw","draw_indexed","draw_indexed","draw_indexed_indirect","draw_indexed_indirect","draw_indexed_indirect_count","draw_indexed_indirect_count","draw_indirect","draw_indirect","draw_indirect_count","draw_indirect_count","drop","drop","drop","drop_guard","egl_instance","egl_version","end_compute_pass","end_compute_pass","end_debug_marker","end_debug_marker","end_encoding","end_encoding","end_query","end_query","end_render_pass","end_render_pass","exit","exit","external","flush_mapped_ranges","flush_mapped_ranges","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format_desc","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generate_allocator_report","get_acceleration_structure_build_sizes","get_acceleration_structure_build_sizes","get_acceleration_structure_device_address","get_acceleration_structure_device_address","get_fence_value","get_fence_value","get_internal_counters","get_internal_counters","get_presentation_timestamp","get_presentation_timestamp","get_timestamp_period","get_timestamp_period","get_without_egl_lock","inner","insert_debug_marker","insert_debug_marker","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invalidate_mapped_ranges","invalidate_mapped_ranges","is_owned","lock","map_buffer","map_buffer","mip_level_count","new_external","open","open","pipeline_cache_get_data","pipeline_cache_validation_key","place_acceleration_structure_barrier","place_acceleration_structure_barrier","present","present","program","raw_context","raw_display","reset_all","reset_all","reset_queries","reset_queries","set_bind_group","set_bind_group","set_blend_constants","set_blend_constants","set_compute_pipeline","set_compute_pipeline","set_index_buffer","set_index_buffer","set_push_constants","set_push_constants","set_render_pipeline","set_render_pipeline","set_scissor_rect","set_scissor_rect","set_stencil_reference","set_stencil_reference","set_vertex_buffer","set_vertex_buffer","set_viewport","set_viewport","start_capture","start_capture","stop_capture","stop_capture","submit","submit","surface_capabilities","surface_capabilities","texture_format_capabilities","texture_format_capabilities","texture_from_raw","texture_from_raw_renderbuffer","to_owned","to_owned","to_owned","to_owned","to_owned","transition_buffers","transition_buffers","transition_textures","transition_textures","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unmap_buffer","unmap_buffer","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","wait","wait","write_timestamp","write_timestamp","raw","raw","target","AccelerationStructure","Adapter","Api","BindGroup","BindGroupLayout","Buffer","CommandBuffer","CommandEncoder","ComputePipeline","DebugUtilsCreateInfo","DebugUtilsMessengerUserData","Device","EMPTY_RESOLVE_ATTACHMENT_LISTS","FORCE_FILL_BUFFER_WITH_SIZE_GREATER_4096_ALIGNED_OFFSET_16","Fence","FencePool","Instance","InstanceShared","Intermediate","PipelineCache","PipelineLayout","QuerySet","Queue","Raw","RenderPipeline","SEPARATE_ENTRY_POINTS","Sampler","ShaderModule","Surface","SurfaceTexture","Texture","TextureView","TimelineSemaphore","Workarounds","acquire_texture","acquire_texture","add_raw_buffer","add_raw_buffer","add_raw_texture","add_raw_texture","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin_compute_pass","begin_compute_pass","begin_debug_marker","begin_debug_marker","begin_encoding","begin_encoding","begin_query","begin_query","begin_render_pass","begin_render_pass","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_from_raw","build_acceleration_structures","build_acceleration_structures","clear_buffer","clear_buffer","clone","clone","clone_into","clone_into","complement","configure","configure","contains","copy_buffer_to_buffer","copy_buffer_to_buffer","copy_buffer_to_texture","copy_buffer_to_texture","copy_query_results","copy_query_results","copy_texture_to_buffer","copy_texture_to_buffer","copy_texture_to_texture","copy_texture_to_texture","create_acceleration_structure","create_acceleration_structure","create_bind_group","create_bind_group","create_bind_group_layout","create_bind_group_layout","create_buffer","create_buffer","create_command_encoder","create_command_encoder","create_compute_pipeline","create_compute_pipeline","create_fence","create_fence","create_pipeline_cache","create_pipeline_cache","create_pipeline_layout","create_pipeline_layout","create_query_set","create_query_set","create_render_pipeline","create_render_pipeline","create_sampler","create_sampler","create_shader_module","create_shader_module","create_surface","create_surface","create_texture","create_texture","create_texture_view","create_texture_view","desired_extensions","destroy_acceleration_structure","destroy_acceleration_structure","destroy_bind_group","destroy_bind_group","destroy_bind_group_layout","destroy_bind_group_layout","destroy_buffer","destroy_buffer","destroy_command_encoder","destroy_command_encoder","destroy_compute_pipeline","destroy_compute_pipeline","destroy_fence","destroy_fence","destroy_pipeline_cache","destroy_pipeline_cache","destroy_pipeline_layout","destroy_pipeline_layout","destroy_query_set","destroy_query_set","destroy_render_pipeline","destroy_render_pipeline","destroy_sampler","destroy_sampler","destroy_shader_module","destroy_shader_module","destroy_texture","destroy_texture","destroy_texture_view","destroy_texture_view","device_from_raw","difference","discard_encoding","discard_encoding","discard_texture","discard_texture","dispatch","dispatch","dispatch_indirect","dispatch_indirect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw","draw_indexed","draw_indexed","draw_indexed_indirect","draw_indexed_indirect","draw_indexed_indirect_count","draw_indexed_indirect_count","draw_indirect","draw_indirect","draw_indirect_count","draw_indirect_count","drop","drop","empty","enabled_device_extensions","end_compute_pass","end_compute_pass","end_debug_marker","end_debug_marker","end_encoding","end_encoding","end_query","end_query","end_render_pass","end_render_pass","entry","enumerate_adapters","enumerate_adapters","eq","equivalent","equivalent","equivalent","equivalent","exit","exit","expose_adapter","extend","extensions","flush_mapped_ranges","flush_mapped_ranges","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","from_raw","generate_allocator_report","get_acceleration_structure_build_sizes","get_acceleration_structure_build_sizes","get_acceleration_structure_device_address","get_acceleration_structure_device_address","get_fence_value","get_fence_value","get_internal_counters","get_internal_counters","get_presentation_timestamp","get_presentation_timestamp","get_timestamp_period","get_timestamp_period","hash","init","insert","insert_debug_marker","insert_debug_marker","instance_api_version","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","invalidate_mapped_ranges","invalidate_mapped_ranges","is_all","is_empty","iter","iter_names","map_buffer","map_buffer","not","open","open","physical_device_capabilities","physical_device_features","pipeline_cache_get_data","pipeline_cache_get_data","pipeline_cache_validation_key","pipeline_cache_validation_key","place_acceleration_structure_barrier","place_acceleration_structure_barrier","present","present","queue_family_index","queue_index","raw_device","raw_handle","raw_handle","raw_handle","raw_instance","raw_physical_device","raw_physical_device","raw_queue","raw_swapchain","remove","required_device_extensions","reset_all","reset_all","reset_queries","reset_queries","set","set_bind_group","set_bind_group","set_blend_constants","set_blend_constants","set_compute_pipeline","set_compute_pipeline","set_index_buffer","set_index_buffer","set_next_present_time","set_push_constants","set_push_constants","set_render_pipeline","set_render_pipeline","set_scissor_rect","set_scissor_rect","set_stencil_reference","set_stencil_reference","set_vertex_buffer","set_vertex_buffer","set_viewport","set_viewport","shared_instance","shared_instance","shared_instance","start_capture","start_capture","stop_capture","stop_capture","sub","sub_assign","submit","submit","surface_capabilities","surface_capabilities","symmetric_difference","texture_format_capabilities","texture_format_capabilities","texture_from_raw","to_owned","to_owned","toggle","transition_buffers","transition_buffers","transition_textures","transition_textures","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unconfigure","unconfigure","union","unmap_buffer","unmap_buffer","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","wait","wait","write_timestamp","write_timestamp","active","free","last_completed","naga_shader","runtime_checks"],"q":[[0,"wgpu_hal"],[2243,"wgpu_hal::api"],[2246,"wgpu_hal::auxil"],[2249,"wgpu_hal::auxil::db"],[2258,"wgpu_hal::auxil::db::amd"],[2259,"wgpu_hal::auxil::db::apple"],[2260,"wgpu_hal::auxil::db::arm"],[2261,"wgpu_hal::auxil::db::broadcom"],[2262,"wgpu_hal::auxil::db::imgtec"],[2263,"wgpu_hal::auxil::db::intel"],[2266,"wgpu_hal::auxil::db::mesa"],[2267,"wgpu_hal::auxil::db::nvidia"],[2268,"wgpu_hal::auxil::db::qualcomm"],[2269,"wgpu_hal::empty"],[2526,"wgpu_hal::gles"],[3073,"wgpu_hal::gles::TextureInner"],[3076,"wgpu_hal::vulkan"],[3707,"wgpu_hal::vulkan::Fence"],[3710,"wgpu_hal::vulkan::ShaderModule"],[3712,"core::time"],[3713,"core::option"],[3714,"core::result"],[3715,"core::any"],[3716,"wgpu_types"],[3717,"core::iter::traits::collect"],[3718,"core::clone"],[3719,"core::marker"],[3720,"core::iter::traits::iterator"],[3721,"core::ops::range"],[3722,"wgpu_types"],[3723,"wgpu_types"],[3724,"raw_window_handle"],[3725,"alloc::vec"],[3726,"core::fmt"],[3727,"core::fmt"],[3728,"gpu_descriptor::allocator"],[3729,"gpu_alloc::error"],[3730,"alloc::string"],[3731,"wgpu_types::counters"],[3732,"bitflags::iter"],[3733,"bitflags::iter"],[3734,"wgpu_types"],[3735,"core::any"],[3736,"core::num::nonzero"],[3737,"khronos_egl"],[3738,"khronos_egl"],[3739,"parking_lot::mutex"],[3740,"core::ffi"],[3741,"core::ops::function"],[3742,"std::os::raw"],[3743,"khronos_egl::egl1_0"],[3744,"core::num::nonzero"],[3745,"ash::entry"],[3746,"wgpu_types"],[3747,"ash::device"],[3748,"ash::vk::definitions"],[3749,"ash::vk::definitions"]],"d":["","","","","","","","","Allow the acceleration structure to be compacted in a copy …","Allow for incremental updates (no change in size), …","","<code>offset</code> - offset in bytes","","Flags for acceleration structures","","Information of the required size for a corresponding …","","Entries for a single descriptor","","Flags for acceleration structure geometries","<code>offset</code> - offset in bytes","<code>offset</code> - offset in bytes","<code>offset</code> - offset in bytes","<code>first_vertex</code> - offset in the vertex buffer (as number of …","","","","","","","","","","","","","","BindGroup descriptor.","","","BindGroupLayout descriptor.","Pipeline layout creation flags.","","","","A region of a buffer made visible to shaders via a …","","","","","Similar to <code>wgt::BufferUsages</code> but for internal use.","","Updates use source_acceleration_structure if present, else …","","Format can be used as color and input attachment.","Format can be used as color (with blending) and input …","The color target of a renderpass.","Flag used by the wgpu-core texture tracker to say a …","Format can be copied to.","The destination of a hardware copy.","The destination of a hardware copy.","Format can be copied from.","The source of a hardware copy.","The source of a hardware copy.","","","This API’s command buffer type.","Encoder and allocation pool for <code>CommandBuffer</code>s.","","","","","","Describes a compute pipeline.","","","","Format can be used as depth-stencil and input attachment.","Read-only depth stencil usage.","Read-write depth stencil usage","","","A connection to a GPU and a pool of resources to use with …","","","","","","","A callback to signal that wgpu is no longer using a …","","","","","","","","","","","","","","","","","","","","","Base trait for all resources, allows downcasting via <code>Any</code>.","","","","","","","The combination of states that a buffer must exclusively …","The combination of states that a texture must exclusively …","","","Include support for <code>first_vertex</code> / <code>first_instance</code> drawing.","A value you can block on to wait for something to finish.","","Texture format capability flags.","All buffers, buffer addresses and offsets will be ignored.…","The combination of states that a buffer may be in <em>at the </em>…","The combination of states that a texture may be in <em>at the </em>…","The index buffer used for drawing.","The indirect or count buffer in a indirect draw or …","","","","Error occurring while trying to create an instance, or …","","","Optimize for low memory footprint (both while building and …","","","","","The argument to a read-only mapping.","The argument to a write-only mapping.","","","","","","","Format can be used for render pass resolve targets.","Format can be multisampled by x16.","Format can be multisampled by x2.","Format can be multisampled by x4.","Format can be multisampled by x8.","","","NO_DUPLICATE_ANY_HIT_INVOCATION, not useful unless using …","Include support for num work groups builtin.","","Naga shader module.","No value.","Is OPAQUE (is there no alpha test) recommended as …","The combination of all usages that the are guaranteed to …","The combination of all usages that the are guaranteed to …","","","","","Allows for bind group binding arrays to be shorter than …","","","","","Optimize for fast build time, recommended if geometry is …","Optimize for fast ray tracing performance, recommended if …","Ready to present image to the surface.","","","","","","","","","Pipeline layout creation flags.","Describes a programmable pipeline stage.","A buffer used to store query results.","Size of a single occlusion/timestamp query, when copied …","","","","Read-only sampled or fetched resource.","","","","Describes a render (graphics) pipeline.","","Format can be sampled.","Format can be sampled with a linear sampler.","Format can be sampled with a min/max reduction sampler.","","","Format can be used as storage with write-only access.","Format can be used as storage with atomics.","A read-only storage buffer used in a bind group.","Read-only storage buffer usage. Corresponds to a UAV in …","Format can be used as storage with read and read/write …","A read-write or write-only buffer used in a bind group.","Read-write or write-only storage buffer usage.","","","","","Shader input.","","","Some value of type <code>T</code>.","","","","Describes information about what a <code>Surface</code>’s …","","","","","","","","","","","","Texture format capability flags.","Similar to <code>wgt::TextureUsages</code> but for internal use.","","TextureView descriptor.","","","A uniform buffer bound in a bind group.","The texture is in unknown state.","Flag used by the wgpu-core texture tracker to say that the …","","","Stores the text of any validation errors that have …","A vertex buffer used for drawing.","Flag for internal testing.","Describes how the vertex buffer is interpreted.","","","","Return the next texture to be presented by <code>self</code>, for the …","","","","A hook for when a wgpu-core buffer is created from a raw …","","A hook for when a wgpu-core texture is created from a raw …","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","The stride, in bytes, between elements of this buffer.","","","","","The list of attributes which comprise a single vertex.","","Returns the backend this adapter is using.","","Begin a new compute pass, clearing all active bindings.","","","","Begin encoding a new command buffer.","","Safety:","","Begin a new render pass, clearing all active bindings.","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The buffer being bound.","","","","","","The alignment of the start of the buffer used as a GPU …","The alignment of the row pitch of the texture data stored …","","","","To get the required sizes for the buffer allocations use …","","The cache which will be used and filled when compiling …","The cache which will be used and filled when compiling …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The effect of draw calls on the color aspect of the output …","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Alpha composition mode.","List of supported alpha composition modes.","","Configure <code>self</code> to use <code>device</code>.","Pipeline constants","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","","","","Copy from buffer to texture. Works with a single array …","","","","","Copy from texture to buffer. Works with a single array …","","Copy from one texture to another. Works with a single …","","","","","","","","","","Creates a bind group layout.","","Creates a new buffer.","","Create a fresh <code>CommandEncoder</code>.","","","","","","","","","","","","","","","","","","","","Creates a new texture.","","","Current extent of the surface, if known.","","Source codes for debug","","","","The effect of draw calls on the depth and stencil aspects …","","","","","","","","","","","","Free <code>buffer</code> and any GPU resources it owns.","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","Discard the command list under construction.","","Relinquish an acquired texture without presenting it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A dummy API implementation.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","The upper bound of the range (exclusive).","","End the current compute pass.","","","","Return a fresh <code>CommandBuffer</code> holding the recorded commands.","","","Safety:","","End the current render pass.","","","","","The name of the entry point in the compiled shader. There …","","<code>surface_hint</code> is only used by the GLES backend targeting …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exit connection to this logical device.","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Requested texture extent. Must be in …","","","","","","","","","","","","","","Indicate that CPU writes to mapped buffer memory should be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Format of the surface textures.","","","List of supported texture formats.","The fragment stage for this pipeline.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","Returns any API validation errors that have occurred in …","","","","","","Creates a <code>PresentationTimestamp</code> using the adapter’s WSI.","","","GLES API internals.","","","","","","","","","","","","","","","","","Analysis information of the module.","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Indicate that GPU writes to mapped buffer memory should be …","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","","","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns <code>true</code> if only one flag is set","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","","","","","","","","","","","","","","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","","","","","","Return a pointer to CPU memory mapping the contents of …","","","Range for the number of queued frames.","Maximum number of queued frames. Must be in …","","","","","","","","","Shader module IR.","The compiled shader module for this stage.","The multi-sampling properties of the pipeline.","If the pipeline will be used with a multiview render pass, …","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The offset at which the bound region starts.","","","","","","","","Origin within a texture. Note: for 1D and 2D textures, Z …","","","","","","","","","","Vertical synchronization mode.","List of supported V-sync modes.","The properties of the pipeline at the primitive assembly …","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","Reclaim all resources belonging to this <code>CommandEncoder</code>.","","","","","Enforce bounds checks in shaders, even if the underlying …","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","Sets the bind group at <code>index</code> to <code>group</code>.","","","","","","","","Sets a range in push constant data.","","","","","","","","","","","","","The size of the region bound, in bytes.","","","","","","","","","","","","","","The compiled compute stage and its entry point.","The lower bound of the range (inclusive).","","","","How often this vertex buffer is “stepped” forward.","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","Submit <code>command_buffers</code> for execution on GPU.","The presentation configuration no longer matches the …","The presentation configuration no longer matches the …","","Returns the capabilities of working with a specified …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","Return the set of supported capabilities for a texture …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …nconfigure <code>self</code> on <code>device</code>.","The finest alignment of bound range checking for uniform …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Remove the mapping established by the last call to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Supported texture usage flags.","","","","","Allowed usage of surface textures,","","","Contains either a single mutating usage as a target, or a …","","","The format of any vertex buffers used with this pipeline.","","","The vertex stage for this pipeline.","","","","Allows views of this texture to have a different format …","Allows views of swapchain texture to have a different …","Vulkan API internals.","","","Wait for <code>fence</code> to reach <code>value</code>.","","","","","","Whether workgroup scoped memory will be initialized with …","","","","Maximum binding size for the shaders that only support <code>i32</code> …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A wrapper around a <code>glow::Context</code> and the required EGL …","A guard containing a lock to an <code>AdapterContext</code>, while the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the underlying EGL context.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the EGL instance.","Returns the EGL version the adapter context was created …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Get’s the <code>glow::Context</code> without waiting for a lock","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Obtain a lock to the EGL context and get handle to the …","","","","Creates a new external adapter using the specified loader …","","","","","","","","","","","Returns the EGLDisplay corresponding to the adapter …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","User data needed by …","","Qualcomm OOMs when there are zero color attachments but a …","If the following code returns false, then nvidia will end …","The <code>Api::Fence</code> type for <code>vulkan::Api</code>.","A collection of Vulkan fences, each associated with a …","","","","","","","","","","Only generate SPIR-V for one entry point at a time.","","","","","","","A Vulkan timeline semaphore.","Workaround flags.","","","","","","","Get a flags value with all known bits set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the instance extension names wgpu would like to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Safety","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","Create a <code>PhysicalDeviceFeatures</code> for opening a logical …","","","","","","","","","Returns the queue family index of the device’s internal …","","","Safety","Safety","Safety","","","","","Get the raw Vulkan swapchain associated with this surface.","The intersection of a source flags value with the …","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","Set the present timing information which will be used for …","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","Safety","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The pending fence values have to be ascending.","","","",""],"i":[123,9,151,15,153,38,137,23,26,26,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,23,25,25,11,0,0,11,0,0,97,11,0,0,0,0,0,0,0,98,0,20,19,19,24,24,19,23,24,19,23,24,0,0,11,0,11,0,54,0,11,0,0,20,20,19,24,24,0,0,0,54,55,56,6,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,24,55,0,17,11,0,0,0,23,24,23,23,0,11,0,0,137,22,26,0,55,41,6,23,23,0,0,0,0,0,0,19,19,19,19,19,0,0,27,17,119,0,40,27,23,24,0,6,41,6,18,20,20,20,21,26,26,24,0,11,0,0,55,0,11,0,0,0,23,0,11,0,11,24,0,0,11,0,41,19,19,19,25,20,19,19,23,24,19,23,24,22,11,0,0,0,11,0,40,119,0,11,0,0,0,11,23,21,11,0,0,0,0,0,0,0,11,0,97,137,23,24,24,41,98,0,23,0,0,99,74,1,9,33,131,12,15,12,15,65,60,17,18,19,20,21,22,23,24,25,26,27,65,0,91,28,84,30,30,91,32,84,0,33,35,38,35,38,35,38,35,38,35,38,95,67,73,17,18,19,20,21,22,23,24,25,26,27,17,18,19,20,21,22,23,24,25,26,27,17,18,19,20,21,22,23,24,25,26,27,17,18,19,20,21,22,23,24,25,26,27,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,17,18,19,20,21,22,23,24,25,26,27,17,18,19,20,21,22,23,24,25,26,27,65,139,33,128,134,119,118,115,145,5,41,54,55,56,6,57,17,18,19,20,21,22,23,24,58,59,60,131,61,10,136,62,63,28,64,65,66,67,71,72,73,74,76,78,79,81,84,85,86,87,88,89,90,91,32,51,52,92,93,94,95,43,37,96,97,98,99,47,100,137,101,102,103,104,105,25,106,26,27,139,33,128,134,119,118,115,145,5,41,54,55,56,6,57,17,18,19,20,21,22,23,24,58,59,60,131,61,10,136,62,63,28,64,65,66,67,71,72,73,74,76,78,79,81,84,85,86,87,88,89,90,91,32,51,52,92,93,94,95,43,37,96,97,98,99,47,100,137,101,102,103,104,105,25,106,26,27,71,88,102,103,104,105,59,59,52,74,35,38,99,81,85,33,131,51,52,35,38,93,94,41,54,55,56,6,57,17,18,19,20,21,22,23,24,58,59,60,61,62,63,28,64,65,66,67,71,72,73,74,76,78,79,81,84,85,86,87,88,89,90,91,32,51,52,92,93,94,95,43,37,96,97,98,99,47,100,101,102,103,104,105,25,106,26,27,41,54,55,56,6,57,17,18,19,20,21,22,23,24,58,59,60,61,62,63,28,64,65,66,67,71,72,73,74,76,78,79,81,84,85,86,87,88,89,90,91,32,51,52,92,93,94,95,43,37,96,97,98,99,47,100,101,102,103,104,105,25,106,26,27,43,85,65,17,18,19,20,21,22,23,24,25,26,27,86,61,1,9,79,17,18,19,20,21,22,23,24,25,26,27,26,27,35,38,35,38,28,35,38,35,38,35,38,73,102,103,104,12,15,12,15,12,15,12,15,12,15,12,15,12,15,12,15,12,15,12,15,12,15,12,15,12,15,120,123,12,15,12,15,61,115,134,99,32,94,85,43,26,27,47,12,15,12,15,12,15,12,15,12,15,12,15,12,15,12,15,12,15,12,15,12,15,12,15,12,15,12,15,12,15,139,136,17,18,19,20,21,22,23,24,25,26,27,28,64,35,38,1,9,35,38,35,38,139,33,128,134,119,118,115,145,5,41,54,55,56,6,57,17,18,19,20,21,22,23,24,58,59,60,131,61,10,136,62,63,28,64,65,66,67,71,72,73,74,76,78,79,81,84,85,86,87,88,89,90,91,32,51,52,92,93,94,95,43,37,96,97,98,99,47,100,137,101,102,103,104,105,25,106,26,27,60,35,38,35,38,35,38,35,38,35,38,35,38,128,51,90,58,0,17,18,19,20,21,22,23,24,25,26,27,53,35,38,35,38,35,38,95,35,38,35,38,66,74,47,100,79,120,123,41,54,55,56,6,17,18,19,20,21,22,23,24,97,98,99,25,26,27,41,41,41,41,54,54,54,54,55,55,55,55,56,56,56,56,6,6,6,6,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,97,97,97,97,98,98,98,98,99,99,99,99,25,25,25,25,26,26,26,26,27,27,27,27,12,15,71,72,92,93,94,95,17,18,19,20,21,22,23,24,25,26,27,86,43,33,131,78,101,58,66,67,47,100,101,102,12,15,128,134,5,41,41,54,54,55,55,56,56,6,6,57,57,17,17,17,17,17,18,18,18,18,18,19,19,19,19,19,20,20,20,20,20,21,21,21,21,21,22,22,22,22,22,23,23,23,23,23,24,24,24,24,24,58,59,60,131,61,10,136,62,63,28,64,65,66,67,71,72,73,74,76,78,79,81,84,85,86,87,88,89,90,91,32,51,52,92,93,94,95,43,37,96,97,98,99,47,100,137,101,102,103,104,105,25,25,25,25,25,106,26,26,26,26,26,27,27,27,27,27,28,64,86,96,104,61,85,139,139,33,33,128,134,119,118,115,145,5,41,41,41,41,54,54,55,55,56,56,6,6,57,17,18,19,20,20,21,22,23,24,58,59,60,131,61,10,136,62,63,28,64,65,66,67,71,72,73,74,76,78,79,81,84,85,86,87,88,89,90,91,32,51,52,92,93,94,95,43,37,96,97,98,99,47,100,137,101,102,103,104,105,25,106,26,27,17,18,19,20,21,22,23,24,25,26,27,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,17,18,19,20,21,22,23,24,25,26,27,17,18,19,20,21,22,23,24,25,26,27,17,18,19,20,21,22,23,24,25,26,27,12,15,12,15,12,15,145,12,15,12,15,149,151,77,153,0,58,87,17,18,19,20,21,22,23,24,25,26,27,32,101,33,134,131,123,17,18,19,20,21,22,23,24,25,26,27,35,38,17,18,19,20,21,22,23,24,25,26,27,17,18,19,20,21,22,23,24,25,26,27,139,33,128,134,119,118,115,145,5,41,54,55,56,6,57,17,18,19,20,21,22,23,24,58,59,60,131,61,10,136,62,63,28,64,65,66,67,71,72,73,74,76,78,79,81,84,85,86,87,88,89,90,91,32,51,52,92,93,94,95,43,37,96,97,98,99,47,100,137,101,102,103,104,105,25,106,26,27,17,18,19,20,21,22,23,24,25,26,27,12,15,17,18,19,20,21,22,23,24,25,26,27,62,28,17,18,19,20,21,22,23,24,25,26,27,20,17,18,19,20,21,22,23,24,25,26,27,17,18,19,20,21,22,23,24,25,26,27,118,115,63,28,64,65,66,67,74,76,81,85,43,37,96,74,81,85,60,65,65,20,12,15,32,91,61,86,63,28,32,65,91,28,65,47,134,79,85,85,43,58,20,17,18,19,20,21,22,23,24,25,26,27,43,71,102,103,104,105,149,151,93,91,12,15,12,12,15,35,38,77,153,86,61,85,62,67,95,139,136,76,64,89,17,18,19,20,21,22,23,24,25,26,27,35,38,35,38,93,73,118,28,43,74,47,47,26,27,17,18,19,20,21,22,23,24,25,26,27,35,38,35,38,35,38,35,38,35,38,35,38,35,38,35,38,35,38,35,38,63,28,71,90,51,52,96,54,55,56,6,57,47,78,51,90,81,53,12,15,94,84,12,15,102,17,18,19,20,21,22,23,24,25,26,27,17,18,19,20,21,22,23,24,25,26,27,77,153,5,10,149,151,17,18,19,20,21,22,23,24,25,26,27,93,94,5,10,89,52,149,151,74,43,37,41,54,55,56,6,57,17,18,19,20,21,22,23,24,58,59,60,61,62,63,28,64,65,66,67,71,72,73,74,76,78,79,81,84,85,86,87,88,89,90,91,32,51,52,92,93,94,95,43,37,96,97,98,99,47,100,101,102,103,104,105,25,106,26,27,41,54,55,56,6,57,17,18,19,20,21,22,23,24,25,26,27,101,35,38,35,38,139,33,128,134,119,118,115,145,5,41,54,55,56,6,57,17,18,19,20,21,22,23,24,58,59,60,131,61,10,136,62,63,28,64,65,66,67,71,72,73,74,76,78,79,81,84,85,86,87,88,89,90,91,32,51,52,92,93,94,95,43,37,96,97,98,99,47,100,137,101,102,103,104,105,25,106,26,27,139,33,128,134,119,118,115,145,5,41,54,55,56,6,57,17,18,19,20,21,22,23,24,58,59,60,131,61,10,136,62,63,28,64,65,66,67,71,72,73,74,76,78,79,81,84,85,86,87,88,89,90,91,32,51,52,92,93,94,95,43,37,96,97,98,99,47,100,137,101,102,103,104,105,25,106,26,27,139,33,128,134,119,118,115,145,5,41,54,55,56,6,57,17,18,19,20,21,22,23,24,58,59,60,131,61,10,136,62,63,28,64,65,66,67,71,72,73,74,76,78,79,81,84,85,86,87,88,89,90,91,32,51,52,92,93,94,95,43,37,96,97,98,99,47,100,137,101,102,103,104,105,25,106,26,27,1,9,59,17,18,19,20,21,22,23,24,25,26,27,12,15,139,33,128,134,119,118,115,145,5,41,54,55,56,6,57,17,18,19,20,21,22,23,24,58,59,60,131,61,10,136,62,63,28,64,65,66,67,71,72,73,74,76,78,79,81,84,85,86,87,88,89,90,91,32,51,52,92,93,94,95,43,37,96,97,98,99,47,100,137,101,102,103,104,105,25,106,26,27,99,61,63,28,64,72,86,88,89,92,106,101,85,101,101,85,101,72,92,28,86,0,87,12,15,32,35,38,87,87,79,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,170,170,170,170,170,170,173,171,170,173,171,173,173,173,173,173,173,173,173,173,173,170,172,173,171,171,170,172,173,171,173,173,173,173,172,172,170,170,173,173,173,173,173,173,173,173,173,173,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,173,173,170,170,173,173,173,173,170,172,173,171,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,170,170,170,170,170,170,172,173,171,170,172,173,171,170,170,170,170,170,170,170,170,170,170,170,170,170,170,173,173,170,172,173,171,170,170,170,170,170,170,170,170,173,173,170,170,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,170,170,170,170,170,170,170,170,170,170,172,173,173,173,173,170,172,173,171,170,172,173,171,170,172,173,171,170,170,170,170,170,172,173,171,170,170,173,173,0,0,0,0,0,0,0,0,0,0,0,198,0,0,0,0,0,0,0,198,0,0,0,0,198,0,0,0,176,178,178,178,178,180,176,178,181,182,179,180,183,184,185,186,187,188,189,190,191,192,193,194,195,176,178,181,182,179,180,183,184,185,186,187,188,189,190,191,192,193,194,195,182,182,182,182,182,182,182,182,182,182,177,199,176,178,251,181,182,196,197,179,198,180,180,183,184,185,186,187,188,189,190,191,192,193,194,195,177,199,176,178,251,181,182,196,197,179,198,180,183,184,185,186,187,188,189,190,191,192,193,194,195,182,182,182,182,196,197,179,198,183,196,197,179,198,183,251,178,182,182,182,182,182,182,180,182,182,182,182,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,197,195,180,199,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,182,182,182,182,182,182,177,199,176,178,251,181,182,196,197,179,198,180,183,184,185,186,187,188,189,190,191,192,193,194,195,182,182,182,182,182,182,182,182,182,182,182,182,177,199,182,180,177,177,182,182,182,182,182,182,182,182,182,182,178,178,197,178,178,182,196,197,179,198,180,183,184,185,186,187,188,189,190,191,192,193,194,195,180,180,177,199,176,178,251,181,182,196,197,179,198,180,183,184,185,186,187,188,189,190,191,192,193,194,195,178,178,178,178,178,178,178,178,178,176,176,181,181,177,180,182,182,197,177,199,176,178,251,181,182,196,197,179,198,180,183,184,185,186,187,188,189,190,191,192,193,194,195,178,178,177,177,178,178,180,176,176,176,178,178,182,182,181,181,251,177,177,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,178,178,178,178,181,181,176,176,176,176,178,178,196,197,179,198,183,182,182,182,182,177,199,176,178,251,181,182,196,197,179,198,180,183,184,185,186,187,188,189,190,191,192,193,194,195,177,199,176,178,251,181,182,196,197,179,198,180,183,184,185,186,187,188,189,190,191,192,193,194,195,177,199,176,178,251,181,182,196,197,179,198,180,183,184,185,186,187,188,189,190,191,192,193,194,195,178,178,177,199,176,178,251,181,182,196,197,179,198,180,183,184,185,186,187,188,189,190,191,192,193,194,195,178,178,182,182,252,253,253,0,0,0,0,0,0,0,0,0,0,0,0,217,217,0,212,0,0,230,0,0,0,0,230,0,217,0,0,0,0,0,0,212,0,211,211,214,214,214,214,217,218,211,219,214,220,221,222,215,223,216,224,225,226,227,228,229,230,231,232,233,234,212,218,211,219,214,220,221,222,215,223,216,224,225,226,227,228,229,230,231,232,233,234,212,221,221,221,221,221,221,221,221,221,221,217,217,217,217,217,217,217,217,244,240,218,211,219,214,220,221,213,242,222,222,222,217,215,223,216,224,225,226,227,228,229,230,231,232,233,234,212,244,240,218,211,219,214,220,221,213,242,222,217,215,223,216,224,225,226,227,228,229,230,231,232,233,234,212,214,221,221,221,221,213,217,213,217,217,211,211,217,221,221,221,221,221,221,221,221,221,221,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,218,218,214,214,214,214,218,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,219,217,221,221,211,211,221,221,221,221,244,240,218,211,219,214,220,221,213,242,222,217,215,223,216,224,225,226,227,228,229,230,231,232,233,234,212,221,221,221,221,221,221,221,221,221,221,221,221,240,211,217,214,221,221,221,221,221,221,221,221,221,221,240,218,218,217,217,217,217,217,214,214,218,217,240,214,214,221,213,242,222,217,217,217,217,217,215,223,216,224,225,226,227,228,229,230,231,232,233,234,212,244,240,218,211,219,214,220,221,213,242,222,217,215,223,216,224,225,226,227,228,229,230,231,232,233,234,212,217,217,217,217,217,217,218,214,214,214,214,214,214,214,214,214,219,219,220,220,217,218,217,221,221,240,217,217,244,240,218,211,219,214,220,221,213,242,222,217,215,223,216,224,225,226,227,228,229,230,231,232,233,234,212,217,214,214,217,217,217,217,214,214,217,219,219,219,219,214,214,214,214,221,221,220,220,214,214,214,221,216,224,240,219,214,214,211,217,219,221,221,221,221,217,221,221,221,221,221,221,221,221,211,221,221,221,221,221,221,221,221,221,221,221,221,218,219,214,214,214,214,214,217,217,220,220,219,219,217,219,219,214,213,217,217,221,221,221,221,244,240,218,211,219,214,220,221,213,242,222,217,215,223,216,224,225,226,227,228,229,230,231,232,233,234,212,244,240,218,211,219,214,220,221,213,242,222,217,215,223,216,224,225,226,227,228,229,230,231,232,233,234,212,244,240,218,211,219,214,220,221,213,242,222,217,215,223,216,224,225,226,227,228,229,230,231,232,233,234,212,211,211,217,214,214,244,240,218,211,219,214,220,221,213,242,222,217,215,223,216,224,225,226,227,228,229,230,231,232,233,234,212,214,214,221,221,254,254,254,255,255],"fc":[],"p":[[10,"DynSurface",0],[5,"Duration",3712],[6,"Option",3713],[10,"DynFence",0],[5,"DynAcquiredSurfaceTexture",0],[6,"SurfaceError",0],[6,"Result",3714],[17,"A"],[10,"Surface",0],[5,"AcquiredSurfaceTexture",0],[10,"Api",0],[10,"DynDevice",0],[10,"DynBuffer",0],[1,"tuple"],[10,"Device",0],[10,"DynTexture",0],[5,"PipelineLayoutFlags",0],[5,"BindGroupLayoutFlags",0],[5,"TextureFormatCapabilities",0],[5,"FormatAspects",0],[5,"MemoryFlags",0],[5,"AttachmentOps",0],[5,"BufferUses",0],[5,"TextureUses",0],[5,"AccelerationStructureUses",0],[5,"AccelerationStructureBuildFlags",0],[5,"AccelerationStructureGeometryFlags",0],[5,"TextureDescriptor",0],[1,"u32"],[10,"DynResource",0],[10,"Any",3715],[5,"CopyExtent",0],[5,"DynExposedAdapter",0],[6,"Backend",3716],[10,"DynCommandEncoder",0],[10,"DynQuerySet",0],[5,"ComputePassDescriptor",0],[10,"CommandEncoder",0],[1,"str"],[8,"Label",0],[6,"DeviceError",0],[10,"DynTextureView",0],[5,"RenderPassDescriptor",0],[1,"u8"],[1,"u16"],[10,"DynAccelerationStructure",0],[5,"BuildAccelerationStructureDescriptor",0],[1,"slice"],[17,"Item"],[10,"IntoIterator",3717],[5,"TextureCopy",0],[5,"BufferTextureCopy",0],[8,"MemoryRange",0],[6,"ShaderError",0],[6,"PipelineError",0],[6,"PipelineCacheError",0],[5,"InstanceError",0],[5,"InstanceDescriptor",0],[5,"Alignments",0],[5,"Capabilities",0],[5,"SurfaceCapabilities",0],[5,"BufferMapping",0],[5,"BufferDescriptor",0],[5,"TextureViewDescriptor",0],[5,"SamplerDescriptor",0],[5,"BindGroupLayoutDescriptor",0],[5,"PipelineLayoutDescriptor",0],[10,"Clone",3718],[10,"DynBindGroupLayout",0],[10,"Sized",3719],[5,"BufferBinding",0],[5,"TextureBinding",0],[5,"BindGroupEntry",0],[5,"BindGroupDescriptor",0],[10,"DynSampler",0],[5,"CommandEncoderDescriptor",0],[10,"DynQueue",0],[5,"DebugSource",0],[5,"ProgrammableStage",0],[10,"DynShaderModule",0],[5,"ComputePipelineDescriptor",0],[10,"DynPipelineLayout",0],[10,"DynPipelineCache",0],[5,"VertexBufferLayout",0],[5,"RenderPipelineDescriptor",0],[5,"SurfaceConfiguration",0],[5,"Rect",0],[5,"BufferBarrier",0],[5,"TextureBarrier",0],[5,"BufferCopy",0],[5,"TextureCopyBase",0],[5,"Attachment",0],[5,"ColorAttachment",0],[5,"DepthStencilAttachment",0],[5,"PassTimestampWrites",0],[5,"AccelerationStructureDescriptor",0],[6,"AccelerationStructureFormat",0],[6,"AccelerationStructureBuildMode",0],[5,"AccelerationStructureBuildSizes",0],[5,"GetAccelerationStructureBuildSizesDescriptor",0],[5,"AccelerationStructureTriangles",0],[5,"AccelerationStructureAABBs",0],[5,"AccelerationStructureInstances",0],[5,"AccelerationStructureTriangleIndices",0],[5,"AccelerationStructureTriangleTransform",0],[5,"AccelerationStructureBarrier",0],[1,"bool"],[10,"Iterator",3720],[5,"Range",3721],[8,"BufferAddress",3716],[8,"BufferSize",3716],[5,"Box",3722],[10,"DynBindGroup",0],[10,"DynComputePipeline",0],[5,"PipelineCacheDescriptor",0],[5,"QuerySetDescriptor",3716],[10,"DynRenderPipeline",0],[5,"ShaderModuleDescriptor",0],[6,"ShaderInput",0],[10,"DynInstance",0],[6,"RawDisplayHandle",3723],[6,"RawWindowHandle",3723],[10,"Instance",0],[10,"Deserializer",3724],[10,"DynSurfaceTexture",0],[1,"array"],[1,"i32"],[5,"DropGuard",0],[10,"DynCommandBuffer",0],[5,"Vec",3725],[5,"ExposedAdapter",0],[5,"Formatter",3726],[8,"Result",3726],[5,"NagaShader",0],[10,"Debug",3726],[5,"OpenDevice",0],[6,"AccelerationStructureEntries",0],[5,"Error",3726],[5,"DynOpenDevice",0],[6,"AllocationError",3727],[6,"AllocationError",3728],[6,"MapError",3727],[6,"TextureFormat",3716],[5,"AllocatorReport",3729],[5,"ValidationCanary",0],[5,"String",3730],[8,"FenceValue",0],[5,"HalCounters",3729],[10,"DynAdapter",0],[5,"PresentationTimestamp",3716],[10,"Adapter",0],[1,"f32"],[10,"Queue",0],[10,"Hasher",3731],[5,"Iter",3732],[5,"IterNames",3732],[6,"TextureAspect",3716],[5,"Extent3d",3716],[6,"TextureDimension",3716],[5,"Features",3716],[5,"Limits",3716],[6,"MemoryHints",3716],[10,"Serializer",3733],[8,"DynamicOffset",3716],[6,"IndexFormat",3716],[5,"ShaderStages",3716],[10,"Error",3734],[5,"TypeId",3715],[6,"ShaderStage",3735],[5,"Context",2269],[5,"Resource",2269],[5,"Api",2269],[5,"Encoder",2269],[1,"u64"],[5,"NonZeroU64",3736],[5,"Adapter",2526],[5,"AdapterContext",2526],[5,"Device",2526],[5,"Buffer",2526],[5,"Texture",2526],[5,"Queue",2526],[5,"CommandEncoder",2526],[5,"TextureView",2526],[5,"Sampler",2526],[5,"BindGroupLayout",2526],[5,"PipelineLayout",2526],[5,"BindGroup",2526],[5,"ShaderModule",2526],[5,"RenderPipeline",2526],[5,"ComputePipeline",2526],[5,"QuerySet",2526],[5,"Fence",2526],[5,"AccelerationStructure",2526],[5,"PipelineCache",2526],[5,"CommandBuffer",2526],[5,"Api",2526],[5,"TextureFormatDesc",2526],[6,"TextureInner",2526],[5,"AdapterContextLock",2526],[5,"EGL1_4",3737],[8,"DynamicInstance",3737],[5,"Context",3738],[8,"MappedMutexGuard",3739],[17,"Output"],[6,"c_void",3740],[10,"FnMut",3741],[8,"c_void",3742],[5,"Display",3743],[5,"NonZeroU32",3736],[8,"DropCallback",0],[5,"Surface",3076],[6,"Fence",3076],[5,"Api",3076],[5,"Device",3076],[5,"Buffer",3076],[5,"Texture",3076],[5,"Workarounds",3076],[5,"Instance",3076],[5,"Adapter",3076],[5,"Queue",3076],[5,"CommandEncoder",3076],[5,"SurfaceTexture",3076],[5,"AccelerationStructure",3076],[5,"TextureView",3076],[5,"Sampler",3076],[5,"BindGroupLayout",3076],[5,"PipelineLayout",3076],[5,"BindGroup",3076],[5,"CommandBuffer",3076],[6,"ShaderModule",3076],[5,"RenderPipeline",3076],[5,"ComputePipeline",3076],[5,"PipelineCache",3076],[5,"QuerySet",3076],[5,"Buffer",3744],[5,"Entry",3745],[5,"InstanceFlags",3716],[5,"CStr",3746],[5,"Device",3747],[5,"InstanceShared",3076],[5,"PhysicalDevice",3744],[5,"DebugUtilsMessengerUserData",3076],[5,"Instance",3748],[5,"DebugUtilsCreateInfo",3076],[5,"CommandBuffer",3744],[5,"Image",3744],[5,"ImageView",3744],[5,"Queue",3744],[5,"SwapchainKHR",3744],[5,"PresentTimeGOOGLE",3744],[5,"ShaderClearProgram",2526],[15,"Renderbuffer",3073],[15,"Texture",3073],[15,"FencePool",3707],[15,"Intermediate",3710]],"b":[[339,"impl-PipelineLayoutFlags"],[340,"impl-Flags-for-PipelineLayoutFlags"],[341,"impl-Flags-for-BindGroupLayoutFlags"],[342,"impl-BindGroupLayoutFlags"],[343,"impl-Flags-for-TextureFormatCapabilities"],[344,"impl-TextureFormatCapabilities"],[345,"impl-FormatAspects"],[346,"impl-Flags-for-FormatAspects"],[347,"impl-Flags-for-MemoryFlags"],[348,"impl-MemoryFlags"],[349,"impl-AttachmentOps"],[350,"impl-Flags-for-AttachmentOps"],[351,"impl-BufferUses"],[352,"impl-Flags-for-BufferUses"],[353,"impl-TextureUses"],[354,"impl-Flags-for-TextureUses"],[355,"impl-AccelerationStructureUses"],[356,"impl-Flags-for-AccelerationStructureUses"],[357,"impl-Flags-for-AccelerationStructureFlags"],[358,"impl-AccelerationStructureFlags"],[359,"impl-Flags-for-AccelerationStructureGeometryFlags"],[360,"impl-AccelerationStructureGeometryFlags"],[1094,"impl-Debug-for-DeviceError"],[1095,"impl-Display-for-DeviceError"],[1096,"impl-Debug-for-ShaderError"],[1097,"impl-Display-for-ShaderError"],[1098,"impl-Debug-for-PipelineError"],[1099,"impl-Display-for-PipelineError"],[1100,"impl-Debug-for-PipelineCacheError"],[1101,"impl-Display-for-PipelineCacheError"],[1102,"impl-Display-for-SurfaceError"],[1103,"impl-Debug-for-SurfaceError"],[1104,"impl-Debug-for-InstanceError"],[1105,"impl-Display-for-InstanceError"],[1106,"impl-LowerHex-for-PipelineLayoutFlags"],[1107,"impl-Octal-for-PipelineLayoutFlags"],[1108,"impl-Debug-for-PipelineLayoutFlags"],[1109,"impl-Binary-for-PipelineLayoutFlags"],[1110,"impl-UpperHex-for-PipelineLayoutFlags"],[1111,"impl-UpperHex-for-BindGroupLayoutFlags"],[1112,"impl-LowerHex-for-BindGroupLayoutFlags"],[1113,"impl-Debug-for-BindGroupLayoutFlags"],[1114,"impl-Binary-for-BindGroupLayoutFlags"],[1115,"impl-Octal-for-BindGroupLayoutFlags"],[1116,"impl-Binary-for-TextureFormatCapabilities"],[1117,"impl-UpperHex-for-TextureFormatCapabilities"],[1118,"impl-Debug-for-TextureFormatCapabilities"],[1119,"impl-Octal-for-TextureFormatCapabilities"],[1120,"impl-LowerHex-for-TextureFormatCapabilities"],[1121,"impl-Binary-for-FormatAspects"],[1122,"impl-Octal-for-FormatAspects"],[1123,"impl-Debug-for-FormatAspects"],[1124,"impl-UpperHex-for-FormatAspects"],[1125,"impl-LowerHex-for-FormatAspects"],[1126,"impl-LowerHex-for-MemoryFlags"],[1127,"impl-UpperHex-for-MemoryFlags"],[1128,"impl-Debug-for-MemoryFlags"],[1129,"impl-Binary-for-MemoryFlags"],[1130,"impl-Octal-for-MemoryFlags"],[1131,"impl-Debug-for-AttachmentOps"],[1132,"impl-UpperHex-for-AttachmentOps"],[1133,"impl-Binary-for-AttachmentOps"],[1134,"impl-Octal-for-AttachmentOps"],[1135,"impl-LowerHex-for-AttachmentOps"],[1136,"impl-Octal-for-BufferUses"],[1137,"impl-UpperHex-for-BufferUses"],[1138,"impl-Debug-for-BufferUses"],[1139,"impl-LowerHex-for-BufferUses"],[1140,"impl-Binary-for-BufferUses"],[1141,"impl-Octal-for-TextureUses"],[1142,"impl-LowerHex-for-TextureUses"],[1143,"impl-Debug-for-TextureUses"],[1144,"impl-Binary-for-TextureUses"],[1145,"impl-UpperHex-for-TextureUses"],[1197,"impl-Binary-for-AccelerationStructureUses"],[1198,"impl-Octal-for-AccelerationStructureUses"],[1199,"impl-UpperHex-for-AccelerationStructureUses"],[1200,"impl-Debug-for-AccelerationStructureUses"],[1201,"impl-LowerHex-for-AccelerationStructureUses"],[1203,"impl-Octal-for-AccelerationStructureFlags"],[1204,"impl-Binary-for-AccelerationStructureFlags"],[1205,"impl-LowerHex-for-AccelerationStructureFlags"],[1206,"impl-UpperHex-for-AccelerationStructureFlags"],[1207,"impl-Debug-for-AccelerationStructureFlags"],[1208,"impl-Octal-for-AccelerationStructureGeometryFlags"],[1209,"impl-LowerHex-for-AccelerationStructureGeometryFlags"],[1210,"impl-Debug-for-AccelerationStructureGeometryFlags"],[1211,"impl-Binary-for-AccelerationStructureGeometryFlags"],[1212,"impl-UpperHex-for-AccelerationStructureGeometryFlags"],[1231,"impl-From%3CAllocationError%3E-for-DeviceError"],[1232,"impl-From%3CAllocationError%3E-for-DeviceError"],[1234,"impl-From%3CMapError%3E-for-DeviceError"],[1319,"impl-Flags-for-PipelineLayoutFlags"],[1320,"impl-PipelineLayoutFlags"],[1321,"impl-Flags-for-BindGroupLayoutFlags"],[1322,"impl-BindGroupLayoutFlags"],[1323,"impl-Flags-for-TextureFormatCapabilities"],[1324,"impl-TextureFormatCapabilities"],[1325,"impl-FormatAspects"],[1326,"impl-Flags-for-FormatAspects"],[1327,"impl-Flags-for-MemoryFlags"],[1328,"impl-MemoryFlags"],[1329,"impl-AttachmentOps"],[1330,"impl-Flags-for-AttachmentOps"],[1331,"impl-BufferUses"],[1332,"impl-Flags-for-BufferUses"],[1333,"impl-Flags-for-TextureUses"],[1334,"impl-TextureUses"],[1335,"impl-AccelerationStructureUses"],[1336,"impl-Flags-for-AccelerationStructureUses"],[1337,"impl-AccelerationStructureFlags"],[1338,"impl-Flags-for-AccelerationStructureFlags"],[1339,"impl-AccelerationStructureGeometryFlags"],[1340,"impl-Flags-for-AccelerationStructureGeometryFlags"],[3175,"impl-Workarounds"],[3176,"impl-Flags-for-Workarounds"],[3190,"impl-Borrow%3CTexture%3E-for-SurfaceTexture"],[3191,"impl-Borrow%3Cdyn+DynTexture%3E-for-SurfaceTexture"],[3403,"impl-LowerHex-for-Workarounds"],[3404,"impl-UpperHex-for-Workarounds"],[3405,"impl-Octal-for-Workarounds"],[3406,"impl-Binary-for-Workarounds"],[3407,"impl-Debug-for-Workarounds"],[3451,"impl-Workarounds"],[3452,"impl-Flags-for-Workarounds"]]}],\
["wgpu_macros",{"doc":"","t":"X","n":["gpu_test"],"q":[[0,"wgpu_macros"]],"d":["Creates a test that will run on all gpus on a given system."],"i":[0],"f":[0],"c":[],"p":[],"b":[]}],\
["wgpu_test",{"doc":"Test utilities for the wgpu repository.","t":"TTPTETFGFFFPFFTNOOOONNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNONNNNNNNHNNHHONNNNNNNNNONNNNNNNNNNNNNXQNCHHHNONNNNNNNNNNNNNNNNNCNNNNNNNONONOOONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNONNGPPFNNNNNNNNHNNNNNNNNNNNNNNNNNNOOPIPH","n":["ADAPTER","ALWAYS","AssertFailure","BACKEND","ComparisonType","DRIVER","FailureApplicationReasons","FailureBehavior","FailureCase","FailureReason","GpuTestConfiguration","Ignore","TestParameters","TestingContext","VENDOR","adapter","adapter","adapter","adapter_downlevel_capabilities","adapter_info","all","always","async_poll","backend","backend_adapter","backends","behavior","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","contains","default","default","default","default","default","device","device_features","device_limits","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downlevel_flags","driver","empty","eq","eq","equivalent","equivalent","equivalent","equivalent","execute_test","expect_fail","extend","fail","fail_if","failures","features","flaky","fmt","fmt","fmt","fmt","fmt","fmt","force_fxc","force_fxc","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","gpu_test","gpu_test_main","hash","image","initialize_adapter","initialize_device","initialize_instance","insert","instance","intersection","intersects","into","into","into","into","into","into","into","into_iter","is_all","is_empty","iter","iter_names","limits","molten_vk","name","native","never","new","new","not","panic","panic","parameters","queue","reasons","reasons","remove","required_downlevel_caps","required_features","required_limits","run_async","run_sync","set","skip","skips","sub","sub_assign","symmetric_difference","test_features_limits","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","valid","validation_error","validation_error","vendor","webgl2","with_message","ComparisonType","Mean","Percentile","ReadbackBuffers","are_zero","assert_buffer_contents","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compare_image_output","copy_from","downcast","downcast","fmt","from","from","into","into","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","percentile","threshold","Err","MainResult","Ok","main"],"q":[[0,"wgpu_test"],[209,"wgpu_test::image"],[240,"wgpu_test::image::ComparisonType"],[242,"wgpu_test::native"],[246,"wgpu::api::queue"],[247,"wgpu_types"],[248,"wgpu_types"],[249,"core::iter::traits::collect"],[250,"wgpu::api::device"],[251,"core::ops::function"],[252,"wgpu_types"],[253,"core::fmt"],[254,"wgpu::api::instance"],[255,"wgpu::api::adapter"],[256,"wgpu_types"],[257,"bitflags::iter"],[258,"core::ops::function"],[259,"core::result"],[260,"core::any"],[261,"wgpu_types"],[262,"core::convert"],[263,"std::ffi::os_str"],[264,"wgpu::api::command_encoder"],[265,"wgpu::api::texture"]],"d":["","","Assert that the test fails for the given reason.","","","","Reason why a test matches a given failure case.","","Conditions under which a test should fail or be skipped.","Reason why a test is expected to fail.","Configuration for a GPU test.","Ignore the matching failure.","This information determines if a test should run.","Parameters and resources hadned to the test function.","","Tests running on <code>adapter</code>.","","Name of adapter expected to fail, or <code>None</code> for any adapter …","","","Get a flags value with all known bits set.","This case applies to all tests.","Utility to allow future asynchronous polling.","Tests running on any of the given backends.","Tests running on <code>backend</code> and <code>adapter</code>.","Backends expected to fail, or <code>None</code> for any backend.","Behavior after this case matches a failure.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","","","","","","","","The intersection of a source flags value with the …","","","","","","","","","Name of driver expected to fail, or <code>None</code> for any driver …","Get a flags value with all bits unset.","","","","","","","Execute the given test configuration with the given …","Mark the test as always failing, but not to be skipped.","The bitwise or (<code>|</code>) of the bits in each flags value.","Run some code in an error scope and assert that validation …","Run some code in an error scope and assert that validation …","Conditions under which this test should be run, but is …","Set the list of features this test requires.","Test is flaky with the given configuration. Do not assert …","","","","","","","","On Dx12, specifically test against the Fxc compiler.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Creates a test that will run on all gpus on a given system.","Adds the necissary main function for our gpu test harness.","","Image comparison utilities","Initialize a wgpu adapter, using the given adapter report …","Initialize a wgpu device from a given adapter.","Initialize a wgpu instance with the options from the …","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Set the limits needed for the test.","Tests running on the MoltenVK Vulkan driver on macOS.","Set the name of the test. Must be unique across all tests …","Infrastructure for the native, <code>cargo-nextest</code> based harness.","This case applies to no tests.","","Create a new failure case.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Matches this failure case against the given panic …","Match a panic.","Set the parameters that the test needs to succeed.","","Return the reasons why this case should fail.","Reason why the test is expected to fail.","The intersection of a source flags value with the …","","","","Make the test function an asynchronous function/future.","Make the test function an synchronous function.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Mark the test as always failing, and needing to be skipped.","Conditions under which this test should be skipped.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Set of common features that most internal tests require …","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","Run some code in an error scope and assert that validation …","Matches this failure case against the given validation …","Match a validation error.","Vendor expected to fail, or <code>None</code> for any vendor.","Tests running under WebGL.","Match an error with a message.","The FLIP library generates a per-pixel error map where 0.0 …","If the mean error is greater than the given value, the …","If the given percentile is greater than the given value, …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Contains the error value","Return value for the main function.","Contains the success value","Main function that runs every gpu function once for every …"],"i":[3,3,12,3,0,3,0,0,0,0,0,12,0,0,3,2,4,2,4,4,3,2,4,2,2,2,2,3,3,3,3,3,3,3,3,4,10,2,3,11,12,13,4,10,2,3,11,12,13,10,2,3,11,12,13,10,2,3,11,12,13,3,3,10,2,11,12,13,4,4,4,3,4,10,2,3,11,12,13,13,2,3,3,11,3,3,3,3,0,13,3,0,0,13,13,2,3,3,3,3,3,11,13,13,4,10,2,3,11,12,13,3,3,3,3,3,3,0,0,3,0,0,0,0,3,4,3,3,4,10,2,3,11,12,13,3,3,3,3,3,13,2,10,0,2,10,2,3,2,11,10,4,2,2,3,13,13,13,10,10,3,13,13,3,3,3,13,10,2,3,11,12,13,3,4,10,2,3,11,12,13,4,10,2,3,11,12,13,4,10,2,3,11,12,13,3,4,10,2,3,11,12,13,0,2,11,2,2,11,0,39,39,0,38,38,38,39,38,39,39,39,0,38,38,39,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,48,48,47,0,47,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,0,0,0,[[],3],[[],2],[[4,5],6],[7,2],[[7,1],2],0,0,[[3,3],3],[[3,3],8],[[3,3],3],[[3,3],8],[3,9],[3,9],[[3,3],3],[[3,3],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,10],[2,2],[3,3],[11,11],[12,12],[13,13],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[3,3],[[3,3],14],[[],10],[[],2],[[],11],[[],12],[[],13],0,0,0,[[3,3],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[13,15],13],0,[[],3],[[3,3],14],[[11,11],14],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[[16,[0]],10,[16,[0]]],8],[[13,2],13],[[3,-1],8,[[18,[],[[17,[3]]]]]],[[19,-2,[16,[1]]],-1,[],[[21,[],[[20,[-1]]]]]],[[19,14,-2,[16,[1]]],-1,[],[[21,[],[[20,[-1]]]]]],0,[[13,22],13],[2,2],[[3,23],24],[[3,23],24],[[3,23],24],[[3,23],24],[[3,23],24],[[11,23],24],[[13,14],13],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,[[16,[3]]]],[9,3],[9,3],[9,3],[-1,3,[[18,[],[[17,[3]]]]]],[1,[[16,[3]]]],0,0,[[3,-1],8,25],0,[[[16,[0]],14],[[8,[26,27,[16,[0]]]]]],[[27,22,28],[[8,[19,29]]]],[[7,14],26],[[3,3],8],0,[[3,3],3],[[3,3],14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,-1,[]],[3,14],[3,14],[3,[[30,[3]]]],[3,[[31,[3]]]],[[13,28],13],[[],2],[[10,1],10],0,[[],2],[[],10],[[],2],[3,3],[[2,1],2],[[],11],[[10,13],10],0,[2,[[32,[11]]]],0,[[3,3],8],0,0,0,[[10,-2],10,[[33,[],[[20,[8]]]],0],[[34,[4],[[20,[-1]]]],0]],[[10,-1],10,[[34,[4]],35,0]],[[3,3,14],8],[[13,2],13],0,[[3,3],3],[[3,3],8],[[3,3],3],[13,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,3],8],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[[3,3],3],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[19,-2],-1,[],[[21,[],[[20,[-1]]]]]],[[2,1],2],[[],11],0,[[],2],[[11,1],11],0,0,0,0,[[38,4],14],[[38,4,[32,[9]]],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,39],[[-1,-2],8,[],[]],[[-1,40,41,41,[32,[9]],[32,[39]]],8,[[43,[42]],[43,[44]]]],[[38,19,45,46],8],[-1,-2,[],[]],[-1,-2,[],[]],[[39,23],24],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[19,46],38],[-1,-2,[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,37,[]],[-1,37,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,0,0,0,0,[[],47]],"c":[],"p":[[1,"str"],[5,"FailureCase",0],[5,"FailureApplicationReasons",0],[5,"TestingContext",0],[8,"Maintain",246],[6,"MaintainResult",247],[5,"Backends",247],[1,"tuple"],[1,"u8"],[5,"GpuTestConfiguration",0],[5,"FailureReason",0],[6,"FailureBehavior",0],[5,"TestParameters",0],[1,"bool"],[5,"DownlevelFlags",247],[6,"Option",248],[17,"Item"],[10,"IntoIterator",249],[5,"Device",250],[17,"Output"],[10,"FnOnce",251],[5,"Features",247],[5,"Formatter",252],[8,"Result",252],[10,"Hasher",253],[5,"Instance",254],[5,"Adapter",255],[5,"Limits",247],[5,"Queue",246],[5,"Iter",256],[5,"IterNames",256],[1,"slice"],[10,"Future",257],[10,"Fn",251],[10,"Copy",258],[6,"Result",259],[5,"TypeId",260],[5,"ReadbackBuffers",209],[6,"ComparisonType",209],[5,"AdapterInfo",247],[1,"u32"],[5,"Path",261],[10,"AsRef",262],[5,"OsStr",263],[5,"CommandEncoder",264],[5,"Texture",265],[8,"MainResult",242],[15,"Percentile",240]],"b":[[31,"impl-Flags-for-FailureApplicationReasons"],[32,"impl-FailureApplicationReasons"],[96,"impl-Octal-for-FailureApplicationReasons"],[97,"impl-Binary-for-FailureApplicationReasons"],[98,"impl-UpperHex-for-FailureApplicationReasons"],[99,"impl-Debug-for-FailureApplicationReasons"],[100,"impl-LowerHex-for-FailureApplicationReasons"],[112,"impl-Flags-for-FailureApplicationReasons"],[113,"impl-FailureApplicationReasons"]]}],\
["wgpu_types",{"doc":"This library describes the API surface of WebGPU that is …","t":"TTTTTTTTTPFFGFPGPFFPPGGPPPPPPPPPPPPPPPPPPTTTTTTTTTTPGFPPPPPPPPPPPPPPPPFGGFFGGFPPIGFIFPTTTTTTTTTSSTTTTTPPPFFFFFGPGPFPFFPPPPPPPPPPTTTTTTTTPPPPPPPPFPFPFGGPFPFFFFFPPPPGPITTPPPPPPPPPPPPFTTTTTTTGFPPPGPPPPPPPPPPPPPGPTTTTPGPPPFPPTTTTTTSTFFFFFPPPGPPFFPFFPPTPPFPPPPPPTSTTTTTTTTTTTTPGGPPFGPPPPFTTTTPPPPPPTTPPPPPPPPPPPPPFFPPTTTTTTTTTTSPPFPPPPPPGPGPGPGFFGFTSSSFGPPPPPPPPPPPPTTTTTTTPPFFPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPTTTTTTTTTTTTTTTTTTTPGGFIGFPPPPPPPPPPPPPPPPPPPPPPPFPGFPPGPPPFFGTTTTTTTTTTTTTTSTPGFGGFFGFGPPPPPPTTTTPPPPPPPPPPPPPPPPPPPPTTTTTTTTSTTTTPPPPFGGPPTTPPKKKPTTPPPONNNNNNNNNNNNNNNNNOOONOOOONONNNOOONCOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNONOONNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNONNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOONOONNNNNNNNNNNNOOCOOOOOOOOOOOOOOONOOOOOOOOOOOOOOOOOOOOOOOOOONNNOONNNNNNNNNNNNNNNNNOOOOOONNNNNNONONOOOOOOOONONNNNNNNNNNNNNNONOOONONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOOOONOOOOOQQQONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNOOOOOONNNOOOOOOONNOONOOOOOOOOOOOOOOOOOOOOOOOOOOOH","n":["ADDRESS_MODE_CLAMP_TO_BORDER","ADDRESS_MODE_CLAMP_TO_ZERO","ALL","ALLOW_COMPACTION","ALLOW_UNDERLYING_NONCOMPLIANT_ADAPTER","ALLOW_UPDATE","ALPHA","ALPHA_BLENDING","ANISOTROPIC_FILTERING","AccelerationStructure","AccelerationStructureFlags","AccelerationStructureGeometryFlags","AccelerationStructureUpdateMode","AdapterInfo","Add","AddressMode","All","AllocationReport","AllocatorReport","Always","Astc","AstcBlock","AstcChannel","Auto","AutoNoVsync","AutoVsync","Automatic","B10x10","B10x5","B10x6","B10x8","B12x10","B12x12","B4x4","B5x4","B5x5","B6x5","B6x6","B8x5","B8x6","B8x8","BASE_VERTEX","BGRA8UNORM_STORAGE","BLACK","BLAS_INPUT","BLENDABLE","BLUE","BLUE","BROWSER_WEBGPU","BUFFER_BINDINGS_NOT_16_BYTE_ALIGNED","BUFFER_BINDING_ARRAY","Back","Backend","Backends","Bc1RgbaUnorm","Bc1RgbaUnormSrgb","Bc2RgbaUnorm","Bc2RgbaUnormSrgb","Bc3RgbaUnorm","Bc3RgbaUnormSrgb","Bc4RSnorm","Bc4RUnorm","Bc5RgSnorm","Bc5RgUnorm","Bc6hRgbFloat","Bc6hRgbUfloat","Bc7RgbaUnorm","Bc7RgbaUnormSrgb","Bgra8Unorm","Bgra8UnormSrgb","BindGroupLayoutEntry","BindingType","BlasGeometrySizeDescriptors","BlasTriangleGeometrySizeDescriptor","BlendComponent","BlendFactor","BlendOperation","BlendState","BrowserWebGpu","Buffer","BufferAddress","BufferBindingType","BufferDescriptor","BufferSize","BufferUsages","Build","CLEAR_TEXTURE","CLIPPER_INVOCATIONS","CLIPPER_PRIMITIVES_OUT","COLOR","COMPARISON_SAMPLERS","COMPUTE","COMPUTE_SHADERS","COMPUTE_SHADER_INVOCATIONS","CONSERVATIVE_RASTERIZATION","COPY_BUFFER_ALIGNMENT","COPY_BYTES_PER_ROW_ALIGNMENT","COPY_DST","COPY_DST","COPY_SRC","COPY_SRC","CUBE_ARRAY_TEXTURES","Ccw","ClampToBorder","ClampToEdge","Color","ColorTargetState","ColorWrites","CommandBufferDescriptor","CommandEncoderDescriptor","CompareFunction","Comparison","CompositeAlphaMode","Constant","CoreCounters","Cpu","CreateBlasDescriptor","CreateTlasDescriptor","Cube","CubeArray","Cw","D1","D1","D2","D2","D2Array","D3","D3","DEBUG","DEPTH32FLOAT_STENCIL8","DEPTH_BIAS_CLAMP","DEPTH_CLIP_CONTROL","DEPTH_TEXTURE_AND_BUFFER_COPIES","DISCARD_HAL_LABELS","DUAL_SOURCE_BLENDING","DX12","DecrementClamp","DecrementWrap","Depth","Depth16Unorm","Depth24Plus","Depth24PlusStencil8","Depth32Float","Depth32FloatStencil8","DepthBiasState","DepthOnly","DepthStencilState","Destroyed","DeviceDescriptor","DeviceLostReason","DeviceType","DiscreteGpu","DispatchIndirectArgs","DisplayP3","DownlevelCapabilities","DownlevelFlags","DownlevelLimits","DrawIndexedIndirectArgs","DrawIndirectArgs","Dropped","Dst","DstAlpha","Dx12","Dx12Compiler","Dxc","DynamicOffset","EXPERIMENTAL_RAY_QUERY","EXPERIMENTAL_RAY_TRACING_ACCELERATION_STRUCTURE","EacR11Snorm","EacR11Unorm","EacRg11Snorm","EacRg11Unorm","Empty","Equal","Etc2Rgb8A1Unorm","Etc2Rgb8A1UnormSrgb","Etc2Rgb8Unorm","Etc2Rgb8UnormSrgb","Etc2Rgba8Unorm","Etc2Rgba8UnormSrgb","Extent3d","FILTERABLE","FLOAT32_FILTERABLE","FRAGMENT","FRAGMENT_SHADER_INVOCATIONS","FRAGMENT_STORAGE","FRAGMENT_WRITABLE_STORAGE","FULL_DRAW_INDEX_UINT32","Face","Features","Fifo","FifoRelaxed","Fill","FilterMode","Filtering","Float","Float16x2","Float16x4","Float32","Float32x2","Float32x3","Float32x4","Float64","Float64x2","Float64x3","Float64x4","Front","FrontFace","Fxc","GL","GPU_BASED_VALIDATION","GREEN","GREEN","Gl","Gles3MinorVersion","Good","Greater","GreaterEqual","HalCounters","Hdr","HighPerformance","IGNORE","INDEPENDENT_BLEND","INDEX","INDIRECT","INDIRECT_EXECUTION","INDIRECT_FIRST_INSTANCE","INSTANCE_BUFFER_ALIGNMENT","INVALID_TIMESTAMP","ImageCopyBuffer","ImageCopyTexture","ImageCopyTextureTagged","ImageDataLayout","ImageSubresourceRange","Immediate","IncrementClamp","IncrementWrap","IndexFormat","Inherit","Instance","InstanceDescriptor","InstanceFlags","IntegratedGpu","InternalCounter","InternalCounters","Invert","Keep","LOW_MEMORY","Less","LessEqual","Limits","Line","LineList","LineStrip","Linear","Lost","LowPower","MAPPABLE_PRIMARY_BUFFERS","MAP_ALIGNMENT","MAP_READ","MAP_WRITE","METAL","MULTISAMPLED_SHADING","MULTISAMPLE_RESOLVE","MULTISAMPLE_X16","MULTISAMPLE_X2","MULTISAMPLE_X4","MULTISAMPLE_X8","MULTIVIEW","MULTI_DRAW_INDIRECT","MULTI_DRAW_INDIRECT_COUNT","Mailbox","Maintain","MaintainResult","Manual","Max","MemoryBlockReport","MemoryHints","MemoryUsage","Metal","Min","MirrorRepeat","MultisampleState","NONBLOCKING_QUERY_RESOLVE","NONE","NON_POWER_OF_TWO_MIPMAPPED_TEXTURES","NO_DUPLICATE_ANY_HIT_INVOCATION","NV12","Nearest","Never","NonFiltering","None","NotEqual","OPAQUE","OVER","Occlusion","Ok","One","OneMinusConstant","OneMinusDst","OneMinusDstAlpha","OneMinusSrc","OneMinusSrc1","OneMinusSrc1Alpha","OneMinusSrcAlpha","Opaque","OpaqueBlack","OpaqueWhite","Origin2d","Origin3d","Other","Outdated","PARTIALLY_BOUND_BINDING_ARRAY","PIPELINE_CACHE","PIPELINE_STATISTICS_QUERY","POLYGON_MODE_LINE","POLYGON_MODE_POINT","PREFER_FAST_BUILD","PREFER_FAST_TRACE","PREMULTIPLIED_ALPHA_BLENDING","PRIMARY","PUSH_CONSTANTS","PUSH_CONSTANT_ALIGNMENT","Performance","PipelineStatistics","PipelineStatisticsTypes","Plane0","Plane1","Plane2","Point","PointList","Poll","PolygonMode","PostMultiplied","PowerPreference","PreMultiplied","PredefinedColorSpace","PreferUpdate","PresentMode","PresentationTimestamp","PrimitiveState","PrimitiveTopology","PushConstantRange","QUERY_RESOLVE","QUERY_RESOLVE_BUFFER_ALIGNMENT","QUERY_SET_MAX_QUERIES","QUERY_SIZE","QuerySetDescriptor","QueryType","R16Float","R16Sint","R16Snorm","R16Uint","R16Unorm","R32Float","R32Sint","R32Uint","R8Sint","R8Snorm","R8Uint","R8Unorm","READ_ONLY_DEPTH_STENCIL","RED","RED","RENDER_ATTACHMENT","REPLACE","REPLACE","RG11B10UFLOAT_RENDERABLE","ReadOnly","ReadWrite","RenderBundleDepthStencil","RenderBundleDescriptor","Repeat","Replace","ReplacedCallback","RequestAdapterOptions","ReverseSubtract","Rg11b10Ufloat","Rg16Float","Rg16Sint","Rg16Snorm","Rg16Uint","Rg16Unorm","Rg32Float","Rg32Sint","Rg32Uint","Rg8Sint","Rg8Snorm","Rg8Uint","Rg8Unorm","Rgb10a2Uint","Rgb10a2Unorm","Rgb9e5Ufloat","Rgba16Float","Rgba16Sint","Rgba16Snorm","Rgba16Uint","Rgba16Unorm","Rgba32Float","Rgba32Sint","Rgba32Uint","Rgba8Sint","Rgba8Snorm","Rgba8Uint","Rgba8Unorm","Rgba8UnormSrgb","SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","SECONDARY","SHADER_EARLY_DEPTH_TEST","SHADER_F16","SHADER_F64","SHADER_I16","SHADER_INT64","SHADER_INT64_ATOMIC_ALL_OPS","SHADER_INT64_ATOMIC_MIN_MAX","SHADER_PRIMITIVE_INDEX","SPIRV_SHADER_PASSTHROUGH","STORAGE","STORAGE_BINDING","STORAGE_READ_WRITE","STORAGE_RESOURCE_BINDING_ARRAY","SUBGROUP","SUBGROUP_BARRIER","SUBGROUP_VERTEX","SURFACE_VIEW_FORMATS","Sampler","SamplerBindingType","SamplerBorderColor","ShaderBoundChecks","ShaderLocation","ShaderModel","ShaderStages","Sint","Sint16x2","Sint16x4","Sint32","Sint32x2","Sint32x3","Sint32x4","Sint8x2","Sint8x4","Sm2","Sm4","Sm5","Snorm16x2","Snorm16x4","Snorm8x2","Snorm8x4","Src","Src1","Src1Alpha","SrcAlpha","SrcAlphaSaturated","Srgb","Stencil8","StencilFaceState","StencilOnly","StencilOperation","StencilState","Storage","StorageTexture","StorageTextureAccess","SubmissionQueueEmpty","Suboptimal","Subtract","SurfaceCapabilities","SurfaceConfiguration","SurfaceStatus","TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES","TEXTURE_BINDING","TEXTURE_BINDING_ARRAY","TEXTURE_COMPRESSION_ASTC","TEXTURE_COMPRESSION_ASTC_HDR","TEXTURE_COMPRESSION_BC","TEXTURE_COMPRESSION_BC_SLICED_3D","TEXTURE_COMPRESSION_ETC2","TEXTURE_FORMAT_16BIT_NORM","TEXTURE_FORMAT_NV12","TIMESTAMP_QUERY","TIMESTAMP_QUERY_INSIDE_ENCODERS","TIMESTAMP_QUERY_INSIDE_PASSES","TLAS_INPUT","TRANSFORM_BUFFER_ALIGNMENT","TRANSPARENT","Texture","TextureAspect","TextureDescriptor","TextureDimension","TextureFormat","TextureFormatFeatureFlags","TextureFormatFeatures","TextureSampleType","TextureUsages","TextureViewDimension","Timeout","Timestamp","TransparentBlack","TriangleList","TriangleStrip","Triangles","UNIFORM","UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","UNRESTRICTED_EXTERNAL_TEXTURE_COPIES","UNRESTRICTED_INDEX_BUFFER","Uint","Uint16","Uint16x2","Uint16x4","Uint32","Uint32","Uint32x2","Uint32x3","Uint32x4","Uint8x2","Uint8x4","Uniform","Unknown","Unorm","Unorm10_10_10_2","Unorm16x2","Unorm16x4","Unorm8x2","Unorm8x4","UnormSrgb","VALIDATION","VERTEX","VERTEX","VERTEX_AND_INSTANCE_INDEX_RESPECTS_RESPECTIVE_FIRST_VALUE_IN_INDIRECT_DRAW","VERTEX_ATTRIBUTE_64BIT","VERTEX_FRAGMENT","VERTEX_SHADER_INVOCATIONS","VERTEX_STORAGE","VERTEX_STRIDE_ALIGNMENT","VERTEX_WRITABLE_STORAGE","VIEW_FORMATS","VULKAN","VULKAN_GOOGLE_DISPLAY_TIMING","Version0","Version1","Version2","Vertex","VertexAttribute","VertexFormat","VertexStepMode","VirtualGpu","Vulkan","WEBGPU_TEXTURE_FORMAT_SUPPORT","WHITE","Wait","WaitForSubmissionIndex","WasmNotSend","WasmNotSendSync","WasmNotSync","WriteOnly","ZERO","ZERO","Zero","Zero","Zero","a","add","add_srgb_suffix","advanced_debugging","all","all","all","all","all","all","all","all","all","all","all","all","all_native_mask","all_webgpu_mask","allocations","allocations","allowed_usages","allowed_vertex_formats_for_blas","alpha","alpha_mode","alpha_modes","alpha_to_coverage_enabled","array_layer_count","array_layer_count","as_bytes","as_bytes","as_bytes","aspect","aspect","aspect","aspect_specific_format","assertions","b","back","backend","backends","base_array_layer","base_mip_level","base_vertex","bias","bind_group_layouts","bind_groups","binding","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blend","block_copy_size","block_dimensions","block_size","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer_memory","buffers","bytes_per_row","check_limits","check_limits_with_fail_fn","clamp","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","color","color_space","command_encoders","compare","compatible_surface","compatible_texture_dimension","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","compliant","components","components_with_aspect","compute_pipelines","compute_render_extent","conservative","constant","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","core","count","count","count","cull_mode","debugging","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","depth_compare","depth_fail_op","depth_or_array_layers","depth_read_only","depth_write_enabled","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","desired_maximum_frame_latency","device","device_type","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","dimension","downlevel_defaults","downlevel_webgl2_defaults","driver","driver_info","dst_factor","dx12_shader_compiler","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","fail_op","fences","first_index","first_instance","first_instance","first_vertex","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_fallback_adapter","format","format","format","format","format","format","formats","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_build_config","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_plane","front","front_face","g","gles_minor_version","guaranteed_format_features","hal","has_color_aspect","has_depth_aspect","has_dynamic_offset","has_stencil_aspect","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","index_count","index_count","index_format","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","instance_count","instance_count","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_bcn","is_combined_depth_stencil_format","is_compressed","is_depth_enabled","is_depth_read_only","is_depth_stencil_component","is_depth_stencil_format","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_enabled","is_enabled","is_full_resource","is_invalid","is_multi_planar_format","is_queue_empty","is_read_only","is_read_only","is_read_only","is_srgb","is_stencil_read_only","is_strip","is_wait","is_webgpu_compliant","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","label","label","label","label","label","label","label","label","label","layer_range","layout","limits","map_index","map_label","map_label","map_label","map_label","map_label","map_label","map_label","map_label","map_label","map_label_and_view_formats","map_view_formats","mapped_at_creation","mask","math","max_bind_groups","max_bindings_per_bind_group","max_buffer_size","max_color_attachment_bytes_per_sample","max_color_attachments","max_compute_invocations_per_workgroup","max_compute_workgroup_size_x","max_compute_workgroup_size_y","max_compute_workgroup_size_z","max_compute_workgroup_storage_size","max_compute_workgroups_per_dimension","max_dynamic_storage_buffers_per_pipeline_layout","max_dynamic_uniform_buffers_per_pipeline_layout","max_instances","max_inter_stage_shader_components","max_mips","max_non_sampler_bindings","max_push_constant_size","max_sampled_textures_per_shader_stage","max_samplers_per_shader_stage","max_storage_buffer_binding_size","max_storage_buffers_per_shader_stage","max_storage_textures_per_shader_stage","max_subgroup_size","max_texture_array_layers","max_texture_dimension_1d","max_texture_dimension_2d","max_texture_dimension_3d","max_uniform_buffer_binding_size","max_uniform_buffers_per_shader_stage","max_vertex_attributes","max_vertex_buffer_array_stride","max_vertex_buffers","memory_allocations","memory_hints","min_storage_buffer_offset_alignment","min_subgroup_size","min_uniform_buffer_offset_alignment","mip_level","mip_level","mip_level_count","mip_level_count","mip_level_size","mip_level_size","mip_range","name","name","needs_ref_value","needs_ref_value","needs_ref_value","new","new","not","not","not","not","not","not","not","not","not","not","not","not","offset","offset","offset","operation","origin","origin","panic_on_timeout","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pass_op","physical_size","pipeline_layouts","planes","polygon_mode","power_preference","premultiplied_alpha","present_mode","present_modes","query_sets","r","range","read","read_mask","ref_second_blend_source","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove_srgb_suffix","render_pipelines","required_features","required_features","required_limits","rows_per_image","runtime_checks","sample_count","sample_count_supported","sample_type","samplers","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","set","set","set","set","set","set","shader_location","shader_model","shader_modules","size","size","size","size","size","size_multiple_requirement","slope_scale","src_factor","stages","stencil","stencil_read_only","strict_assert","strict_assert_eq","strict_assert_ne","strip_index_format","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","supported_sample_counts","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","take","target_component_alignment","target_pixel_byte_cost","texture","texture","texture_memory","texture_views","textures","to_2d","to_3d","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_str","to_string","to_tagged","to_untagged","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","topology","total_allocated_bytes","total_reserved_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked","unclipped_depth","union","union","union","union","union","union","union","union","union","union","union","union","update_mode","update_mode","usage","usage","usage","usages","uses_constant","using_alignment","using_resolution","vendor","vertex_count","vertex_count","vertex_format","view_formats","view_formats","visibility","wait","wait_for","width","width","with_env","write_mask","write_mask","x","x","x","y","y","y","z","z","access","format","has_dynamic_offset","min_binding_size","multisampled","sample_type","ty","view_dimension","view_dimension","descriptors","read_only","dxc_path","dxil_path","suballocated_device_memory_block_size","block","channel","filterable","align_to"],"q":[[0,"wgpu_types"],[2931,"wgpu_types::BindingType"],[2940,"wgpu_types::BlasGeometrySizeDescriptors"],[2941,"wgpu_types::BufferBindingType"],[2942,"wgpu_types::Dx12Compiler"],[2944,"wgpu_types::MemoryHints"],[2945,"wgpu_types::TextureFormat"],[2947,"wgpu_types::TextureSampleType"],[2948,"wgpu_types::math"],[2949,"alloc::vec"],[2950,"core::option"],[2951,"core::ops::function"],[2952,"core::clone"],[2953,"core::cmp"],[2954,"core::default"],[2955,"core::result"],[2956,"serde::de"],[2957,"serde::de"],[2958,"core::fmt"],[2959,"core::fmt"],[2960,"core::hash"],[2961,"bitflags::iter"],[2962,"core::ops::function"],[2963,"serde::ser"],[2964,"core::any"]],"d":["Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Enable writes to all channels.","Allow the acceleration structure to be compacted in a copy …","Whether wgpu should expose adapters that run on top of …","Allow for incremental updates (no change in size), …","Enable alpha channel writes","Blend mode that does standard alpha blending with …","Supports samplers with anisotropic filtering. Note this isn…","A ray-tracing acceleration structure binding.","Flags for acceleration structures","Flags for acceleration structure geometries","Update mode for acceleration structure builds.","Information about an adapter.","Src + Dst","How edges should be handled in texture addressing.","Depth, Stencil, and Color.","Describes an allocation in the <code>AllocatorReport</code>.","A report that can be generated for informational purposes …","Function always passes","block compressed texture. 16 bytes per block.","ASTC block dimensions","ASTC RGBA channel","Chooses either <code>Opaque</code> or <code>Inherit</code> automatically，depending …","Chooses Immediate -&gt; Mailbox -&gt; Fifo (on web) based on …","Chooses FifoRelaxed -&gt; Fifo based on availability.","No explicit minor version is requested, the driver …","10x10 block compressed texture. 16 bytes per block (1.28 …","10x5 block compressed texture. 16 bytes per block (2.56 …","10x6 block compressed texture. 16 bytes per block (2.13 …","10x8 block compressed texture. 16 bytes per block (1.6 …","12x10 block compressed texture. 16 bytes per block (1.07 …","12x12 block compressed texture. 16 bytes per block (0.89 …","4x4 block compressed texture. 16 bytes per block (8 …","5x4 block compressed texture. 16 bytes per block (6.4 …","5x5 block compressed texture. 16 bytes per block (5.12 …","6x5 block compressed texture. 16 bytes per block (4.27 …","6x6 block compressed texture. 16 bytes per block (3.56 …","8x5 block compressed texture. 16 bytes per block (3.2 …","8x6 block compressed texture. 16 bytes per block (2.67 …","8x8 block compressed texture. 16 bytes per block (2 …","Supports non-zero <code>base_vertex</code> parameter to direct indexed …","Allows the [<code>wgpu::TextureUsages::STORAGE_BINDING</code>] usage on …","","Allows a buffer to be used as input for a bottom level …","If not present, the texture can’t be blended into the …","Enable blue channel writes","","Supported when targeting the web through webassembly with …","Supports buffer bindings with sizes that aren’t a …","Allows the user to create arrays of buffers in shaders:","Back face","Backends supported by wgpu.","Represents the backends that wgpu will use.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Blue, green, red, and alpha channels. 8 bit integer per …","Blue, green, red, and alpha channels. 8 bit integer per …","Describes a single binding inside a bind group.","Specific type of a binding.","Descriptor for all size defining attributes of all …","Descriptor for all size defining attributes of a single …","Describes a blend component of a <code>BlendState</code>.","Alpha blend factor.","Alpha blend operation.","Describe the blend state of a render pipeline, within …","WebGPU in the browser","A buffer binding.","Integral type used for buffer offsets.","Specific type of a buffer binding.","Describes a <code>Buffer</code>.","Integral type used for buffer slice sizes.","Different ways that you can use a buffer.","Always perform a full build.","Enables clear to zero for textures.","Amount of times the clipper is invoked. This is also the …","Amount of primitives that are not culled by the clipper. …","Enable red, green, and blue channel writes","Supports comparison samplers.","Binding is visible from the compute shader of a compute …","The device supports compiling and using compute shaders.","Amount of times a compute shader is invoked. This will be …","Allows the user to set a …","Buffer to buffer copy as well as buffer clear offsets and …","Buffer-Texture copies must have <code>bytes_per_row</code> aligned to …","Allow a buffer to be the destination buffer for a […","Allows a texture to be the destination in a  […","Allow a buffer to be the source buffer for a […","Allows a texture to be the source in a […","Supports textures that are cube arrays.","Triangles with vertices in counter clockwise order are …","Clamp the value to the border of the texture Requires …","Clamp the value to the edge of the texture","RGBA double precision color.","Describes the color state of a render pipeline.","Color write mask. Disabled color channels will not be …","Describes a <code>CommandBuffer</code>.","Describes a <code>CommandEncoder</code>.","Comparison function used for depth and stencil operations.","Use as a comparison sampler instead of a normal sampler. …","Specifies how the alpha channel of the textures should be …","Constant","<code>wgpu-core</code>’s internal counters.","Cpu / Software Rendering.","Descriptor for creating a bottom level acceleration …","Descriptor for creating a top level acceleration structure.","A cubemap texture. <code>texture_cube</code> in WGSL and <code>textureCube</code> in …","A cubemap array texture. <code>texture_cube_array</code> in WGSL and …","Triangles with vertices in clockwise order are considered …","A one dimensional texture. <code>texture_1d</code> in WGSL and <code>texture1D</code>…","1D texture","A two dimensional texture. <code>texture_2d</code> in WGSL and <code>texture2D</code>…","2D texture","A two dimensional array texture. <code>texture_2d_array</code> in WGSL …","A three dimensional texture. <code>texture_3d</code> in WGSL and …","3D texture","Generate debug information in shaders and objects.","Allows for explicit creation of textures of format …","Supports depth bias clamping","By default, polygon depth is clipped to 0-1 range …","Supports copies between depth textures and buffers.","Don’t pass labels to wgpu-hal.","Allows two outputs from a shader to be used for blending. …","Supported on Windows 10 and later","Decrements stencil value by one, clamping on underflow.","Decrements stencil value by one, wrapping on underflow.","Sampling does the depth reference comparison.","Special depth format with 16 bit integer depth.","Special depth format with at least 24 bit integer depth.","Special depth/stencil format with at least 24 bit integer …","Special depth format with 32 bit floating point depth.","Special depth/stencil format with 32 bit floating point …","Describes the biasing setting for the depth target.","Depth.","Describes the depth/stencil state in a render pipeline.","After Device::destroy","Describes a <code>Device</code>.","Reason for “lose the device”.","Supported physical device types.","Discrete GPU with separate CPU/GPU memory.","Argument buffer layout for dispatch_indirect commands.","Display-P3 color space","Lists various ways the underlying platform does not …","Binary flags listing features that may or may not be …","Represents the sets of additional limits on an adapter, …","Argument buffer layout for draw_indexed_indirect commands.","Argument buffer layout for draw_indirect commands.","After Device::drop","D.component","D.alpha","Direct3D-12 (Windows)","Selects which DX12 shader compiler to use.","The Dxc compiler is new, fast and maintained.","Integral type used for dynamic bind group offsets.","<em><strong>THIS IS EXPERIMENTAL:</strong></em> Features enabled by this may have …","<em><strong>THIS IS EXPERIMENTAL:</strong></em> Features enabled by this may have …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Dummy backend, used for testing.","Function passes if new value is equal to existing value. …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Extent of a texture related operation.","If not present, the texture can’t be sampled with a …","Allows textures with formats “r32float”, “rg32float…","Binding is visible from the fragment shader of a render …","Amount of times the fragment shader is ran. Accounts for …","Supports storage buffers in fragment shaders.","Supports binding storage buffers and textures to fragment …","Supports full 32-bit range indices (2^32-1 as opposed to …","Face of a vertex.","Features that are not guaranteed to be supported.","Presentation frames are kept in a First-In-First-Out queue …","Presentation frames are kept in a First-In-First-Out queue …","Polygons are filled","Texel mixing mode when sampling between texels.","The sampling result is produced based on more than a …","Sampling returns floats.","Two half-precision floats (no Rust equiv). <code>vec2&lt;f32&gt;</code> in …","Four half-precision floats (no Rust equiv). <code>vec4&lt;f32&gt;</code> in …","One single-precision float (f32). <code>f32</code> in shaders.","Two single-precision floats (f32). <code>vec2&lt;f32&gt;</code> in shaders.","Three single-precision floats (f32). <code>vec3&lt;f32&gt;</code> in shaders.","Four single-precision floats (f32). <code>vec4&lt;f32&gt;</code> in shaders.","One double-precision float (f64). <code>f32</code> in shaders. Requires …","Two double-precision floats (f64). <code>vec2&lt;f32&gt;</code> in shaders. …","Three double-precision floats (f64). <code>vec3&lt;f32&gt;</code> in shaders. …","Four double-precision floats (f64). <code>vec4&lt;f32&gt;</code> in shaders. …","Front face","Vertex winding order which classifies the “front” face …","The Fxc compiler (default) is old, slow and unmaintained.","Supported on Linux/Android, the web through webassembly …","Enable GPU-based validation. Implies <code>Self::VALIDATION</code>. …","Enable green channel writes","","OpenGL 3.3+ (Windows), OpenGL ES 3.0+ (Linux, Android, …","Selects which OpenGL ES 3 minor version to request.","No issues.","Function passes if new value is greater than existing value","Function passes if new value is greater than or equal to …","<code>wgpu-hal</code>’s internal counters.","floating-point RGBA, linear-color float can be outside of …","Adapter that has the highest performance. This is often a …","Ignore the stencil state for the face.","Supports different blend operations per color attachment.","Allow a buffer to be the index buffer in a draw operation.","Allow a buffer to be the indirect buffer in an indirect …","Supports indirect drawing and dispatching.","Allows non-zero value for the <code>first_instance</code> member in …","Alignment requirement for instance buffers used in …","A timestamp that is invalid due to the platform not having …","View of a buffer which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","View of a texture which can be used to copy to a texture, …","Layout of a texture in a buffer’s memory.","Subresource range within an image","Presentation frames are not queued at all. The moment a …","Increments stencil value by one, clamping on overflow.","Increments stencil value by one, wrapping on overflow.","Format of indices used with pipeline.","The alpha channel, if it exists, of the textures is …","Vertex data is advanced every instance.","Options for creating an instance.","Instance debugging flags.","Integrated GPU with shared CPU/GPU memory.","An internal counter for debugging purposes","All internal counters, exposed for debugging purposes.","Bitwise inverts stencil value.","Keep stencil value unchanged.","Optimize for low memory footprint (both while building and …","Function passes if new value less than existing value","Function passes if new value is less than or equal to …","Represents the sets of limits an adapter/device supports.","Polygons are drawn as line segments","Vertex data is a list of lines. Each pair of vertices …","Vertex data is a strip of lines. Each set of two adjacent …","Linear Interpolation","The surface under the swap chain is lost.","Adapter that uses the least possible power. This is often …","Webgpu only allows the MAP_READ and MAP_WRITE buffer usage …","Size to align mappings.","Allow a buffer to be mapped for reading using […","Allow a buffer to be mapped for writing using […","Supported on macOS/iOS","Supports sample-rate shading.","Allows a texture of this format to back a view passed as …","Allows <code>TextureDescriptor::sample_count</code> to be <code>16</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>2</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>4</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>8</code>.","Enables multiview render passes and <code>builtin(view_index)</code> in …","Allows the user to call <code>RenderPass::multi_draw_indirect</code> …","Allows the user to call …","Presentation frames are kept in a single-frame queue. …","Passed to <code>Device::poll</code> to control how and if it should …","Result of a maintain operation.","Applications that have control over the content that is …","max(Src, Dst)","Describes a memory block in the <code>AllocatorReport</code>.","Hints to the device about the memory allocation strategy.","Favor memory usage over performance.","Metal API (Apple platforms)","min(Src, Dst)","Repeat the texture, mirroring it every repeat","Describes the multi-sampling state of a render pipeline.","If this is true, calls to <code>CommandEncoder::resolve_query_set</code>…","Binding is not visible from any shader stage.","Supports textures with mipmaps which have a non power of …","NO_DUPLICATE_ANY_HIT_INVOCATION, not useful unless using …","YUV 4:2:0 chroma subsampled format.","Nearest neighbor sampling.","Function never passes","The sampling result is produced based on a single color …","Power usage is not considered when choosing an adapter.","Function passes if new value is not equal to existing …","Is OPAQUE (is there no alpha test) recommended as …","Blend state of (1 * src) + ((1 - src_alpha) * dst)","Query returns a single 64-bit number, serving as an …","More information coming soon …","1.0","1.0 - Constant","1.0 - D.component","1.0 - D.alpha","1.0 - S.component","1.0 - S1.component","1.0 - S1.alpha","1.0 - S.alpha","The alpha channel, if it exists, of the textures is …","[0, 0, 0, 1]","[1, 1, 1, 1]","Origin of a copy from a 2D image.","Origin of a copy to/from a texture.","Other or Unknown.","The surface under the swap chain has changed.","Allows the user to create bind groups containing arrays …","Allows the use of pipeline cache objects","Enables use of Pipeline Statistics Queries. These queries …","Allows the user to set <code>PolygonMode::Line</code> in …","Allows the user to set <code>PolygonMode::Point</code> in …","Optimize for fast build time, recommended if geometry is …","Optimize for fast ray tracing performance, recommended if …","Blend mode that does standard alpha blending with …","All the apis that wgpu offers first tier of support for.","Allows the use of push constants: small, fast bits of …","Alignment all push constants need","Favor performance over memory usage (the default value).","Query returns up to 5 64-bit numbers based on the given …","Flags for which pipeline data should be recorded.","Plane 0.","Plane 1.","Plane 2.","Polygons are drawn as points","Vertex data is a list of points. Each vertex is a new …","Check the device for a single time without blocking.","Type of drawing mode for polygons","The alpha channel, if it exists, of the textures is …","Power Preference when choosing a physical adapter.","The alpha channel, if it exists, of the textures is …","Color spaces supported on the web.","If possible, perform an incremental update.","Behavior of the presentation engine based on frame rate.","Nanosecond timestamp used by the presentation engine.","Describes the state of primitive assembly and …","Primitive type the input mesh is composed of.","A range of push constant memory to pass to a shader stage.","Allow a buffer to be the destination buffer for a […","An offset into the query resolve buffer has to be aligned …","Maximum queries in a query set","Size of a single piece of query data.","Describes how to create a QuerySet.","Type of query contained in a QuerySet.","Red channel only. 16 bit float per channel. Float in …","Red channel only. 16 bit integer per channel. Signed in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 16 bit integer per channel. Unsigned in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 32 bit float per channel. Float in …","Red channel only. 32 bit integer per channel. Signed in …","Red channel only. 32 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. Signed in …","Red channel only. 8 bit integer per channel. [-127, 127] …","Red channel only. 8 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. [0, 255] …","Supports reading from a depth/stencil texture while using …","Enable red channel writes","","Allows a texture to be an output attachment of a render …","Default blending state that replaces destination with the …","Blend mode that does no color blending, just overwrites …","Allows for usage of textures of format …","The texture can only be read in the shader and it must be …","The texture can be both read and written in the shader and …","Describes the depth/stencil attachment for render bundles.","Describes a <code>RenderBundle</code>.","Repeat the texture in a tiling fashion","Replace stencil value with value provided in most recent …","After replacing the device_lost_callback","Options for requesting adapter.","Dst - Src","Red, green, and blue channels. 11 bit float with no sign …","Red and green channels. 16 bit float per channel. Float in …","Red and green channels. 16 bit integer per channel. Signed …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 16 bit integer per channel. …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 32 bit float per channel. Float in …","Red and green channels. 32 bit integer per channel. Signed …","Red and green channels. 32 bit integer per channel. …","Red and green channels. 8 bit integer per channel. Signed …","Red and green channels. 8 bit integer per channel. [-127, …","Red and green channels. 8 bit integer per channel. …","Red and green channels. 8 bit integer per channel. [0, 255]…","Red, green, blue, and alpha channels. 10 bit integer for …","Red, green, blue, and alpha channels. 10 bit integer for …","Packed unsigned float with 9 bits mantisa for each RGB …","Red, green, blue, and alpha channels. 16 bit float per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha. 16 bit integer per channel. […","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 32 bit float per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Allows shaders to index sampled texture and storage buffer …","All the apis that wgpu offers second tier of support for. …","Allows shaders to use the <code>early_depth_test</code> attribute.","Allows shaders to acquire the FP16 ability","Enables 64-bit floating point types in SPIR-V shaders.","Allows shaders to use i16. Not currently supported in <code>naga</code>…","Allows shaders to use i64 and u64.","Allows shaders to use all i64 and u64 atomic operations.","Allows shaders to use i64 and u64 atomic min and max.","Enables <code>builtin(primitive_index)</code> in fragment shaders.","Enables creating shader modules from SPIR-V binary data …","Allow a buffer to be a <code>BufferBindingType::Storage</code> inside a …","Allows a texture to be a <code>BindingType::StorageTexture</code> in a …","When used as a STORAGE texture, then a texture with this …","Allows the user to create uniform arrays of storage …","Allows compute and fragment shaders to use the subgroup …","Allows shaders to use the subgroup barrier","Allows vertex shaders to use the subgroup operation …","Supports specifying which view formats are allowed when …","A sampler that can be used to sample a texture.","Specific type of a sampler binding.","Color variation to use when sampler addressing mode is …","Describes how shader bound checks should be performed.","Integral type used for binding locations in shaders.","Collections of shader features a device supports if they …","Describes the shader stages that a binding will be visible …","Sampling returns signed integers.","Two signed shorts (i16). <code>vec2&lt;i32&gt;</code> in shaders.","Four signed shorts (i16). <code>vec4&lt;i32&gt;</code> in shaders.","One signed int (i32). <code>i32</code> in shaders.","Two signed ints (i32). <code>vec2&lt;i32&gt;</code> in shaders.","Three signed ints (i32). <code>vec3&lt;i32&gt;</code> in shaders.","Four signed ints (i32). <code>vec4&lt;i32&gt;</code> in shaders.","Two signed bytes (i8). <code>vec2&lt;i32&gt;</code> in shaders.","Four signed bytes (i8). <code>vec4&lt;i32&gt;</code> in shaders.","Extremely limited shaders, including a total instruction …","Missing minor features and storage images.","WebGPU supports shader module 5.","Two signed shorts (i16). [-32767, 32767] converted to …","Four signed shorts (i16). [-32767, 32767] converted to …","Two signed bytes (i8). [-127, 127] converted to float [-1, …","Four signed bytes (i8). [-127, 127] converted to float […","S.component","S1.component","S1.alpha","S.alpha","min(S.alpha, 1.0 - D.alpha)","sRGB color space","Stencil format with 8 bit integer stencil.","Describes stencil state in a render pipeline.","Stencil.","Operation to perform on the stencil value.","State of the stencil operation (fixed-pipeline stage).","A storage buffer.","A storage texture.","Specific type of a sample in a texture binding.","There are no active submissions in flight as of the …","The swap chain is operational, but it does no longer …","Src - Dst","Defines the capabilities of a given surface and adapter.","Configures a <code>Surface</code> for presentation.","Status of the received surface image.","Enables device specific texture format features.","Allows a texture to be a <code>BindingType::Texture</code> in a bind …","Allows the user to create uniform arrays of textures in …","Enables ASTC family of compressed textures. ASTC textures …","Enables ASTC HDR family of compressed textures.","Enables BCn family of compressed textures. All BCn …","Allows the 3d dimension for textures with BC compressed …","Enables ETC family of compressed textures. All ETC …","Enables normalized <code>16-bit</code> texture formats.","Allows for creation of textures of format …","Enables use of Timestamp Queries. These queries tell the …","Allows for timestamp queries directly on command encoders.","Allows for timestamp queries directly on command encoders.","Allows a buffer to be used as input for a top level …","Alignment requirement for transform buffers used in …","","A texture binding.","Kind of data the texture holds.","Describes a <code>Texture</code>.","Dimensionality of a texture.","Underlying texture data format.","Feature flags for a texture format.","Features supported by a given texture format","Specific type of a sample in a texture binding.","Different ways that you can use a texture.","Dimensions of a particular texture view.","Unable to get the next frame, timed out.","Query returns a 64-bit number indicating the GPU-timestamp …","[0, 0, 0, 0]","Vertex data is a list of triangles. Each set of 3 vertices …","Vertex data is a triangle strip. Each set of three …","Triangle geometry version.","Allow a buffer to be a <code>BufferBindingType::Uniform</code> inside a …","Allows shaders to index uniform buffer and storage texture …","With this feature not present, there are the following …","Supports buffers to combine <code>BufferUsages::INDEX</code> with …","Sampling returns unsigned integers.","Indices are 16 bit unsigned integers.","Two unsigned shorts (u16). <code>vec2&lt;u32&gt;</code> in shaders.","Four unsigned shorts (u16). <code>vec4&lt;u32&gt;</code> in shaders.","Indices are 32 bit unsigned integers.","One unsigned int (u32). <code>u32</code> in shaders.","Two unsigned ints (u32). <code>vec2&lt;u32&gt;</code> in shaders.","Three unsigned ints (u32). <code>vec3&lt;u32&gt;</code> in shaders.","Four unsigned ints (u32). <code>vec4&lt;u32&gt;</code> in shaders.","Two unsigned bytes (u8). <code>vec2&lt;u32&gt;</code> in shaders.","Four unsigned bytes (u8). <code>vec4&lt;u32&gt;</code> in shaders.","A buffer for uniform values.","Triggered by driver","8 bit integer RGBA, [0, 255] converted to/from …","Three unsigned 10-bit integers and one 2-bit integer, …","Two unsigned shorts (u16). [0, 65535] converted to float […","Four unsigned shorts (u16). [0, 65535] converted to float […","Two unsigned bytes (u8). [0, 255] converted to float [0, 1]…","Four unsigned bytes (u8). [0, 255] converted to float [0, 1…","8 bit integer RGBA, Srgb-color [0, 255] converted to/from …","Enable validation, if possible.","Binding is visible from the vertex shader of a render …","Allow a buffer to be the vertex buffer in a draw operation.","If this is true, use of <code>@builtin(vertex_index)</code> and …","Enables using 64-bit types for vertex attributes.","Binding is visible from the vertex and fragment shaders of …","Amount of times the vertex shader is ran. Accounts for the …","Supports storage buffers in vertex shaders.","Vertex buffer strides have to be aligned to this number.","Enables bindings of writable storage buffers and textures …","Supports specifying which view format values are allowed …","Supported on Windows, Linux/Android, and macOS/iOS via …","Allows using the VK_GOOGLE_display_timing Vulkan extension.","Request an ES 3.0 context.","Request an ES 3.1 context.","Request an ES 3.2 context.","Vertex data is advanced every vertex.","Vertex inputs (attributes) to shaders.","Vertex Format for a <code>VertexAttribute</code> (input).","Whether a vertex buffer is indexed by vertex or by …","Virtual / Hosted.","Vulkan API (Windows, Linux, Android, MacOS via …","Supports all the texture usages described in WebGPU. If …","","Same as WaitForSubmissionIndex but waits for the most …","On wgpu-core based backends, block until the given …","","","","The texture can only be written in the shader and it:","Zero origin.","Zero origin.","0.0","Set stencil value to zero.","On the Metal backend, this is equivalent to …","Alpha component of the color","Increment the counter by the provided amount.","Adds an <code>Srgb</code> suffix to the given texture format, if the …","Enable advanced debugging and validation flags …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Mask of all features that are only available when …","Mask of all features which are part of the upstream WebGPU …","The range of allocations in <code>AllocatorReport::allocations</code> …","All live allocations, sub-allocated from memory blocks.","Valid bits for <code>TextureDescriptor::Usage</code> provided for …","Vertex formats allowed for creating and building BLASes","Alpha equation.","Specifies how the alpha channel of the textures should be …","List of supported alpha modes to use with the given …","When enabled, produces another sample mask per pixel based …","Returns the number of array layers.","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","Returns the bytes representation of the struct, ready to …","Returns the bytes representation of the struct, ready to …","Returns the bytes representation of the struct, ready to …","The copy aspect.","The copy aspect.","Aspect of the texture. Color textures must be …","Returns the aspect-specific format of the original format","Macros for validation internal to the wgpu.","Blue component of the color","Back face mode.","Backend used for device","Which <code>Backends</code> to enable.","Base array layer.","Base mip level.","The value added to the vertex index before indexing into …","Depth bias state.","","","Binding index. Must match shader index and be unique …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The blending that is used for this pipeline.","The number of bytes one texel block occupies during an …","Returns the dimension of a block of texels.","The number of bytes one texel block occupies during an …","All memory blockshe buffer to be copied to/from.","Amount of allocated gpu memory attributed to buffers, in …","","Bytes per “row” in an image.","Compares every limits within self is within the limits …","Compares every limits within self is within the limits …","Depth bias clamp value (absoluteolor equation.","The color space of this texture.","","Comparison function that determines if the fail_op or …","Surface that is required to be presentable with the …","Get the texture dimension required of this texture view …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","All flags that indicate if the backend is WebGPU compliant","Returns the number of components this format has.","Returns the number of components this format has taking …","","Computes the render extent of this texture.","If set to true, the primitives are rendered with …","Constant depth biasing factor, in basic units of the depth …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","<code>wgpu-core</code> counters.","The number of samples calculated per pixel (for MSAA). For …","If this value is Some, indicates this entry is an array. …","Total count of queries the set contains. Must not be zero. …","The face culling mode.","Enable recommended debugging and validation flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Comparison function used to compare depth values in the …","Operation that is performed when depth test fails but …","The depth of the extent or the number of array layers","If the depth aspect of the depth stencil attachment is …","If disabled, depth will not be written to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Desired maximum number of frames that the presentation …","<code>Backend</code>-specific device ID of the adapter","Type of device","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Dimensions of the texture.","These default limits are guaranteed to be compatible with …","These default limits are guaranteed to be compatible with …","Driver name","Driver info","Multiplier for the destination, which is stored in the …","Which DX12 shader compiler to use.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Operation that is performed when stencil test fails.","","The first index within the index buffer.","The instance ID of the first instance to draw.","The instance ID of the first instance to draw.","The Index of the first vertex to draw.","Combined boolean flags.","Additional property flags for the format.","Flags to tune the behavior of the instance.","Flags for the geometry.","Flags for the bottom level acceleration structure.","Flags for the bottom level acceleration structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates that only a fallback adapter can be returned. …","The <code>TextureFormat</code> of the image that this pipeline will …","Format of the depth/stencil buffer, must be special depth …","Format of the input","The texture format of the swap chain. The only formats …","Format of the texture.","Format of the attachment.","List of supported formats to use with the given adapter. …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Infer good defaults from the build type","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Returns the texture aspect for a given plane.","Front face mode.","The face to consider the front for the purpose of culling …","Green component of the color","Which OpenGL ES 3 minor version to request. Will be …","Returns the format features guaranteed by the WebGPU spec.","<code>wgpu-hal</code> counters.","Returns <code>true</code> if the format has a color aspect","Returns <code>true</code> if the format has a depth aspect","Returns true for buffer bindings with dynamic offset …","Returns <code>true</code> if the format has a stencil aspect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Height of the swap chain. Must be the same size as the …","Height of the extent","The number of indices to draw.","Number of indices. Only needed if an index buffer is used. …","Format of an index. Only needed if an index buffer is used.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The number of instances to draw.","The number of instances to draw.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Returns <code>true</code> for BCn compressed formats.","Returns <code>true</code> if the format is a combined depth-stencil …","Returns <code>true</code> for compressed formats.","Returns true if the depth testing is enabled.","Returns true if the state doesn’t mutate the depth …","Returns <code>true</code> if <code>self</code> is a depth or stencil component of …","Returns <code>true</code> if the format is a depth and/or stencil format","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns true if the stencil test is enabled.","Returns true if the depth biasing is enabled.","Returns if the given range represents a full resource, …","Returns true if this timestamp is the invalid timestamp.","Returns <code>true</code> if the format is a multi-planar format","Returns true if the result is <code>Self::SubmissionQueueEmpty</code>`.","Returns true if the state doesn’t mutate the target …","Returns true if the state doesn’t mutate either depth or …","Returns true if the face state doesn’t mutate the target …","Returns <code>true</code> for srgb formats.","Returns true if the state doesn’t mutate the stencil.","Returns true for strip topologies.","This maintain represents a wait of some kind.","Returns true if the underlying platform offers complete …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Debug label for the device.","Debug label of a buffer. This will show up in graphics …","Debug label for the command encoder. This will show up in …","Debug label of the texture. This will show up in graphics …","Debug label of this command buffer.","Debug label of the render bundle encoder. This will show …","Debug label for the query set.","Label for the bottom level acceleration structure.","Label for the top level acceleration structure.","Returns the layer range of a subresource range describes …","The layout of the texture data in this buffer.","Additional limits","Map on the wait index type.","Takes a closure and maps the label of the device …","Takes a closure and maps the label of the buffer …","Takes a closure and maps the label of the command encoder …","Takes a closure and maps the label of the texture …","Takes a closure and maps the label of the command buffer …","Takes a closure and maps the label of the render bundle …","Takes a closure and maps the label of the query set …","Takes a closure and maps the label of the blas descriptor …","Takes a closure and maps the label of the blas descriptor …","Maps the label and view_formats of the texture descriptor …","Map view_formats of the texture descriptor into another.","Allows a buffer to be mapped immediately after they are …","Bitmask that restricts the samples of a pixel modified by …","Utilitary math functions.","Amount of bind groups that can be attached to a pipeline …","Maximum binding index allowed in <code>create_bind_group_layout</code>. …","A limit above which buffer allocations are guaranteed to …","The maximum number of bytes necessary to hold one sample …","The maximum allowed number of color attachments.","Maximum value of the product of the <code>workgroup_size</code> …","The maximum value of the workgroup_size X dimension for a …","The maximum value of the workgroup_size Y dimension for a …","The maximum value of the workgroup_size Z dimension for a …","Maximum number of bytes used for workgroup memory in a …","The maximum value for each dimension of a …","Amount of storage buffer bindings that can be dynamic in a …","Amount of uniform buffer bindings that can be dynamic in a …","Number of instances that can be stored in the acceleration …","Maximum allowed number of components (scalars) of input or …","Calculates the maximum possible count of mipmaps.","Maximum number of live non-sampler bindings.","Amount of storage available for push constants in bytes. …","Amount of sampled textures visible in a single shader …","Amount of samplers visible in a single shader stage. …","Maximum size in bytes of a binding to a storage buffer. …","Amount of storage buffers visible in a single shader …","Amount of storage textures visible in a single shader …","Maximal number of invocations in a subgroup. Lower is “…","Maximum allowed value for the <code>size.depth_or_array_layers</code> …","Maximum allowed value for the <code>size.width</code> of a texture …","Maximum allowed value for the <code>size.width</code> and <code>size.height</code> …","Maximum allowed value for the <code>size.width</code>, <code>size.height</code>, and …","Maximum size in bytes of a binding to a uniform buffer. …","Amount of uniform buffers visible in a single shader …","Maximum length of <code>VertexBufferLayout::attributes</code>, summed …","Maximum value for <code>VertexBufferLayout::array_stride</code> when …","Maximum length of <code>VertexState::buffers</code> when creating a …","Number of gpu memory allocations.","Hints for memory allocation strategies.","Required <code>BufferBindingType::Storage</code> alignment for …","Minimal number of invocations in a subgroup. Higher is “…","Required <code>BufferBindingType::Uniform</code> alignment for …","The target mip level of the texture.","The target mip level of the texture.","Mip count of texture. For a texture with no extra mips, …","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Calculates the extent at a given mip level. Does <em>not</em> …","Calculates the extent at a given mip level.","Returns the mip level range of a subresource range …","The name provided to the <code>allocate()</code> function.","Adapter name","Returns true if the stencil state uses the reference value …","Returns true if the face state uses the reference value …","Returns true if the comparison depends on the reference …","Creates a counter with value 0.","Creates a new configuration where the shader is bound …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The offset in bytes of the allocation in its memory block.","Byte offset of the start of the input","Offset into the buffer that is the start of the texture. …","The binary operation applied to the source and destination,","The base texel of the texture in the selected <code>mip_level</code>. …","The base texel of the texture in the selected <code>mip_level</code>.","Panics if the MaintainResult is not Ok.","","","","","","Operation that is performed when stencil test success.","Calculates the physical size backing a texture of the given","","Returns the number of planes a multi-planar format has.","Controls the way each polygon is rasterized. Can be either …","Power preference for the adapter.","The premultiplication of this texture","Presentation mode of the swap chain. Fifo is the only mode …","List of supported presentation modes to use with the given …","","Red component of the color","Range in push constant memory to use for the stage. Must …","Get the counter’s value.","Stencil values are AND’d with this mask when reading and …","Returns <code>true</code> if the blend factor references the second …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Strips the <code>Srgb</code> suffix from the given texture format.","","Returns the required features (if any) in order to use the …","Specifies the features that are required by the device …","Specifies the limits that are required by the device …","“Rows” that make up a single “image”.","Query whether runtime bound checks are enabled in this …","Sample count of texture. If this is not 1, texture must …","Sample count supported by a given texture format.","Returns the sample type compatible with this format and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the counter to the provided value.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Location for this input. Must match the location in the …","Which collections of features shaders support. Defined in …","","Returns the byte size of the format.","The size in bytes of the allocation.","The size in bytes of this memory block.","Size of a buffer, in bytes.","Size of the texture. All components must be greater than …","Returns the size multiple requirement for a texture using …","Slope depth biasing factor.","Multiplier for the source, which is produced by the …","Stage push constant range is visible from. Each stage can …","Stencil state.","If the stencil aspect of the depth stencil attachment is …","This is equivalent to <code>std::assert</code> if the <code>strict_asserts</code> …","This is equivalent to <code>std::assert_eq</code> if the <code>strict_asserts</code> …","This is equivalent to <code>std::assert_ne</code> if the <code>strict_asserts</code> …","When drawing strip topologies with indices, this is the …","Decrement the counter by the provided amount.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","A <code>Vec</code> of supported sample counts.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Get and reset the counter’s value.","See …","The number of bytes occupied per pixel in a color …","The texture to be copied to/from.","The texture to be copied to/from.","Amount of allocated gpu memory attributed to textures, in …","","","Removes the third dimension from this origin","Adds the third dimension to this origin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the string name of the backend.","","Adds color space and premultiplied alpha information to …","Removes the colorspace information from the type.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The primitive topology used to interpret vertices.","Sum of the memory used by all allocations, in bytes.","Sum of the memory reserved by all memory blocks including …he type of the binding","Kind of query that this query set should contain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new configuration where the shader isn’t bound …","If set to true, the polygon depth is not clipped to 0-1 …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Update mode for the bottom level acceleration structure.","Update mode for the bottom level acceleration structure.","Usages of a buffer. If the buffer is used in any way that …","The usage of the swap chain. The only supported usage is …","Allowed usages of the texture. If used in other ways, the …","Bitflag of supported texture usages for the surface to use …","Returns true if the state relies on the constant color, …","Modify the current limits to use the buffer alignment …","Modify the current limits to use the resolution limits of …","<code>Backend</code>-specific vendor ID of the adapter","The number of vertices to draw.","Number of vertices.","Format of a vertex position, must be …","Specifies what view formats will be allowed when calling …","Specifies what view formats will be allowed when calling …","Which shader stages can see this binding.","Construct a wait variant","Construct a WaitForSubmissionIndex variant","Width of the swap chain. Must be the same size as the …","Width of the extent","Returns this set of flags, affected by environment …","Mask which enables/disables writes to different …","Stencil values are AND’d with this mask when writing to …","","X position of the origin","The number of work groups in X dimension.","","Y position of the origin","The number of work groups in Y dimension.","Z position of the origin","The number of work groups in Z dimension.","Allowed access to this texture.","Format of the texture.","Indicates that the binding has a dynamic offset.","The minimum size for a <code>BufferBinding</code> matching this entry, …","True if the texture has a sample count greater than 1. If …","Sample type of the texture binding.","Sub-type of the buffer binding.","Dimension of the texture view that is going to be sampled.","Dimension of the texture view that is going to be sampled.","Descriptor for each triangle geometry.","If <code>true</code>, the buffer can only be read in the shader, and it:","Path to the <code>dxcompiler.dll</code> file, or path to the directory …","Path to the <code>dxil.dll</code> file, or path to the directory …","Defines the range of allowed memory block sizes for …","compressed block dimensions","ASTC RGBA channel","If this is <code>false</code>, the texture can’t be sampled with a …","Aligns a <code>value</code> to an <code>alignment</code>."],"i":[7,7,11,15,5,15,11,54,8,97,0,0,0,0,52,0,26,0,0,72,4,0,0,78,77,77,109,63,63,63,63,63,63,63,63,63,63,63,63,63,63,8,7,81,12,10,11,81,6,8,7,58,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,39,97,0,0,0,0,0,112,7,14,14,11,8,9,8,14,7,0,0,12,13,12,13,8,57,86,86,0,0,0,0,0,0,96,0,51,0,46,0,0,50,50,57,50,82,50,82,50,50,82,5,7,8,7,8,5,7,6,70,70,94,4,4,4,4,4,0,26,0,115,0,0,0,46,0,101,0,0,0,0,0,115,51,51,39,0,108,0,7,7,4,4,4,4,39,72,4,4,4,4,4,4,0,10,7,9,14,8,8,8,0,0,77,77,59,0,96,94,17,17,17,17,17,17,17,17,17,17,58,0,108,6,5,11,81,39,0,129,72,72,0,64,40,71,8,12,12,8,7,0,80,0,0,0,0,0,77,70,70,0,78,73,0,0,46,0,0,70,70,15,72,72,0,59,56,56,87,129,40,7,0,12,12,6,8,10,10,10,10,10,7,7,7,77,0,0,48,52,0,0,48,39,52,86,0,8,9,8,16,4,87,72,96,40,72,16,53,106,132,51,51,51,51,51,51,51,51,78,104,104,0,0,46,129,7,7,7,7,7,15,15,54,6,7,0,48,106,0,26,26,26,59,56,65,0,78,0,78,0,112,0,0,0,0,0,12,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,8,11,81,13,53,54,7,95,95,0,0,86,70,115,0,52,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,7,6,7,7,7,7,7,7,7,7,7,12,13,10,7,7,7,7,8,97,0,0,0,0,0,0,94,17,17,17,17,17,17,17,17,45,45,45,17,17,17,17,51,51,51,51,51,101,4,0,26,0,0,93,97,0,132,129,52,0,0,0,7,13,7,7,7,7,7,7,7,7,7,7,7,12,0,81,97,0,0,0,0,0,0,0,0,0,129,106,104,56,56,111,12,7,8,8,94,69,17,17,69,17,17,17,17,17,17,93,115,64,17,17,17,17,17,64,5,9,12,8,7,9,14,8,0,7,8,6,7,109,109,109,73,0,0,0,46,39,8,81,65,65,0,0,0,95,83,84,51,70,104,81,1,4,5,6,7,5,8,9,10,11,12,13,14,15,16,7,7,37,38,62,7,54,79,118,61,19,103,21,24,25,100,102,103,4,0,81,66,47,119,103,103,24,68,33,33,98,6,7,5,8,9,10,11,12,13,14,15,16,6,7,5,8,9,10,11,12,13,14,15,16,6,7,5,8,9,10,11,12,13,14,15,16,6,7,5,8,9,10,11,12,13,14,15,16,6,6,7,7,5,5,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,6,7,5,8,9,10,11,12,13,14,15,16,6,7,5,8,9,10,11,12,13,14,15,16,55,4,4,4,38,1,132,33,34,35,36,37,38,39,40,6,41,7,5,29,43,44,8,45,46,47,48,49,9,50,51,52,53,54,55,56,57,58,59,60,61,10,62,63,64,4,11,65,66,67,68,69,70,71,72,73,74,17,12,75,76,77,78,13,118,79,129,80,81,82,83,84,85,19,26,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,14,21,24,25,107,108,109,119,110,111,112,113,114,15,16,115,1,132,33,34,35,36,37,38,39,40,6,41,7,5,29,43,44,8,45,46,47,48,49,9,50,51,52,53,54,55,56,57,58,59,60,61,10,62,63,64,4,11,65,66,67,68,69,70,71,72,73,74,17,12,75,76,77,78,13,118,79,129,80,81,82,83,84,85,19,26,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,14,21,24,25,107,108,109,119,110,111,112,113,114,15,16,115,99,33,33,92,29,29,67,1,33,34,35,36,37,38,39,40,6,41,7,5,29,43,44,8,45,46,47,48,49,9,50,51,52,53,54,55,56,57,58,59,60,61,10,62,63,64,4,11,65,66,67,68,69,70,71,72,73,74,17,12,75,76,77,78,13,79,80,81,82,83,84,85,19,26,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,14,21,24,25,107,108,109,110,111,112,113,114,15,16,115,1,33,34,35,36,37,38,39,40,6,41,7,5,29,43,44,8,45,46,47,48,49,9,50,51,52,53,54,55,56,57,58,59,60,61,10,62,63,64,4,11,65,66,67,68,69,70,71,72,73,74,17,12,75,76,77,78,13,79,80,81,82,83,84,85,19,26,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,14,21,24,25,107,108,109,110,111,112,113,114,15,16,115,43,44,8,45,80,54,102,33,71,41,50,6,7,5,8,9,10,11,12,13,14,15,16,8,4,4,33,19,60,67,6,7,5,8,9,10,11,12,13,14,15,16,6,7,8,9,10,11,12,13,14,15,16,35,61,98,105,60,5,1,33,34,35,40,6,41,7,5,29,43,44,48,49,50,52,53,56,57,59,60,61,11,66,67,69,70,71,73,76,77,78,118,81,84,85,26,86,87,89,91,92,93,94,103,21,24,25,107,108,109,119,68,71,85,90,68,39,40,6,41,7,29,43,44,8,45,46,47,48,49,9,50,51,52,53,54,55,56,57,58,59,60,61,10,62,63,64,4,11,66,67,68,69,70,71,72,73,74,17,12,75,76,77,78,13,79,81,82,83,84,85,19,26,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,14,107,110,111,112,113,114,15,16,115,79,47,47,6,7,5,8,9,10,11,12,13,14,15,16,19,29,29,47,47,53,119,6,7,5,8,9,10,11,12,13,14,15,16,39,40,6,41,7,5,29,43,44,8,45,46,47,9,50,51,52,53,54,55,56,57,58,59,60,61,10,62,63,64,4,11,66,67,68,69,70,71,72,73,74,17,12,75,76,77,78,13,79,80,81,82,83,84,85,19,26,86,87,88,89,90,91,93,94,95,96,97,98,101,103,104,14,109,110,112,113,114,15,16,115,6,7,5,8,9,10,11,12,13,14,15,16,71,33,24,21,24,21,44,62,119,110,113,114,1,36,38,39,39,40,6,6,6,6,6,41,7,7,7,7,7,5,5,5,5,5,29,43,44,8,8,8,8,8,45,46,47,48,49,9,9,9,9,9,50,51,52,53,54,55,56,57,58,59,60,61,10,10,10,10,10,62,63,64,4,11,11,11,11,11,65,66,67,68,69,70,71,72,73,74,17,12,12,12,12,12,75,76,77,78,13,13,13,13,13,118,79,129,80,81,82,83,84,85,19,26,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,14,14,14,14,14,21,24,25,107,108,109,119,110,111,112,113,114,15,15,15,15,15,16,16,16,16,16,115,41,55,68,74,79,19,90,118,1,132,33,34,35,36,37,38,39,40,6,6,41,7,5,29,43,44,8,45,46,47,48,49,9,50,51,52,53,54,55,55,56,57,58,59,60,61,10,62,63,64,4,11,65,66,67,68,69,70,71,72,73,74,17,12,75,76,77,78,13,118,79,129,80,81,82,83,84,85,19,26,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,14,21,24,25,107,108,109,119,110,111,112,113,114,15,16,115,6,7,5,8,9,10,11,12,13,14,15,16,6,6,7,7,5,5,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,6,7,5,8,9,10,11,12,13,14,15,16,5,6,7,5,8,9,10,11,12,13,14,15,16,6,7,5,8,9,10,11,12,13,14,15,16,26,66,60,81,119,4,35,4,4,97,4,39,40,6,41,7,5,29,43,44,8,45,9,50,51,52,53,54,55,56,57,58,59,60,61,10,62,63,64,4,11,66,67,68,69,70,71,72,73,74,17,12,75,76,77,78,13,79,82,83,84,85,19,26,86,87,88,89,90,91,93,94,95,96,97,98,104,14,109,112,113,114,15,16,79,85,24,110,110,6,7,5,8,9,10,11,12,13,14,15,16,21,24,6,7,5,8,9,10,11,12,13,14,15,16,6,7,5,8,9,10,11,12,13,14,15,16,1,132,33,34,35,36,37,38,39,40,6,41,7,5,29,43,44,8,45,46,47,48,49,9,50,51,52,53,54,55,56,57,58,59,60,61,10,62,63,64,4,11,65,66,67,68,69,70,71,72,73,74,17,12,75,76,77,78,13,118,79,129,80,81,82,83,84,85,19,26,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,14,21,24,25,107,108,109,119,110,111,112,113,114,15,16,115,6,7,5,8,9,10,11,12,13,14,15,16,6,7,5,8,9,10,11,12,13,14,15,16,4,4,4,68,68,4,4,6,7,5,8,9,10,11,12,13,14,15,16,66,67,103,80,4,132,66,68,71,4,68,56,65,44,6,7,5,8,9,10,11,12,13,14,15,16,6,7,5,8,9,10,11,12,13,14,15,16,49,75,76,19,89,91,105,113,114,103,99,44,65,49,75,76,19,89,91,105,113,114,19,79,75,61,0,29,29,29,29,29,29,29,29,29,29,29,29,29,114,29,85,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,33,49,29,29,29,100,102,19,103,85,19,103,36,47,66,71,72,1,107,6,7,5,8,9,10,11,12,13,14,15,16,36,74,92,53,100,102,132,43,44,8,45,80,71,85,33,4,60,41,102,79,118,33,81,88,1,66,51,6,7,5,8,9,10,11,12,13,14,15,16,4,33,4,49,49,92,107,19,10,4,33,39,40,6,41,7,29,43,44,8,45,46,47,48,49,9,50,51,52,53,54,55,56,57,58,59,60,61,10,62,63,64,4,11,66,67,68,69,70,71,72,73,74,17,12,75,76,77,78,13,79,81,82,83,84,85,19,26,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,14,107,110,111,112,113,114,15,16,115,1,6,7,5,8,9,10,11,12,13,14,15,16,74,44,33,17,36,37,75,19,4,67,53,88,68,90,0,0,0,60,1,6,7,5,8,9,10,11,12,13,14,15,16,6,7,5,8,9,10,11,12,13,14,15,16,10,6,7,5,8,9,10,11,12,13,14,15,16,1,4,4,100,102,33,33,33,84,83,1,33,34,35,36,37,38,39,40,6,41,7,5,29,43,44,8,45,46,47,48,49,9,50,51,52,53,54,55,56,57,58,59,60,61,10,62,63,64,4,11,65,66,67,68,69,70,71,72,73,74,17,12,75,76,77,78,13,79,80,81,82,83,84,85,19,26,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,14,21,24,25,107,108,109,110,111,112,113,114,15,16,115,39,39,100,102,6,7,5,8,9,10,11,12,13,14,15,16,60,38,38,1,132,33,34,35,36,37,38,39,40,6,41,7,5,29,43,44,8,45,46,47,48,49,9,50,51,52,53,54,55,56,57,58,59,60,61,10,62,63,64,4,11,65,66,67,68,69,70,71,72,73,74,17,12,75,76,77,78,13,118,79,129,80,81,82,83,84,85,19,26,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,14,21,24,25,107,108,109,119,110,111,112,113,114,15,16,115,1,132,33,34,35,36,37,38,39,40,6,41,7,5,29,43,44,8,45,46,47,48,49,9,50,51,52,53,54,55,56,57,58,59,60,61,10,62,63,64,4,11,65,66,67,68,69,70,71,72,73,74,17,12,75,76,77,78,13,118,79,129,80,81,82,83,84,85,19,26,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,14,21,24,25,107,108,109,119,110,111,112,113,114,15,16,115,98,105,1,132,33,34,35,36,37,38,39,40,6,41,7,5,29,43,44,8,45,46,47,48,49,9,50,51,52,53,54,55,56,57,58,59,60,61,10,62,63,64,4,11,65,66,67,68,69,70,71,72,73,74,17,12,75,76,77,78,13,118,79,129,80,81,82,83,84,85,19,26,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,14,21,24,25,107,108,109,119,110,111,112,113,114,15,16,115,107,60,6,7,5,8,9,10,11,12,13,14,15,16,113,114,75,79,19,118,53,29,29,47,21,110,110,79,19,98,65,65,79,85,5,55,66,83,84,25,83,84,25,84,25,142,142,143,143,144,144,143,144,142,145,146,147,147,148,149,149,150,0],"fc":[705],"p":[[5,"InternalCounter",0],[1,"isize"],[1,"tuple"],[6,"TextureFormat",0],[5,"InstanceFlags",0],[5,"Backends",0],[5,"Features",0],[5,"DownlevelFlags",0],[5,"ShaderStages",0],[5,"TextureFormatFeatureFlags",0],[5,"ColorWrites",0],[5,"BufferUsages",0],[5,"TextureUsages",0],[5,"PipelineStatisticsTypes",0],[5,"AccelerationStructureFlags",0],[5,"AccelerationStructureGeometryFlags",0],[6,"VertexFormat",0],[5,"Vec",2949],[5,"TextureDescriptor",0],[1,"u32"],[5,"DrawIndirectArgs",0],[1,"u8"],[1,"slice"],[5,"DrawIndexedIndirectArgs",0],[5,"DispatchIndirectArgs",0],[6,"TextureAspect",0],[6,"Option",2950],[1,"u64"],[5,"Limits",0],[1,"bool"],[1,"str"],[10,"FnMut",2951],[5,"HalCounters",0],[5,"CoreCounters",0],[5,"InternalCounters",0],[5,"AllocationReport",0],[5,"MemoryBlockReport",0],[5,"AllocatorReport",0],[6,"Backend",0],[6,"PowerPreference",0],[5,"RequestAdapterOptions",0],[10,"Clone",2952],[5,"DownlevelLimits",0],[5,"DownlevelCapabilities",0],[6,"ShaderModel",0],[6,"DeviceType",0],[5,"AdapterInfo",0],[6,"MemoryHints",0],[5,"DeviceDescriptor",0],[6,"TextureViewDimension",0],[6,"BlendFactor",0],[6,"BlendOperation",0],[5,"BlendComponent",0],[5,"BlendState",0],[5,"ColorTargetState",0],[6,"PrimitiveTopology",0],[6,"FrontFace",0],[6,"Face",0],[6,"PolygonMode",0],[5,"PrimitiveState",0],[5,"MultisampleState",0],[5,"TextureFormatFeatures",0],[6,"AstcBlock",0],[6,"AstcChannel",0],[6,"Maintain",0],[5,"StencilState",0],[5,"DepthBiasState",0],[5,"DepthStencilState",0],[6,"IndexFormat",0],[6,"StencilOperation",0],[5,"StencilFaceState",0],[6,"CompareFunction",0],[6,"VertexStepMode",0],[5,"VertexAttribute",0],[5,"BufferDescriptor",0],[5,"CommandEncoderDescriptor",0],[6,"PresentMode",0],[6,"CompositeAlphaMode",0],[5,"SurfaceConfiguration",0],[5,"PresentationTimestamp",0],[5,"Color",0],[6,"TextureDimension",0],[5,"Origin2d",0],[5,"Origin3d",0],[5,"Extent3d",0],[6,"AddressMode",0],[6,"FilterMode",0],[5,"PushConstantRange",0],[5,"CommandBufferDescriptor",0],[5,"RenderBundleDepthStencil",0],[5,"RenderBundleDescriptor",0],[5,"ImageDataLayout",0],[6,"BufferBindingType",0],[6,"TextureSampleType",0],[6,"StorageTextureAccess",0],[6,"SamplerBindingType",0],[6,"BindingType",0],[5,"BindGroupLayoutEntry",0],[5,"ImageCopyBuffer",0],[5,"ImageCopyTexture",0],[6,"PredefinedColorSpace",0],[5,"ImageCopyTextureTagged",0],[5,"ImageSubresourceRange",0],[6,"SamplerBorderColor",0],[5,"QuerySetDescriptor",0],[6,"QueryType",0],[5,"ShaderBoundChecks",0],[6,"Dx12Compiler",0],[6,"Gles3MinorVersion",0],[5,"BlasTriangleGeometrySizeDescriptor",0],[6,"BlasGeometrySizeDescriptors",0],[6,"AccelerationStructureUpdateMode",0],[5,"CreateBlasDescriptor",0],[5,"CreateTlasDescriptor",0],[6,"DeviceLostReason",0],[6,"Ordering",2953],[10,"Default",2954],[5,"SurfaceCapabilities",0],[5,"InstanceDescriptor",0],[6,"Result",2955],[10,"Deserializer",2956],[10,"Deserialize",2956],[10,"PartialEq",2953],[17,"Item"],[10,"IntoIterator",2957],[5,"Formatter",2958],[8,"Result",2958],[10,"Debug",2958],[6,"SurfaceStatus",0],[10,"Hasher",2959],[10,"Hash",2959],[6,"MaintainResult",0],[5,"Iter",2960],[5,"IterNames",2960],[5,"Range",2961],[17,"Output"],[10,"FnOnce",2951],[10,"Serializer",2962],[10,"Serialize",2962],[5,"String",2963],[5,"TypeId",2964],[15,"StorageTexture",2931],[15,"Buffer",2931],[15,"Texture",2931],[15,"Triangles",2940],[15,"Storage",2941],[15,"Dxc",2942],[15,"Manual",2944],[15,"Astc",2945],[15,"Float",2947]],"b":[[654,"impl-Flags-for-Backends"],[655,"impl-Backends"],[656,"impl-Features"],[657,"impl-Flags-for-Features"],[658,"impl-InstanceFlags"],[659,"impl-Flags-for-InstanceFlags"],[660,"impl-Flags-for-DownlevelFlags"],[661,"impl-DownlevelFlags"],[662,"impl-Flags-for-ShaderStages"],[663,"impl-ShaderStages"],[664,"impl-TextureFormatFeatureFlags"],[665,"impl-Flags-for-TextureFormatFeatureFlags"],[666,"impl-ColorWrites"],[667,"impl-Flags-for-ColorWrites"],[668,"impl-BufferUsages"],[669,"impl-Flags-for-BufferUsages"],[670,"impl-TextureUsages"],[671,"impl-Flags-for-TextureUsages"],[672,"impl-Flags-for-PipelineStatisticsTypes"],[673,"impl-PipelineStatisticsTypes"],[674,"impl-Flags-for-AccelerationStructureFlags"],[675,"impl-AccelerationStructureFlags"],[676,"impl-AccelerationStructureGeometryFlags"],[677,"impl-Flags-for-AccelerationStructureGeometryFlags"],[1480,"impl-Display-for-Backend"],[1481,"impl-Debug-for-Backend"],[1483,"impl-UpperHex-for-Backends"],[1484,"impl-Binary-for-Backends"],[1485,"impl-Debug-for-Backends"],[1486,"impl-Octal-for-Backends"],[1487,"impl-LowerHex-for-Backends"],[1489,"impl-Debug-for-Features"],[1490,"impl-LowerHex-for-Features"],[1491,"impl-Binary-for-Features"],[1492,"impl-Octal-for-Features"],[1493,"impl-UpperHex-for-Features"],[1494,"impl-Binary-for-InstanceFlags"],[1495,"impl-Octal-for-InstanceFlags"],[1496,"impl-Debug-for-InstanceFlags"],[1497,"impl-LowerHex-for-InstanceFlags"],[1498,"impl-UpperHex-for-InstanceFlags"],[1502,"impl-UpperHex-for-DownlevelFlags"],[1503,"impl-Binary-for-DownlevelFlags"],[1504,"impl-LowerHex-for-DownlevelFlags"],[1505,"impl-Debug-for-DownlevelFlags"],[1506,"impl-Octal-for-DownlevelFlags"],[1512,"impl-Octal-for-ShaderStages"],[1513,"impl-Binary-for-ShaderStages"],[1514,"impl-Debug-for-ShaderStages"],[1515,"impl-UpperHex-for-ShaderStages"],[1516,"impl-LowerHex-for-ShaderStages"],[1529,"impl-UpperHex-for-TextureFormatFeatureFlags"],[1530,"impl-Binary-for-TextureFormatFeatureFlags"],[1531,"impl-Debug-for-TextureFormatFeatureFlags"],[1532,"impl-Octal-for-TextureFormatFeatureFlags"],[1533,"impl-LowerHex-for-TextureFormatFeatureFlags"],[1538,"impl-Binary-for-ColorWrites"],[1539,"impl-Debug-for-ColorWrites"],[1540,"impl-Octal-for-ColorWrites"],[1541,"impl-UpperHex-for-ColorWrites"],[1542,"impl-LowerHex-for-ColorWrites"],[1554,"impl-Octal-for-BufferUsages"],[1555,"impl-Binary-for-BufferUsages"],[1556,"impl-LowerHex-for-BufferUsages"],[1557,"impl-UpperHex-for-BufferUsages"],[1558,"impl-Debug-for-BufferUsages"],[1563,"impl-LowerHex-for-TextureUsages"],[1564,"impl-UpperHex-for-TextureUsages"],[1565,"impl-Debug-for-TextureUsages"],[1566,"impl-Octal-for-TextureUsages"],[1567,"impl-Binary-for-TextureUsages"],[1600,"impl-Binary-for-PipelineStatisticsTypes"],[1601,"impl-Debug-for-PipelineStatisticsTypes"],[1602,"impl-Octal-for-PipelineStatisticsTypes"],[1603,"impl-LowerHex-for-PipelineStatisticsTypes"],[1604,"impl-UpperHex-for-PipelineStatisticsTypes"],[1617,"impl-UpperHex-for-AccelerationStructureFlags"],[1618,"impl-LowerHex-for-AccelerationStructureFlags"],[1619,"impl-Octal-for-AccelerationStructureFlags"],[1620,"impl-Debug-for-AccelerationStructureFlags"],[1621,"impl-Binary-for-AccelerationStructureFlags"],[1622,"impl-UpperHex-for-AccelerationStructureGeometryFlags"],[1623,"impl-Binary-for-AccelerationStructureGeometryFlags"],[1624,"impl-LowerHex-for-AccelerationStructureGeometryFlags"],[1625,"impl-Debug-for-AccelerationStructureGeometryFlags"],[1626,"impl-Octal-for-AccelerationStructureGeometryFlags"],[1757,"impl-Flags-for-Backends"],[1758,"impl-Backends"],[1759,"impl-Flags-for-Features"],[1760,"impl-Features"],[1761,"impl-InstanceFlags"],[1762,"impl-Flags-for-InstanceFlags"],[1763,"impl-DownlevelFlags"],[1764,"impl-Flags-for-DownlevelFlags"],[1765,"impl-Flags-for-ShaderStages"],[1766,"impl-ShaderStages"],[1767,"impl-TextureFormatFeatureFlags"],[1768,"impl-Flags-for-TextureFormatFeatureFlags"],[1769,"impl-Flags-for-ColorWrites"],[1770,"impl-ColorWrites"],[1771,"impl-BufferUsages"],[1772,"impl-Flags-for-BufferUsages"],[1773,"impl-Flags-for-TextureUsages"],[1774,"impl-TextureUsages"],[1775,"impl-PipelineStatisticsTypes"],[1776,"impl-Flags-for-PipelineStatisticsTypes"],[1777,"impl-AccelerationStructureFlags"],[1778,"impl-Flags-for-AccelerationStructureFlags"],[1779,"impl-Flags-for-AccelerationStructureGeometryFlags"],[1780,"impl-AccelerationStructureGeometryFlags"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
